---
title: "[Swift] 클로저(Closure)"
excerpt: "클로저(Closure)는 함수"
  
categories:
  - swift
tags:
  - [swift, Closure]

permalink: /swift/closure/ 
toc: true           #On this page 보이기 
toc_sticky: true    #on this page 스크롤에 따라 움직이도록 
comments: true      #댓글
---

# 클로저란? 
- 일정 기능을 하는 코드를 하나의 블록으로 모아놓은 것을 말합니다. = 함수입니다. 
- 함수는 클로저의 한 형태입니다. 

```swift
//함수의 정의 
func nameFunction(str: String) -> String {
    return "Hello, \(str)"
}
print(nameFunction(str: "imhs"))   //출력: Hello, imhs

// nameFunction을 클로저의 형태로 변경하면 아래와 같습니다. 
// name 변수에 함수를 담을 수 있습니다. 
var name = {(str: String) -> String in
    return "Hello, \(str)"
}
print(name("imhs")) //출력: Hello, imhs
```
- 클로저는 변수나 상수가 선언된 위치에서 참조를 획득하고 저장할 수 있습니다. 이를 변수나 상수의 클로징(잠금)이라고 하며 클로저는 여기서 착안된 이름입니다. 
![](/assets/images/categories/swift/2024-03-08-closure.png)

# 클로저는 일급 객체 (First-class object)  
1급 객체란 다음 세 가지 조건을 만족하는 객체를 가리킵니다. 
1. 변수나 데이터 구조 안에 담을 수 있어야 합니다.
2. 파라미터로 전달할 수 있어야 합니다. 
3. 함수에서 반환값으로 사용할 수 있어야 합니다.  

```swift 
//1. 변수에 할당 
func sayHello() -> Void {
    print("Hello!")
}
let myFunction = sayHello
myFunction() // "Hello!"를 출력합니다.

// 2. 다른 함수의 인자로 전달
func performAction(action: () -> Void) {
    action()
}
performAction(action: sayHello) // "Hello!"를 출력합니다.

// 3. 함수의 반환값으로 사용
func createGreetingFunction() -> () -> Void {
    return sayHello
}
let greetingFunction = createGreetingFunction()
greetingFunction() // "Hello!"를 출력합니다.
```

# 클로저의 형태 
```swift
let closure = { (name: String) in 
    return "Hello \(name)"
}
```
