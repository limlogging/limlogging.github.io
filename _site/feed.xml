<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-03-20T09:52:55+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">limlogging Devlog</title><author><name>HyeongSub Lim</name></author><entry><title type="html">[프로그래머스/Swift] K번째수</title><link href="http://localhost:4000/algorithm/K%EB%B2%88%EC%A7%B8%EC%88%98/" rel="alternate" type="text/html" title="[프로그래머스/Swift] K번째수" /><published>2024-03-20T00:00:00+09:00</published><updated>2024-03-20T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/K%EB%B2%88%EC%A7%B8%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/K%EB%B2%88%EC%A7%B8%EC%88%98/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.</li>
  <li>예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면
    <ol>
      <li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.</li>
      <li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.</li>
      <li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>
    </ol>
  </li>
  <li>
    <p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>
  </li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/42748" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>array의 길이는 1 이상 100 이하입니다.</li>
  <li>array의 각 원소는 1 이상 100 이하입니다.</li>
  <li>commands의 길이는 1 이상 50 이하입니다.</li>
  <li>commands의 각 원소는 길이가 3입니다.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <tbody>
    <tr>
      <td>array</td>
      <td>commands</td>
      <td>return</td>
    </tr>
    <tr>
      <td>[1, 5, 2, 6, 3, 7, 4]</td>
      <td>[[2, 5, 3], [4, 4, 1], [1, 7, 3]]</td>
      <td>[5, 6, 3]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<ul>
  <li>[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.</li>
  <li>[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.</li>
  <li>[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">array</span><span class="p">:[</span><span class="kt">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nv">commands</span><span class="p">:[[</span><span class="kt">Int</span><span class="p">]])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
        
    <span class="k">for</span> <span class="n">arrCom</span> <span class="k">in</span> <span class="n">commands</span> <span class="p">{</span>
        <span class="c1">//배열 자르고 정렬</span>
        <span class="k">let</span> <span class="nv">tempArr</span> <span class="o">=</span> <span class="n">array</span><span class="p">[</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="o">...</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span>
        <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">tempArr</span><span class="p">[</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">arr</span>
<span class="p">}</span>
</code></pre></div></div>
<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">array</span><span class="p">:[</span><span class="kt">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nv">commands</span><span class="p">:[[</span><span class="kt">Int</span><span class="p">]])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">commands</span><span class="o">.</span><span class="nf">map</span><span class="p">({(</span><span class="n">key</span><span class="p">)</span> <span class="k">in</span>
        <span class="k">return</span> <span class="n">array</span><span class="p">[(</span><span class="n">key</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">...</span><span class="p">(</span><span class="n">key</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">)]</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()[</span><span class="n">key</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="p">})</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="의견">의견</h1>
<ul>
  <li>어제 문자열 고민을 해서 금방 풀었다. sorted뒤에 arrCom[2] - 1 부분을 붙였는데 에러가 발생해서 따로 상수를 만들었는데 다른사람의 풀이를 보니 내가 작성했던 코드 중에서 에러가 발생한 것 같다. 다시 해보니까 잘되더라
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">array</span><span class="p">[</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="o">...</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()[</span><span class="n">arrCom</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
</code></pre></div>    </div>
    <p>그치만 배열 따로 만들어서 추가 해야겠다고 생각했는데 array에서 바로 return은 생각도 못했는데 저렇게도 되는구나 ..</p>
  </li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="K번째수" /><summary type="html"><![CDATA[[프로그래머스/Swift] K번째수]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 두 개 뽑아서 더하기</title><link href="http://localhost:4000/algorithm/%EB%91%90%EA%B0%9C%EB%BD%91%EC%95%84%EC%84%9C%EB%8D%94%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 두 개 뽑아서 더하기" /><published>2024-03-20T00:00:00+09:00</published><updated>2024-03-20T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EB%91%90%EA%B0%9C%EB%BD%91%EC%95%84%EC%84%9C%EB%8D%94%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EB%91%90%EA%B0%9C%EB%BD%91%EC%95%84%EC%84%9C%EB%8D%94%ED%95%98%EA%B8%B0/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>
    <p>정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.</p>
  </li>
  <li>
    <p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/68644" target="_blank">문제 풀기</a></p>
  </li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>numbers의 길이는 2 이상 100 이하입니다.
    <ul>
      <li>numbers의 모든 수는 0 이상 100 이하입니다.</li>
    </ul>
  </li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <tbody>
    <tr>
      <td>numbers</td>
      <td>result</td>
    </tr>
    <tr>
      <td>[2,1,3,4,1]</td>
      <td>[2,3,4,5,6,7]</td>
    </tr>
    <tr>
      <td>[5,0,2,7]</td>
      <td>[2,5,7,9,12]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-1">입출력 예 #1</h2>
<ul>
  <li>2 = 1 + 1 입니다. (1이 numbers에 두 개 있습니다.)</li>
  <li>3 = 2 + 1 입니다.</li>
  <li>4 = 1 + 3 입니다.</li>
  <li>5 = 1 + 4 = 2 + 3 입니다.</li>
  <li>6 = 2 + 4 입니다.</li>
  <li>7 = 3 + 4 입니다.</li>
  <li>따라서 [2,3,4,5,6,7] 을 return 해야 합니다.</li>
</ul>

<h2 id="입출력-예-2">입출력 예 #2</h2>
<ul>
  <li>2 = 0 + 2 입니다.</li>
  <li>5 = 5 + 0 입니다.</li>
  <li>7 = 0 + 7 = 5 + 2 입니다.</li>
  <li>9 = 2 + 7 입니다.</li>
  <li>12 = 5 + 7 입니다.</li>
  <li>따라서 [2,5,7,9,12] 를 return 해야 합니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">numbers</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="n">numbers</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">2</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">...</span><span class="n">numbers</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">{</span>
            <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="c1">//중복제거 후 정렬 값 리턴</span>
    <span class="k">return</span> <span class="kt">Set</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>
<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">numbers</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">result</span> <span class="o">=</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]()</span>

    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span> <span class="o">..&lt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">..&lt;</span> <span class="n">numbers</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
            <span class="k">let</span> <span class="nv">num</span> <span class="o">=</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
            <span class="k">if</span> <span class="o">!</span><span class="n">result</span><span class="o">.</span><span class="nf">contains</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="의견">의견</h1>
<ul>
  <li>개인과제로 야구게임할때 중복체크하는 부분에 Set을 썼는데 이번에 잊지않고 사용했다!</li>
  <li>다른 사람 풀이도 비슷</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="두 개 뽑아서 더하기" /><summary type="html"><![CDATA[[프로그래머스/Swift] 두 개 뽑아서 더하기]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 문자열 내 마음대로 정렬하기</title><link href="http://localhost:4000/algorithm/%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 문자열 내 마음대로 정렬하기" /><published>2024-03-19T00:00:00+09:00</published><updated>2024-03-19T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>
    <p>문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 [“sun”, “bed”, “car”]이고 n이 1이면 각 단어의 인덱스 1의 문자 “u”, “e”, “a”로 strings를 정렬합니다.</p>
  </li>
  <li>
    <p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/12915" target="_blank">문제 풀기</a></p>
  </li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>strings는 길이 1 이상, 50이하인 배열입니다.</li>
  <li>strings의 원소는 소문자 알파벳으로 이루어져 있습니다.</li>
  <li>strings의 원소는 길이 1 이상, 100이하인 문자열입니다.</li>
  <li>모든 strings의 원소의 길이는 n보다 큽니다.</li>
  <li>인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <tbody>
    <tr>
      <td>strings</td>
      <td>n</td>
      <td>return</td>
    </tr>
    <tr>
      <td>[“sun”, “bed”, “car”]</td>
      <td>1</td>
      <td>[“car”, “bed”, “sun”]</td>
    </tr>
    <tr>
      <td>[“abce”, “abcd”, “cdx”]</td>
      <td>2</td>
      <td>[“abcd”, “abce”, “cdx”]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-1">입출력 예 #1</h2>
<ul>
  <li>“sun”, “bed”, “car”의 1번째 인덱스 값은 각각 “u”, “e”, “a” 입니다. 이를 기준으로 strings를 정렬하면 [“car”, “bed”, “sun”] 입니다.</li>
</ul>

<h2 id="입출력-예-2">입출력 예 #2</h2>
<ul>
  <li>“abce”와 “abcd”, “cdx”의 2번째 인덱스 값은 “c”, “c”, “x”입니다. 따라서 정렬 후에는 “cdx”가 가장 뒤에 위치합니다. “abce”와 “abcd”는 사전순으로 정렬하면 “abcd”가 우선하므로, 답은 [“abcd”, “abce”, “cdx”] 입니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">strings</span><span class="p">:[</span><span class="kt">String</span><span class="p">],</span> <span class="n">_</span> <span class="nv">n</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">arr</span> <span class="o">=</span> <span class="n">strings</span><span class="o">.</span><span class="n">sorted</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">ch1</span> <span class="o">=</span> <span class="nv">$0</span><span class="p">[</span><span class="nv">$0</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$0</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)]</span>
        <span class="k">let</span> <span class="nv">ch2</span> <span class="o">=</span> <span class="nv">$1</span><span class="p">[</span><span class="nv">$1</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$1</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)]</span>
        
        <span class="c1">//문자가 같으면 문자열비교</span>
        <span class="k">if</span> <span class="n">ch1</span> <span class="o">==</span> <span class="n">ch2</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nv">$0</span> <span class="o">&lt;</span> <span class="nv">$1</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span> <span class="n">ch1</span> <span class="o">&lt;</span> <span class="n">ch2</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">arr</span>
<span class="p">}</span>
</code></pre></div></div>
<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">strings</span><span class="p">:[</span><span class="kt">String</span><span class="p">],</span> <span class="n">_</span> <span class="nv">n</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">strings</span><span class="o">.</span><span class="n">sorted</span><span class="p">{</span>  <span class="kt">Array</span><span class="p">(</span><span class="nv">$0</span><span class="p">)[</span><span class="n">n</span><span class="p">]</span> <span class="o">==</span> <span class="kt">Array</span><span class="p">(</span><span class="nv">$1</span><span class="p">)[</span><span class="n">n</span><span class="p">]</span> <span class="p">?</span> <span class="nv">$0</span> <span class="o">&lt;</span> <span class="nv">$1</span> <span class="p">:</span>  <span class="kt">Array</span><span class="p">(</span><span class="nv">$0</span><span class="p">)[</span><span class="n">n</span><span class="p">]</span> <span class="o">&lt;</span> <span class="kt">Array</span><span class="p">(</span><span class="nv">$1</span><span class="p">)[</span><span class="n">n</span><span class="p">]</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="의견">의견</h1>
<ul>
  <li>알고리즘 풀면서 가장 오래걸린 문제였고 어려웠다.
    <ol>
      <li>문제를 확인하고 입력받은 인덱스부터 마지막까지의 문자를 배열에 만들고 기존배열에서 contains를 통해 원래 문자열을 찾아서 다시 배열에 저장하고 그 배열을 리턴하는 것으로 생각했다.</li>
      <li>딕셔너리를 만들어 key에 원래 문자열, value에 잘려진 문자열을 저장하고 value값으로 정렬 후 key값을 새로 배열에 담아 출력했다. 일부 테스트는 통과했는데 문자가 중복되는 경우 문자열 sort를 해줘야하는데 거기서 매끄럽지 못했다.</li>
      <li>sort를 계속 하다가 sorted 클로저에서 직접 조건을 추가하고 리턴해보기로 했다. index의 문자를 구하고 테스트 했는데 또 일부는 맞고 일부는 틀린 실패가 떴다.
        <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//수정 전 </span>
<span class="k">let</span> <span class="nv">ch1</span> <span class="o">=</span> <span class="nv">$0</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$0</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)</span>
<span class="k">let</span> <span class="nv">ch2</span> <span class="o">=</span> <span class="nv">$1</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$1</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)</span>
<span class="c1">// 수정 후</span>
<span class="k">let</span> <span class="nv">ch1</span> <span class="o">=</span> <span class="nv">$0</span><span class="p">[</span><span class="nv">$0</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$0</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)]</span>
<span class="k">let</span> <span class="nv">ch2</span> <span class="o">=</span> <span class="nv">$1</span><span class="p">[</span><span class="nv">$1</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$1</span><span class="o">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nv">offsetBy</span><span class="p">:</span> <span class="n">n</span><span class="p">)]</span>
</code></pre></div>        </div>
        <p>다시 확인했는데 수정 전 코드로하면 문자가 출력되는게 아니라 Index(_rawBits: 65799) 이런식으로 String.index타입으로 출력이 되었다. 
스위프트에서 문자열에 정수 인덱스 사용이 불가능 하다는 것을 알게되었다 !</p>
      </li>
    </ol>
  </li>
  <li><strong>쉽게 쉽게 푸는 다른 사람들의 풀이를 보면서 오늘도 존경심을 가진다.</strong></li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="문자열 내 마음대로 정렬하기" /><summary type="html"><![CDATA[[프로그래머스/Swift] 문자열 내 마음대로 정렬하기]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 입문 - 간단한 카운터 앱 만들기</title><link href="http://localhost:4000/sparta/%EA%B0%84%EB%8B%A8%ED%95%9C%EC%B9%B4%EC%9A%B4%ED%84%B0%EC%95%B1/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 입문 - 간단한 카운터 앱 만들기" /><published>2024-03-19T00:00:00+09:00</published><updated>2024-03-19T00:00:00+09:00</updated><id>http://localhost:4000/sparta/%EA%B0%84%EB%8B%A8%ED%95%9C%EC%B9%B4%EC%9A%B4%ED%84%B0%EC%95%B1</id><content type="html" xml:base="http://localhost:4000/sparta/%EA%B0%84%EB%8B%A8%ED%95%9C%EC%B9%B4%EC%9A%B4%ED%84%B0%EC%95%B1/"><![CDATA[<h1 id="간단한-카운터-앱-만들기">간단한 카운터 앱 만들기</h1>
<ul>
  <li>swift 문법 강의 주차가 끝나고 ios 앱 개발 입문 강의를 들으며 강의에 포함된 간단한 카운터 앱 만들기 과제를 만들었습니다.</li>
</ul>

<h1 id="요구사항">요구사항</h1>
<h2 id="화면">화면</h2>
<p><img src="/assets/images/categories/sparta/2024-03-19-카운터앱.png" alt="카운터앱" /></p>

<h2 id="레이아웃-요구사항">레이아웃 요구사항</h2>
<ul>
  <li>UILabel이 가운데 위치하게 해 주세요.</li>
  <li>UILabel을 기준으로 상단에는 감소 버튼, 아래에는 증가 버튼을 위치시켜 주세요.</li>
  <li>UILabel과 UIButton사이의 간격은 16px로 설정해 주세요.</li>
  <li>AutoLayout을 사용해 주세요.</li>
</ul>

<h2 id="로직-요구사항">로직 요구사항</h2>
<ul>
  <li>count의 시작은 0으로 시작해 주세요.</li>
  <li>감소버튼을 눌렀을 때, -1씩 감소시켜 UILabel에 표시해 주세요.</li>
  <li>증가버튼을 눌렀을 때, +1씩 증가시켜 UILabel에 표시해 주세요.</li>
</ul>

<h1 id="과제-완성">과제 완성</h1>
<h2 id="나의-화면">나의 화면</h2>
<p><img src="/assets/images/categories/sparta/2024-03-19-카운터앱과제완성.png" alt="카운터앱과제완성" /></p>

<h2 id="제약-조건">제약 조건</h2>
<p><img src="/assets/images/categories/sparta/2024-03-19-카운터앱과제제약조건.png" alt="카운터앱과제제약조건" /></p>

<h2 id="나의-코드">나의 코드</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//</span>
<span class="c1">//  ViewController.swift</span>
<span class="c1">//  SimpleCounter</span>
<span class="c1">//</span>
<span class="c1">//  Created by imhs on 3/18/24.</span>
<span class="c1">//</span>

<span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">counterLabel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>
    
    <span class="k">var</span> <span class="nv">count</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="n">counterLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1">//감소</span>
    <span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">decreaseButtonTapped</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">Any</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span>
        <span class="n">counterLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">//증가</span>
    <span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">increaseButtonTapped</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">Any</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">counterLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="강의-구현-코드">강의 구현 코드</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">textLabel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>
    <span class="kd">private</span> <span class="k">var</span> <span class="nv">count</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span> 

    <span class="c1">// 감소 버튼이 클릭된 경우 </span>
    <span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">tappedDecreaseButton</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UIButton</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span> <span class="c1">// count를 -1 합니다. </span>
        <span class="k">self</span><span class="o">.</span><span class="nf">refreshTextLabel</span><span class="p">()</span> <span class="c1">// textLabel을 새로고침 합니다. </span>
    <span class="p">}</span>
    
    <span class="c1">// 증가 버튼이 클릭된 경우  </span>
    <span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">tappedIncreaseButton</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UIButton</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span> <span class="c1">// count를 +1 합니다. </span>
        <span class="k">self</span><span class="o">.</span><span class="nf">refreshTextLabel</span><span class="p">()</span> <span class="c1">// textLabel을 새로고침 합니다. </span>
    <span class="p">}</span>

    <span class="c1">// count값을 self.textLabel의 text에 반영합니다. </span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">refreshTextLabel</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">textLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">count</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1">// viewDidLoad 생명주기 활용 </span>
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="k">self</span><span class="o">.</span><span class="nf">refreshTextLabel</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="생명주기-활용-">생명주기 활용 ?</h2>
<ul>
  <li>강의 코드에서 생명주기 활용은 ViewController의 생명주기 메서드 중 하나인 viewDidLoad() 메서드를 활용하는 것을 의미</li>
  <li>viewDidLoad() 메서드는 ViewController의 view가 메모리에 로드된 직후 호출, ViewController가 생성된 직후 초기화 작업을 수행할 때 유용</li>
  <li>iewDidLoad() 메서드를 활용하여 textLabel의 초기 값을 설정하는 refreshTextLabel() 메서드를 호출</li>
  <li>생명주기 활용은 ViewController의 뷰가 로드되는 시점에 필요한 초기화 작업을 수행하여 화면을 적절히 설정하는 것을 의미합니다.</li>
</ul>

<p>필요한 작업이 적절하게 배치가 됐는지 생각해보자!</p>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="간단한카운터앱" /><summary type="html"><![CDATA[iOS 앱 개발 입문 - 간단한 카운터 앱 만들기]]></summary></entry><entry><title type="html">Xcode 프로젝트 깃허브(GitHub)에 추가하기</title><link href="http://localhost:4000/git/gitProjectAdd/" rel="alternate" type="text/html" title="Xcode 프로젝트 깃허브(GitHub)에 추가하기" /><published>2024-03-19T00:00:00+09:00</published><updated>2024-03-19T00:00:00+09:00</updated><id>http://localhost:4000/git/gitProjectAdd</id><content type="html" xml:base="http://localhost:4000/git/gitProjectAdd/"><![CDATA[<h1 id="1-원격-저장소-추가">1. 원격 저장소 추가</h1>
<ul>
  <li>GitHub에 새로운 원격 저장소를 생성하고 로컬 저장소에 해당 원격 저장소를 추가합니다.
<img src="/assets/images/categories/git/2024-03-19-gitProjectAdd1.png" alt="" /></li>
</ul>

<h1 id="2-xcode-프로젝트-생성">2. XCode 프로젝트 생성</h1>
<ul>
  <li>Xcode 프로젝트의 이름과 GitHub 레포지토리의 이름이 반드시 같을 필요는 없습니다. 
<img src="/assets/images/categories/git/2024-03-19-gitProjectAdd2.png" alt="" /></li>
</ul>

<h1 id="3-터미널-오픈">3. 터미널 오픈</h1>
<ul>
  <li>프로젝트 폴더에서 우클릭 후 터미널 오픈합니다. 
<img src="/assets/images/categories/git/2024-03-19-gitProjectAdd3.png" alt="" /></li>
</ul>

<h1 id="4-git-init---저장소-초기화">4. git init - 저장소 초기화</h1>
<ul>
  <li>명령어는 새로운 Git 저장소를 초기화하는 데 사용됩니다.</li>
  <li>git init
    <ul>
      <li>해당 명령어로 현재 디렉토리에 새로운 Git 저장소를 만듭니다. 이 저장소에는 프로젝트의 모든 변경 내역을 추적하고 관리할 수 있는 .git 디렉토리가 생성됩니다.
        <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git init
</span></code></pre></div>        </div>
        <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">힌트 = : Using 'master' as the name for the initial branch. This default branch name
힌트: is subject to change. To configure the initial branch name to use in all
힌트 : of your new repositories, which will suppress this warning, call:
힌트 :
</span><span class="gp">힌트 : git config -global init.defaultBranch ‹name&gt;</span><span class="w">
</span><span class="go">힌트 : 
힌트 : Names commonly chosen instead of 'master' are 'main', 'trunk' and
힌트 : 'development'. The just-created branch can be renamed via this command:
힌트 :
</span><span class="gp">힌트 : git branch -m &lt;name&gt;</span><span class="w">
</span><span class="go">/users/imhs/Desktop/내배캠 스파르타/실습과제/MyTodoList/.git/ 안의 빈 깃 저 장소를 다시 초기화했습니다 
</span></code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h1 id="5-git-add----스테이징-영역에-추가">5. git add . - 스테이징 영역에 추가</h1>
<ul>
  <li>명령어는 Git에서 변경된 모든 파일을 스테이징 영역에 추가하는 역할을 합니다.</li>
  <li>git add .
    <ul>
      <li>현재 디렉토리 및 하위 디렉토리에서 변경된 모든 파일을 찾습니다.</li>
      <li>변경된 파일을 스테이징 영역에 추가합니다. 이는 Git이 해당 파일의 변경 내용을 추적하고, 다음 커밋에 포함시키기 위한 준비 단계입니다.
        <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git add . 
</span></code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h1 id="6-git-commit--m-커밋메시지---저장소에-기록">6. git commit -m “커밋메시지” - 저장소에 기록</h1>
<ul>
  <li>스테이징 영역에 추가된 파일은 git commit 명령어를 사용하여 커밋할 수 있습니다. 스테이징 영역에 추가된 파일은 이후 커밋에 반영되며, 커밋을 통해 변경 내용이 저장소에 영구적으로 기록됩니다.</li>
  <li>git commit -m “MyTodoList 추가”
    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git commit -m "MyTodoList 추가" 
</span></code></pre></div>    </div>
  </li>
</ul>

<h1 id="7-git-branch--m-main---기본-브랜치-이름-변경">7. git branch -M main - 기본 브랜치 이름 변경</h1>
<ul>
  <li>기본적으로 Git 저장소를 초기화하면 “master”라는 이름의 기본 브랜치가 생성됩니다. 그러나 최근의 표준화 노력과 함께 이를 “main”으로 변경하는 추세가 있습니다.</li>
  <li>git branch -M main 명령어는 현재 작업 중인 브랜치를 “main”으로 변경합니다.</li>
  <li>git branch -M main
    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git commit -m "MyTodoList 추가" 
</span></code></pre></div>    </div>
  </li>
</ul>

<h1 id="8-git-remote-add-origin-저장소url---git-저장소에-원격-저장소-추가">8. git remote add origin 저장소URL - git 저장소에 원격 저장소 추가</h1>
<ul>
  <li>현재 Git 저장소에 origin이라는 이름으로 URL의 원격 저장소를 추가</li>
  <li>git remote add origin https://github.com/limlogging/MyTodoList.git
    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git remote add origin https://github.com/limlogging/MyTodoList.git
</span></code></pre></div>    </div>
  </li>
</ul>

<h1 id="9-git-push--u-origin-main---작업-중인-브랜치를-원격-저장소에-푸시">9. git push -u origin main - 작업 중인 브랜치를 원격 저장소에 푸시</h1>
<ul>
  <li>현재 작업 중인 브랜치를 원격 저장소에 푸시하는 역할을 합니다.</li>
  <li>-u 옵션은 해당 브랜치를 원격 저장소의 기본 브랜치로 설정하는 역할을 합니다.
    <ul>
      <li>이 옵션을 사용하면 이후에는 git push 명령어를 실행할 때 -u 옵션 없이도 동일한 원격 저장소 및 브랜치로 푸시할 수 있습니다.</li>
    </ul>
  </li>
  <li>git push -u origin main
    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git push -u origin main
</span></code></pre></div>    </div>
  </li>
</ul>

<h1 id="10-깃허브-확인">10. 깃허브 확인</h1>
<ul>
  <li>main 브랜치가 default로 생기고 commit 메시지도 확인할 수 있습니다. 
<img src="/assets/images/categories/git/2024-03-19-gitProjectAdd4.png" alt="" /></li>
</ul>

<h1 id="11-브랜치-새로-만들어서-작업">11. 브랜치 새로 만들어서 작업</h1>
<ul>
  <li>git branch로 현재 브랜치를 확인합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git branch
* main
</span></code></pre></div></div>

<ul>
  <li>dev 브랜치를 만들고 생성된 브랜치로 이동합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git checkout -b dev 
</span></code></pre></div></div>

<ul>
  <li>브랜치를 확인합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git branch 
* dev
  main
</span></code></pre></div></div>

<ul>
  <li>작업 후 커밋합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyTodoList % git add .
imhs@imhsui-MacBookPro MyTodoList % git commit -m "기능추가" 
imhs@imhsui-MacBookPro MyTodoList % git push origin dev
</span></code></pre></div></div>]]></content><author><name>HyeongSub Lim</name></author><category term="git" /><category term="git" /><category term="github" /><category term="xcode" /><category term="add" /><category term="commit" /><category term="push" /><summary type="html"><![CDATA[Xcode 프로젝트 깃허브(GitHub)에 추가하기]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 16일차</title><link href="http://localhost:4000/TIL/til16/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 16일차" /><published>2024-03-19T00:00:00+09:00</published><updated>2024-03-19T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til16</id><content type="html" xml:base="http://localhost:4000/TIL/til16/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-19-til16.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>오늘 47번 문제를 푸는데 가장 오래 걸렸다. 문자열 관련 처리, swift에서 제공하는 함수에 아직도 익숙하지 못한 것 같다.</li>
  <li>문자열 자르고 배열 만들어 추가하고… 갖은 방법을 동원하다가 sorted 클로저로 풀 수 있었다.</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/" target="_blank">문자열 내 마음대로 정렬하기</a></li>
    </ul>
  </li>
</ul>

<h3 id="앱-개발-입문-강의">앱 개발 입문 강의</h3>
<ul>
  <li>앱 개발 입문강의를 완강하고 간단한 카운터 앱 만들기를 완성했다.</li>
  <li>아직 생명 주기를 활용한 코딩은 어려운 것 같다.</li>
  <li>과제 확인
    <ul>
      <li><a href="https://limlogging.github.io/sparta/%EA%B0%84%EB%8B%A8%ED%95%9C%EC%B9%B4%EC%9A%B4%ED%84%B0%EC%95%B1/" target="_blank">간단한 카운터 앱 만들기</a></li>
    </ul>
  </li>
</ul>

<h3 id="개인-과제">개인 과제</h3>
<ul>
  <li>개인 과제에서 필요한 기능을 확인했다.</li>
  <li>버튼을 누르면 text 입력이 가능하고 table View에도 추가가 되었다.</li>
  <li>라이브러리에서 버튼, 테이블 뷰를 가져와 스토리보드 올려놓았는데 이후 로직이 조금 막막했다. 온보딩에서 한 화면 이동 등의 내용이랑은 달랐다.</li>
  <li>과제에서 제시한 키워드를 바탕으로 내일은 하나씩 실습해봐야겠다.</li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>알고리즘 문제 풀기</li>
  <li>키워드 하나씩 실습 하기</li>
  <li>과제 풀기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 16일차 이야기]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 15일차</title><link href="http://localhost:4000/TIL/til15/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 15일차" /><published>2024-03-18T00:00:00+09:00</published><updated>2024-03-18T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til15</id><content type="html" xml:base="http://localhost:4000/TIL/til15/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-18-til15.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>지난 금요일, 오늘 47번에서 생각 중인데 내일 오전에는 꼭 한문제 풀어야겠다.</li>
</ul>

<h3 id="앱-개발-입문-강의">앱 개발 입문 강의</h3>
<p>전체 2시간이면 볼 수 있는데 따라해보면서 포스팅한다고 3시간 좀 넘게 봤던 것 같다. 내일 남은 강의 마저 볼 예정. 강의가 짧아서 실습이 중요하다는 걸 느낀다..</p>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>알고리즘 문제 풀기</li>
  <li>강의 완강</li>
  <li>실습 하기</li>
  <li>과제 풀기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 15일차 이야기]]></summary></entry><entry><title type="html">깃(git)과 깃허브(GitHub)란?</title><link href="http://localhost:4000/git/git/" rel="alternate" type="text/html" title="깃(git)과 깃허브(GitHub)란?" /><published>2024-03-16T00:00:00+09:00</published><updated>2024-03-16T00:00:00+09:00</updated><id>http://localhost:4000/git/git</id><content type="html" xml:base="http://localhost:4000/git/git/"><![CDATA[<h1 id="깃git이란">깃(Git)이란?</h1>
<ul>
  <li>Git은 분산 버전 관리 시스템(Distributed Version Control System)으로, 소프트웨어 개발에서 사용되는 파일들의 변경 사항을 추적하고 관리하는 도구입니다. 개발자들은 Git을 사용하여 프로젝트의 모든 버전을 기록하고, 여러 명의 개발자가 동시에 작업할 수 있도록 하며, 변경 사항을 추적하고 병합하는 등의 작업을 할 수 있습니다. Git은 분산형이기 때문에 모든 개발자가 전체 프로젝트의 복사본을 갖고 있으며, 중앙 서버에 의존하지 않고도 작업을 진행할 수 있습니다.</li>
</ul>

<h1 id="버전-관리란">버전 관리란?</h1>
<ul>
  <li>파일 변화를 시간에 따라 기록했다가 나중에 특정 시점의 버전을 다시 꺼내올 수 있도록 관리하는 것 입니다. 버전 관리를 위해 버전 관리 시스템(VCS, Version Control System)을 사용합니다.</li>
</ul>

<h2 id="로컬-버전-관리-local-vcs-local-version-control-system">로컬 버전 관리 (Local VCS, Local Version Control System)</h2>
<ul>
  <li>자신의 컴퓨터에 있는 파일의 변경 사항을 추적하고 관리할 수 있습니다.</li>
  <li>장점
    <ul>
      <li>파일의 변경 이력을 추적하고 관리할 수 있습니다.</li>
      <li>변경 사항을 롤백하거나 이전 버전으로 복구할 수 있어 실수를 최소화할 수 있습니다.</li>
    </ul>
  </li>
  <li>단점
    <ul>
      <li>중앙 서버가 필요하지 않기 때문에 협업이 어려울 수 있습니다.</li>
      <li>다수의 개발자가 동시에 작업할 때 충돌이 발생할 수 있고, 해결하기 어려울 수 있습니다.</li>
    </ul>
  </li>
  <li>관련 시스템
    <ul>
      <li>RCS (Revision Control System), CVS (Concurrent Versions System)</li>
    </ul>
  </li>
</ul>

<h2 id="중앙집중식-버전-관리-cvcs-centralized-version-control-system">중앙집중식 버전 관리 (CVCS, Centralized Version Control System)</h2>
<ul>
  <li>중앙집중식 버전 관리 시스템은 모든 파일의 변경 사항을 중앙 서버에 저장하고 개발자들이 중앙 서버에서 파일을 가져오고 커밋하는 방식입니다.</li>
  <li>장점
    <ul>
      <li>중앙 서버에서 모든 파일의 변경 사항을 관리하므로 협업이 간편합니다.</li>
      <li>버전 관리, 백업, 보안 등을 중앙에서 관리할 수 있습니다.</li>
    </ul>
  </li>
  <li>단점
    <ul>
      <li>중앙 서버에 의존하므로 중앙 서버에 문제가 발생하면 작업이 중단될 수 있습니다.</li>
      <li>네트워크 연결이 필요하므로 오프라인 상황에서 작업이 어렵습니다.</li>
    </ul>
  </li>
  <li>관련 시스템
    <ul>
      <li>VSS(Visual SourceSafe), SVN(Subversion)</li>
      <li>개인적으로는 VSS를 가장 많이 사용했습니다. 지방의 중소, 제조업 전산실에서는 VSS, SVN을 아직도 많이 사용합니다.</li>
    </ul>
  </li>
</ul>

<h2 id="분산-버전-관리-시스템-dvcs-distributed-version-control-system">분산 버전 관리 시스템 (DVCS, Distributed Version Control System)</h2>
<ul>
  <li>분산 버전 관리 시스템은 중앙 서버와 개발자들의 로컬 저장소 간에 변경 사항을 주고받는 시스템입니다. 각 개발자는 전체 저장소의 복사본을 갖고 있으므로 인터넷 연결 없이도 작업할 수 있습니다.</li>
  <li>장점
    <ul>
      <li>각 개발자가 로컬 저장소를 갖고 있으므로 네트워크 연결이 없어도 작업할 수 있습니다.</li>
      <li>분산 구조로 인해 중앙 서버에 의존하지 않으므로 중앙 서버의 장애에도 유연하게 대처할 수 있습니다.</li>
      <li>협업이 용이하고 병합 작업이 간편합니다.</li>
    </ul>
  </li>
  <li>단점
    <ul>
      <li>초보자에게는 초기 설정과 사용이 어려울 수 있습니다.</li>
      <li>중앙 서버가 없으므로 프로젝트의 모든 변경 사항을 추적하고 관리하기 어려울 수 있습니다.</li>
    </ul>
  </li>
  <li>관련 시스템
    <ul>
      <li>Git, Mercurial</li>
    </ul>
  </li>
</ul>

<h1 id="깃허브github란">깃허브(GitHub)란?</h1>
<ul>
  <li>Git을 기반으로 한 코드 호스팅 플랫폼입니다. 개발자들은 GitHub을 사용하여 Git으로 관리되는 프로젝트를 호스팅하고, 다른 사용자와 협업하며, 프로젝트에 기여할 수 있습니다. GitHub은 개인 및 기업용 소프트웨어 개발 프로젝트, 오픈 소스 프로젝트, 문서 등 다양한 형태의 프로젝트를 지원하며, 이슈 트래킹, 웹 호스팅, 코드 검토, CI/CD 등의 기능을 제공합니다.</li>
</ul>

<h1 id="git과-github는-다르다">Git과 GitHub는 다르다!</h1>
<ul>
  <li>Git은 버전 관리 도구</li>
  <li>GitHub은 Git을 기반으로 한 코드 호스팅 플랫폼</li>
</ul>

<p>Git을 사용하여 프로젝트를 관리하고, GitHub을 사용하여 프로젝트를 호스팅하고 협업할 수 있습니다.</p>]]></content><author><name>HyeongSub Lim</name></author><category term="git" /><category term="git" /><category term="github" /><summary type="html"><![CDATA[git, GitHub란?]]></summary></entry><entry><title type="html">[내배캠] 3주차 개인과제 - 야구게임</title><link href="http://localhost:4000/sparta/baseballGame/" rel="alternate" type="text/html" title="[내배캠] 3주차 개인과제 - 야구게임" /><published>2024-03-15T00:00:00+09:00</published><updated>2024-03-15T00:00:00+09:00</updated><id>http://localhost:4000/sparta/baseballGame</id><content type="html" xml:base="http://localhost:4000/sparta/baseballGame/"><![CDATA[<h1 id="개인과제-후기">개인과제 후기</h1>
<p>1주차 온보딩, 2,3 주차 문법강의가 끝났습니다. 
배운 내용을 바탕으로 과제를 만들어 제출하였습니다. 중복값을 제외하고 랜덤 값 뽑기, 스트라이크/볼 판단하는 부분에서 고민하는 시간이 많았습니다. 제출 시간이 촉박하여 우선 완성시켜놓고 최대한 기능별로 나누는 작업을 진행하였습니다. 배웠던 내용을 많이 적용하지 못한 것 같아 아쉬움이 남습니다.</p>

<h1 id="lv1-문제">Lv1 문제</h1>
<ul>
  <li>1에서 9까지의 서로 다른 임의의 수 3개를 정하고 맞추는 게임</li>
  <li>정답은 랜덤으로 만듭니다. 1에서 9까지의 서로 다른 임의의 수 3자리</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="kd">class</span> <span class="kt">Random</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">randomNumber</span><span class="p">(</span><span class="n">randomNumberCount</span> <span class="nv">cnt</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
        <span class="c1">//1. 배열에 범위만큼의 숫자 할당</span>
        <span class="k">var</span> <span class="nv">arrNumber</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="kt">Array</span><span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="mi">9</span><span class="p">)</span>
        <span class="k">var</span> <span class="nv">arrRandomNumber</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
        
        <span class="c1">//임의 개수만큼 반복</span>
        <span class="k">for</span> <span class="n">_</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">cnt</span> <span class="p">{</span>
            <span class="c1">//2. 배열 범위에서 랜덤 숫자 인덱스 할당</span>
            <span class="k">var</span> <span class="nv">index</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="kt">Int</span><span class="o">.</span><span class="nf">random</span><span class="p">(</span><span class="nv">in</span><span class="p">:</span> <span class="mi">0</span><span class="o">...</span><span class="n">arrNumber</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
            <span class="c1">//3. 할당된 숫자를 새로운 배열에 저장</span>
            <span class="n">arrRandomNumber</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">arrNumber</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>
            <span class="c1">//4. 할당된 숫자의 Index를 제거</span>
            <span class="n">arrNumber</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">index</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">arrRandomNumber</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="c1">//정답 확인</span>
<span class="kd">func</span> <span class="nf">answerCheck</span><span class="p">(</span><span class="n">comArr</span> <span class="nv">comArrNum</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">],</span> <span class="n">myArr</span> <span class="nv">myArrNum</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="c1">//맞춘 개수 확인</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="n">myArrNum</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">myArrNum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">comArrNum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">rightCnt</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">rightCnt</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">?</span> <span class="s">"정답입니다."</span> <span class="p">:</span> <span class="s">"틀렸습니다! (</span><span class="se">\(</span><span class="n">rightCnt</span><span class="se">)</span><span class="s">개 맞췄습니다.)"</span>
<span class="p">}</span>

<span class="k">var</span> <span class="nv">comRandom</span><span class="p">:</span> <span class="kt">Random</span> <span class="o">=</span> <span class="kt">Random</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">comArrNum</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="n">comRandom</span><span class="o">.</span><span class="nf">randomNumber</span><span class="p">(</span><span class="nv">randomNumberCount</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">myRandom</span><span class="p">:</span> <span class="kt">Random</span> <span class="o">=</span> <span class="kt">Random</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">myArrNum</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="n">myRandom</span><span class="o">.</span><span class="nf">randomNumber</span><span class="p">(</span><span class="nv">randomNumberCount</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">result</span><span class="p">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">""</span>
<span class="k">var</span> <span class="nv">rightCnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>

<span class="nf">print</span><span class="p">(</span><span class="s">"컴퓨터 선택: </span><span class="se">\(</span><span class="n">comArrNum</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="s">"내 선택: </span><span class="se">\(</span><span class="n">myArrNum</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">answerCheck</span><span class="p">(</span><span class="nv">comArr</span><span class="p">:</span> <span class="n">comArrNum</span><span class="p">,</span> <span class="nv">myArr</span><span class="p">:</span> <span class="n">myArrNum</span><span class="p">))</span>
</code></pre></div></div>

<h1 id="lv2-문제">Lv2 문제</h1>
<ul>
  <li>정답을 맞추기 위해 3자리수를 입력하고 힌트를 받습니다
    <ul>
      <li>힌트는 야구용어인 볼과 스트라이크입니다.</li>
      <li>같은 자리에 같은 숫자가 있는 경우 스트라이크, 다른 자리에 숫자가 있는 경우 볼입니다.</li>
    </ul>
  </li>
  <li>ex) 정답 : 456 인 경우
    <ul>
      <li>435를 입력한 경우 → 1스트라이크 1볼</li>
      <li>357를 입력한 경우 → 1스트라이크</li>
      <li>678를 입력한 경우 → 1볼</li>
      <li>123를 입력한 경우 → Nothing</li>
    </ul>
  </li>
  <li>ex) 정답 : 456 인 경우
    <ul>
      <li>435를 입력한 경우 → 1스트라이크 1볼</li>
      <li>357를 입력한 경우 → 1스트라이크</li>
      <li>678를 입력한 경우 → 1볼</li>
      <li>123를 입력한 경우 → Nothing</li>
    </ul>
  </li>
  <li>만약 올바르지 않은 입력값에 대해서는 오류 문구를 보여주세요</li>
  <li>3자리 숫자가 정답과 같은 경우 게임이 종료됩니다</li>
  <li>실행 예시(정답 : 456)</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span> <span class="n">게임을</span> <span class="n">시작합니다</span> <span class="o">&gt;</span>
<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">435</span>
<span class="mi">1</span><span class="n">스트라이크</span> <span class="mi">1</span><span class="n">볼</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">357</span>
<span class="mi">1</span><span class="n">스트라이크</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">123</span>
<span class="kt">Nothing</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="n">dfg</span> <span class="c1">// 세 자리 숫자가 아니어서 올바르지 않은 입력값</span>
<span class="n">올바르지</span> <span class="n">않은</span> <span class="n">입력값입니다</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">199</span> <span class="c1">// 9가 두번 사용되어 올바르지 않은 입력값</span>
<span class="n">올바르지</span> <span class="n">않은</span> <span class="n">입력값입니다</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">103</span> <span class="c1">// 0이 사용되어 올바르지 않은 입력값</span>
<span class="n">올바르지</span> <span class="n">않은</span> <span class="n">입력값입니다</span>

<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="mi">456</span>
<span class="n">정답입니다</span><span class="o">!</span>
</code></pre></div></div>

<h1 id="lv3-문제">Lv3 문제</h1>
<ul>
  <li>정답이 되는 숫자를 0에서 9까지의 서로 다른 3자리의 숫자로 바꿔주세요
    <ul>
      <li>맨 앞자리에 0이 오는 것은 불가능합니다
        <ul>
          <li>092 → 불가능</li>
          <li>870 → 가능</li>
          <li>300 → 불가능</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="lv4-문제">Lv4 문제</h1>
<ul>
  <li>프로그램을 시작할 때 안내문구를 보여주세요
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 예시</span>
<span class="n">환영합니다</span><span class="o">!</span> <span class="n">원하시는</span> <span class="n">번호를</span> <span class="n">입력해주세요</span>
<span class="mi">1</span><span class="o">.</span> <span class="n">게임</span> <span class="n">시작하기</span>  <span class="mi">2</span><span class="o">.</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span>  <span class="mi">3</span><span class="o">.</span> <span class="n">종료하기</span>
</code></pre></div>    </div>
  </li>
  <li>1번 게임 시작하기의 경우 “필수 구현 기능” 의 예시처럼 게임이 진행됩니다
    <ul>
      <li>정답을 맞혀 게임이 종료된 경우 위 안내문구를 다시 보여주세요</li>
    </ul>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 예시</span>
<span class="n">환영합니다</span><span class="o">!</span> <span class="n">원하시는</span> <span class="n">번호를</span> <span class="n">입력해주세요</span>
<span class="mi">1</span><span class="o">.</span> <span class="n">게임</span> <span class="n">시작하기</span>  <span class="mi">2</span><span class="o">.</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span>  <span class="mi">3</span><span class="o">.</span> <span class="n">종료하기</span>
<span class="mi">1</span> <span class="c1">// 1번 게임 시작하기 입력</span>

<span class="o">&lt;</span> <span class="n">게임을</span> <span class="n">시작합니다</span> <span class="o">&gt;</span>
<span class="n">숫자를</span> <span class="n">입력하세요</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</code></pre></div></div>

<h1 id="lv5-문제">Lv5 문제</h1>
<ul>
  <li>2번 게임 기록 보기의 경우 완료한 게임들에 대해 시도 횟수를 보여줍니다</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 예시</span>
<span class="n">환영합니다</span><span class="o">!</span> <span class="n">원하시는</span> <span class="n">번호를</span> <span class="n">입력해주세요</span>
<span class="mi">1</span><span class="o">.</span> <span class="n">게임</span> <span class="n">시작하기</span>  <span class="mi">2</span><span class="o">.</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span>  <span class="mi">3</span><span class="o">.</span> <span class="n">종료하기</span>
<span class="mi">2</span> <span class="c1">// 2번 게임 기록 보기 입력</span>

<span class="o">&lt;</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span> <span class="o">&gt;</span>
<span class="mi">1</span><span class="n">번째</span> <span class="nv">게임</span> <span class="p">:</span> <span class="n">시도</span> <span class="n">횟수</span> <span class="o">-</span> <span class="mi">14</span>
<span class="mi">2</span><span class="n">번째</span> <span class="nv">게임</span> <span class="p">:</span> <span class="n">시도</span> <span class="n">횟수</span> <span class="o">-</span> <span class="mi">9</span>
<span class="mi">3</span><span class="n">번째</span> <span class="nv">게임</span> <span class="p">:</span> <span class="n">시도</span> <span class="n">횟수</span> <span class="o">-</span> <span class="mi">12</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</code></pre></div></div>

<h1 id="lv6-문제">Lv6 문제</h1>
<ul>
  <li>3번 종료하기의 경우 프로그램이 종료됩니다</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 예시</span>
<span class="n">환영합니다</span><span class="o">!</span> <span class="n">원하시는</span> <span class="n">번호를</span> <span class="n">입력해주세요</span>
<span class="mi">1</span><span class="o">.</span> <span class="n">게임</span> <span class="n">시작하기</span>  <span class="mi">2</span><span class="o">.</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span>  <span class="mi">3</span><span class="o">.</span> <span class="n">종료하기</span>
<span class="mi">3</span> <span class="c1">// 3번 종료하기 입력</span>

<span class="o">&lt;</span> <span class="n">숫자</span> <span class="n">야구</span> <span class="n">게임을</span> <span class="n">종료합니다</span> <span class="o">&gt;</span>
</code></pre></div></div>

<ul>
  <li>1, 2, 3 이외의 입력값에 대해서는 오류 메시지를 보여주세요</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 예시</span>
<span class="n">환영합니다</span><span class="o">!</span> <span class="n">원하시는</span> <span class="n">번호를</span> <span class="n">입력해주세요</span>
<span class="mi">1</span><span class="o">.</span> <span class="n">게임</span> <span class="n">시작하기</span>  <span class="mi">2</span><span class="o">.</span> <span class="n">게임</span> <span class="n">기록</span> <span class="n">보기</span>  <span class="mi">3</span><span class="o">.</span> <span class="n">종료하기</span>
<span class="mi">4</span>

<span class="n">올바른</span> <span class="n">숫자를</span> <span class="n">입력해주세요</span><span class="o">!</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="제출-코드">제출 코드</h1>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="kd">class</span> <span class="kt">BaseballGame</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">comNum</span><span class="p">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">""</span> <span class="c1">//컴퓨터 랜덤 값</span>
    <span class="k">var</span> <span class="nv">strike</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>     <span class="c1">//스트라이크 개수</span>
    <span class="k">var</span> <span class="nv">ball</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>       <span class="c1">//볼 개수</span>
    <span class="k">var</span> <span class="nv">flag</span><span class="p">:</span> <span class="kt">Bool</span> <span class="o">=</span> <span class="kc">false</span>  <span class="c1">//게임 정답 유무 확인</span>
    
    <span class="k">var</span> <span class="nv">inputCnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>   <span class="c1">//입력횟수</span>
    
    <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
        <span class="nf">print</span><span class="p">(</span><span class="s">"&lt; 게임을 시작합니다. &gt;"</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="n">comNum</span> <span class="o">=</span> <span class="nf">randomNum</span><span class="p">()</span>   <span class="c1">//컴퓨터 기본 값 셋팅</span>
    <span class="p">}</span>
    
    <span class="c1">//컴퓨터 초기 값 셋팅</span>
    <span class="kd">func</span> <span class="nf">randomNum</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">index</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">var</span> <span class="nv">ranNum</span><span class="p">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="s">""</span>
        <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="kt">Array</span><span class="p">(</span><span class="mi">0</span><span class="o">...</span><span class="mi">9</span><span class="p">)</span>
        
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="mi">2</span> <span class="p">{</span>
            <span class="k">repeat</span> <span class="p">{</span>
                <span class="n">index</span> <span class="o">=</span> <span class="kt">Int</span><span class="o">.</span><span class="nf">random</span><span class="p">(</span><span class="nv">in</span><span class="p">:</span> <span class="mi">0</span><span class="o">...</span><span class="n">arr</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">}</span> <span class="k">while</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">index</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">//index가 0(첫번째 숫자가 0)이면 다른 숫자가 나올때까지 반복</span>
            <span class="n">ranNum</span> <span class="o">+=</span> <span class="kt">String</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>
            <span class="n">arr</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">index</span><span class="p">)</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">ranNum</span>
    <span class="p">}</span>
    
    <span class="c1">//입력 값 받아오기</span>
    <span class="kd">func</span> <span class="nf">inputData</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">inputCnt</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="nf">print</span><span class="p">(</span><span class="s">"-------------------------------"</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="s">"숫자를 입력하세요"</span><span class="p">)</span>
        <span class="k">if</span> <span class="k">let</span> <span class="nv">inputData</span> <span class="o">=</span> <span class="nf">readLine</span><span class="p">()</span> <span class="p">{</span>
            <span class="k">return</span> <span class="n">inputData</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span> <span class="s">""</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//데이터 체크</span>
    <span class="kd">func</span> <span class="nf">inputDataValidation</span><span class="p">(</span><span class="n">_</span> <span class="nv">inputData</span><span class="p">:</span> <span class="kt">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Bool</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">inputData</span><span class="o">.</span><span class="n">count</span> <span class="o">!=</span> <span class="mi">3</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"올바르지 않은 입력값입니다. (3자리 입력)"</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">false</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="c1">//숫자/문자 체크</span>
            <span class="k">if</span> <span class="k">let</span> <span class="nv">number</span> <span class="o">=</span> <span class="kt">Int</span><span class="p">(</span><span class="n">inputData</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">//숫자 중복값 체크</span>
                <span class="k">if</span> <span class="kt">Set</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="n">number</span><span class="p">))</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">{</span>
                    <span class="k">return</span> <span class="kc">true</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="nf">print</span><span class="p">(</span><span class="s">"올바르지 않은 입력값입니다. (중복 값)"</span><span class="p">)</span>
                    <span class="k">return</span> <span class="kc">false</span>
                <span class="p">}</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"올바르지 않은 입력값입니다. (문자 포함)"</span><span class="p">)</span>
                <span class="k">return</span> <span class="kc">false</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="kd">func</span> <span class="nf">gameStart</span><span class="p">(</span><span class="n">_</span> <span class="nv">myNum</span><span class="p">:</span> <span class="kt">String</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">//print("내입력값: \(myNum), 컴터입력값: \(comNum)")</span>
        <span class="k">let</span> <span class="nv">myNumArr</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="o">=</span> <span class="n">myNum</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="p">}</span>
        <span class="k">let</span> <span class="nv">comNumArr</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="o">=</span> <span class="n">comNum</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="p">}</span>

        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="n">myNumArr</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">{</span>
            <span class="c1">//숫자가 일치하면 스트라이크</span>
            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="n">myNumArr</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">{</span>
                <span class="c1">//print("i: \(i), j: \(j), comNumArr[\(i)]: \(comNumArr[i]), myNumArr[\(j)]: \(myNumArr[j])")</span>

                <span class="c1">//index와 값이 일치하면 스트라이크</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">j</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">comNumArr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">myNumArr</span><span class="p">[</span><span class="n">j</span><span class="p">])</span> <span class="p">{</span>
                    <span class="n">strike</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="c1">//값이 일치하지만 index가 다르면 ball</span>
                <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">!=</span> <span class="n">j</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">comNumArr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">myNumArr</span><span class="p">[</span><span class="n">j</span><span class="p">])</span> <span class="p">{</span>
                    <span class="n">ball</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">//결과 확인</span>
    <span class="kd">func</span> <span class="nf">gameResult</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">Bool</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">strike</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"정답입니다!!!!!!!!!!!!!!!!!!!!!!!!"</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"-------------------------------"</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">true</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">strike</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">ball</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"Nothing"</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">false</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"</span><span class="se">\(</span><span class="k">self</span><span class="o">.</span><span class="n">strike</span><span class="se">)</span><span class="s"> 스트라이크, </span><span class="se">\(</span><span class="k">self</span><span class="o">.</span><span class="n">ball</span><span class="se">)</span><span class="s"> 볼"</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">false</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="kd">func</span> <span class="nf">recordClear</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">self</span><span class="o">.</span><span class="n">strike</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">self</span><span class="o">.</span><span class="n">ball</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="kt">GameRecord</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">gameRecordDictionary</span> <span class="o">=</span> <span class="p">[</span><span class="kt">Int</span><span class="p">:</span><span class="kt">Int</span><span class="p">]()</span>
<span class="p">}</span>

<span class="c1">//게임 횟수 저장</span>
<span class="k">let</span> <span class="nv">gameRecord</span><span class="p">:</span> <span class="kt">GameRecord</span> <span class="o">=</span> <span class="kt">GameRecord</span><span class="p">()</span>

<span class="k">while</span> <span class="kc">true</span> <span class="p">{</span>
    <span class="nf">print</span><span class="p">(</span><span class="s">"환영합니다! 원하시는 번호를 입력해주세요."</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="s">"1. 게임 시작하기 2. 게임 기록 보기 3. 종료하기"</span><span class="p">)</span>
    <span class="k">if</span> <span class="k">let</span> <span class="nv">inputData</span> <span class="o">=</span> <span class="nf">readLine</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span> <span class="k">let</span> <span class="nv">number</span> <span class="o">=</span> <span class="kt">Int</span><span class="p">(</span><span class="n">inputData</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">switch</span> <span class="n">number</span> <span class="p">{</span>
            <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
                <span class="c1">//컴퓨터 숫자 초기화</span>
                <span class="k">let</span> <span class="nv">baseballGame</span><span class="p">:</span> <span class="kt">BaseballGame</span> <span class="o">=</span> <span class="kt">BaseballGame</span><span class="p">()</span>
                
                <span class="c1">//print("컴터 선택 값: \(baseballGame.num)")</span>
                <span class="k">repeat</span> <span class="p">{</span>
                    <span class="k">let</span> <span class="nv">myNum</span> <span class="o">=</span> <span class="n">baseballGame</span><span class="o">.</span><span class="nf">inputData</span><span class="p">()</span> <span class="c1">//내 입력 숫자</span>
                
                    <span class="c1">//입력값 체크</span>
                    <span class="k">if</span> <span class="n">baseballGame</span><span class="o">.</span><span class="nf">inputDataValidation</span><span class="p">(</span><span class="n">myNum</span><span class="p">)</span> <span class="p">{</span>
                        <span class="c1">//게임 시작</span>
                        <span class="n">baseballGame</span><span class="o">.</span><span class="nf">gameStart</span><span class="p">(</span><span class="n">myNum</span><span class="p">)</span>
                        <span class="c1">//결과보기</span>
                        <span class="n">baseballGame</span><span class="o">.</span><span class="n">flag</span> <span class="o">=</span> <span class="n">baseballGame</span><span class="o">.</span><span class="nf">gameResult</span><span class="p">()</span>
                        
                        <span class="k">if</span> <span class="n">baseballGame</span><span class="o">.</span><span class="n">flag</span> <span class="p">{</span>
                            <span class="c1">//정답시 게임 기록</span>
                            <span class="k">if</span> <span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">isEmpty</span> <span class="p">{</span>
                                <span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">baseballGame</span><span class="o">.</span><span class="n">inputCnt</span>
                            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                                <span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="p">[</span><span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="nf">max</span><span class="p">()</span><span class="o">!</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">baseballGame</span><span class="o">.</span><span class="n">inputCnt</span>
                            <span class="p">}</span>
                            <span class="n">baseballGame</span><span class="o">.</span><span class="n">inputCnt</span> <span class="o">=</span> <span class="mi">0</span>   <span class="c1">//입력 횟수 초기화</span>
                        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                            <span class="c1">//오답 시 초기화</span>
                            <span class="n">baseballGame</span><span class="o">.</span><span class="nf">recordClear</span><span class="p">()</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span> <span class="k">while</span> <span class="p">(</span><span class="n">baseballGame</span><span class="o">.</span><span class="n">flag</span> <span class="o">!=</span> <span class="kc">true</span><span class="p">)</span> <span class="c1">//true가 될때까지 반복</span>
                
                <span class="k">break</span>
            <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"----------------------------------"</span><span class="p">)</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"게임 기록 보기"</span><span class="p">)</span>
                <span class="k">if</span><span class="p">(</span><span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nf">print</span><span class="p">(</span><span class="s">"진행한 게임이 없습니다."</span><span class="p">)</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="nf">sorted</span><span class="p">()</span> <span class="p">{</span>
                        <span class="nf">print</span><span class="p">(</span><span class="s">"</span><span class="se">\(</span><span class="n">i</span><span class="se">)</span><span class="s">번째 게임 : 시도 횟수 - </span><span class="se">\(</span><span class="n">gameRecord</span><span class="o">.</span><span class="n">gameRecordDictionary</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"----------------------------------"</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"&lt;숫자 야구 게임을 종료합니다.&gt;"</span><span class="p">)</span>
                <span class="nf">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
            <span class="k">default</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"올바른 숫자를 입력해주세요!"</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"올바른 숫자를 입력해주세요!"</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="야구게임" /><summary type="html"><![CDATA[3주차 개인과제 - 야구게임]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 14일차</title><link href="http://localhost:4000/TIL/til14/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 14일차" /><published>2024-03-15T00:00:00+09:00</published><updated>2024-03-15T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til14</id><content type="html" xml:base="http://localhost:4000/TIL/til14/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-15-til14.png" alt="" /></p>

<h3 id="개인과제">개인과제</h3>
<p>맑은 정신으로 오전에 후다닥 과제를 마무리했다. 하루를 시작하는 오전에 집중이 가장 잘되는 느낌! 우선 레벨 6번까지 완성하고 제출하고 이후 공개된 해설 영상을 보았다. 랜덤 숫자를 뽑아내는 과정에서 shuffle을 사용할 수 있다는 것과 배열의 Index를 뽑아내기 위해서 항상 for문을 사용했는데 enumerated를 사용하면 인덱스와 값을 함께 출력할 수 있다는 것을 알았다!</p>

<h3 id="알고리즘">알고리즘</h3>
<p>오늘은 개인과제와 해설 강의를 확인한다고 알고리즘 문제를 깜빡했다. 주말에 몇개 풀어야겠다.</p>

<h3 id="내배캠-지금까지">내배캠 지금까지</h3>
<p>온보딩 1주, 문법강의 2주, 3주가 너무 빨리 흘렀다. 집중력을 잃을때 쯤 zep에서 공부중인 팀원들과 사람들, slack에 올라오는 각종 질문들로 정신을 차릴 수 있었다. 취업해서 서울로 갈때까지 파이팅 해야겠다 🔥</p>

<h3 id="다음주">다음주?</h3>
<p>본격적으로 UIKit으로 앱 만들기 강의가 시작 되는데 각종 버튼, 컨트롤 등 추가해보는 과정이 문법 강의보다 더 재미있을 것 같아 기대된다.</p>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 14일차 이야기]]></summary></entry></feed>