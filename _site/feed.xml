<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-04-03T09:24:51+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">limlogging Devlog</title><author><name>HyeongSub Lim</name></author><entry><title type="html">[UIKit] 코코아팟(cocoapods) 설치하기</title><link href="http://localhost:4000/UIKit/cocoapods/" rel="alternate" type="text/html" title="[UIKit] 코코아팟(cocoapods) 설치하기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/cocoaPods</id><content type="html" xml:base="http://localhost:4000/UIKit/cocoapods/"><![CDATA[<h1 id="코코아팟cocoapods이란-">코코아팟(cocoapods)이란 ?</h1>
<ul>
  <li>Objective-C 및 Swift Cocoa 프로젝트의 종속성 관리자</li>
  <li>즉, CocoaPods은 Objective-C 또는 Swift에서 <code class="language-plaintext highlighter-rouge">라이브러리를 사용할 수 있게 도와주는 모듈</code>이다.</li>
</ul>

<p><br /></p>

<h1 id="설치하기">설치하기</h1>
<h2 id="1-홈브루-버전-확인-및-업데이트">1. 홈브루 버전 확인 및 업데이트</h2>
<ul>
  <li>터미널에서 홈브루 버전확인 및 업데이트를 합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % brew --version 
Homebrew 4.2.11
imhs@imhsui-MacBookPro ~ % brew update
imhs@imhsui-MacBookPro ~ % brew --version
Homebrew 4.2.15
</span></code></pre></div></div>

<p><br /></p>

<h2 id="2-코코아팟-설치">2. 코코아팟 설치</h2>
<ul>
  <li><a href="https://cocoapods.org/" target="_blank">코코아팟 홈페이지 바로가기</a></li>
  <li>코코아팟 홈페이지에서 설치 명령어를 확인할 수 있습니다.</li>
  <li>sudo gem install cocoapods</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % sudo gem install cocoapods
</span></code></pre></div></div>

<p><br /></p>

<h1 id="버전확인">버전확인</h1>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % pod --version
1.15.2
</span></code></pre></div></div>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="cocoapods" /><summary type="html"><![CDATA[홈브루로 코코아팟(cocoapods) 설치]]></summary></entry><entry><title type="html">[UIKit] 알라모파이어(alamofire) 설치하기</title><link href="http://localhost:4000/UIKit/alamofire/" rel="alternate" type="text/html" title="[UIKit] 알라모파이어(alamofire) 설치하기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/alamofire</id><content type="html" xml:base="http://localhost:4000/UIKit/alamofire/"><![CDATA[<h1 id="알라모파이어alamofire란-">알라모파이어(alamofire)란 ?</h1>
<ul>
  <li>Alamofire는 iOS, macOS를 위한 Swift 기반 HTTP 네트워킹 라이브러리입니다.</li>
  <li>애플에서 자체적으로 네트워크 통신을 위해 제공하는 URLSession API가 있는데, 이를 보완한 것이 Alamofire 입니다.</li>
  <li>Alamofire에서는 다양한 기능을 제공하고 있는데, 자세한 내용은 <a href="https://github.com/Alamofire/Alamofire">Alamofire github 홈페이지</a>에서 확인가능합니다.</li>
</ul>

<p><br /></p>

<h1 id="사용방법">사용방법</h1>
<h2 id="1-프로젝트-폴더로-이동해서-터미널-오픈">1. 프로젝트 폴더로 이동해서 터미널 오픈</h2>
<ul>
  <li>프로젝트 폴더로 이동해서 폴더를 우클릭하고 터미널을 오픈합니다.</li>
</ul>

<p><br /></p>

<h2 id="2-명령어를-입력합니다">2. 명령어를 입력합니다.</h2>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyGithub % pod init
</span></code></pre></div></div>

<p><br /></p>

<h2 id="3-프로젝트-폴더안에-podfile-확인">3. 프로젝트 폴더안에 Podfile 확인</h2>
<ul>
  <li>프로젝트 폴더 안에 Podfile이 생깁니다.</li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire1.png" alt="" /></p>

<p><br /></p>

<h2 id="4-podfile-더블클릭">4. Podfile 더블클릭</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire2.png" alt="" /></p>

<p><br /></p>

<h2 id="5-podfile-내-alamofire-추가">5. Podfile 내 Alamofire 추가</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire3.png" alt="" /></p>

<p><br /></p>

<h2 id="6-alamofire-설치">6. Alamofire 설치</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire4.png" alt="" /></p>

<p><br /></p>

<h2 id="7project-재시작---xcworkspace-파일을-열어야합니다">7.project 재시작 - .xcworkspace 파일을 열어야합니다.</h2>

<p><br /></p>

<h2 id="8-import-alamofire">8. import Alamofire</h2>
<ul>
  <li>import Alamofire 코드를 추가하고 사용합니다.</li>
</ul>

<p><br /></p>

<h1 id="설치-후-에러-발생-시-sandbox-에러">설치 후 에러 발생 시 (sandbox 에러)</h1>

<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire5.png" alt="" /></p>

<ul>
  <li>Update your Xcode project build option <code class="language-plaintext highlighter-rouge">ENABLE_USER_SCRIPT_SANDBOXING</code> to ‘No’.
    <ul>
      <li>Yes로 되어있어 No로 변경합니다.</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-alamofire6.png" alt="" /></p>

<ul>
  <li>에러 참고 사이트
    <ul>
      <li><a href="https://stackoverflow.com/questions/76590131/error-while-build-ios-app-in-xcode-sandbox-rsync-samba-13105-deny1-file-w">https://stackoverflow.com/questions/76590131/error-while-build-ios-app-in-xcode-sandbox-rsync-samba-13105-deny1-file-w</a></li>
    </ul>
  </li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="alamofire" /><summary type="html"><![CDATA[알라모파이어(alamofire) 설치]]></summary></entry><entry><title type="html">[UIKit] SDWebImage 설치하기</title><link href="http://localhost:4000/UIKit/SDWebImage/" rel="alternate" type="text/html" title="[UIKit] SDWebImage 설치하기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/SDWebImage</id><content type="html" xml:base="http://localhost:4000/UIKit/SDWebImage/"><![CDATA[<h1 id="sdwebimage란-">SDWebImage란 ?</h1>
<ul>
  <li>SDWebImage는 Objective-C로 작성된 이미지 로딩 및 캐싱 라이브러리입니다. iOS 및 macOS에서 많이 사용되며, Swift에서도 사용할 수 있습니다.</li>
  <li>SDWebImage는 비동기 이미지 다운로드, 캐싱 및 관리를 처리하고, 메모리 사용량을 최적화하여 원활한 사용자 경험을 제공합니다.</li>
  <li>또한 SDWebImage는 GIF 지원, 프로그레시브 다운로드, 이미지 처리 등의 기능을 제공합니다.</li>
  <li>SDWebImage는 iOS 개발 커뮤니티에서 오랫동안 사용되어 온 라이브러리 중 하나입니다.</li>
</ul>

<p><br /></p>

<h1 id="사용방법">사용방법</h1>
<h2 id="1-프로젝트-폴더로-이동해서-터미널-오픈">1. 프로젝트 폴더로 이동해서 터미널 오픈</h2>
<ul>
  <li>프로젝트 폴더로 이동해서 폴더를 우클릭하고 터미널을 오픈합니다.</li>
</ul>

<p><br /></p>

<h2 id="2-명령어를-입력합니다">2. 명령어를 입력합니다.</h2>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyGithub % pod init
</span></code></pre></div></div>

<p><br /></p>

<h2 id="3-프로젝트-폴더안에-podfile-확인">3. 프로젝트 폴더안에 Podfile 확인</h2>
<ul>
  <li>프로젝트 폴더 안에 Podfile이 생깁니다.</li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage1.png" alt="" /></p>

<p><br /></p>

<h2 id="4-podfile-더블클릭">4. Podfile 더블클릭</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage2.png" alt="" /></p>

<p><br /></p>

<h2 id="5-podfile-내-sdwebimage-추가">5. Podfile 내 SDWebImage 추가</h2>
<ul>
  <li>pod ‘SDWebImage’</li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage3.png" alt="" /></p>

<p><br /></p>

<h2 id="6-sdwebimage-설치---pod-install">6. SDWebImage 설치 - pod install</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage4.png" alt="" /></p>

<p><br /></p>

<h2 id="7project-재시작---xcworkspace-파일을-열어야합니다">7.project 재시작 - .xcworkspace 파일을 열어야합니다.</h2>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="SDWebImage" /><summary type="html"><![CDATA[SDWebImage 설치]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 소수 만들기</title><link href="http://localhost:4000/algorithm/%EC%86%8C%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 소수 만들기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%86%8C%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%86%8C%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>
    <p>주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
  </li>
  <li>
    <p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/12977" target="_blank">문제 풀기</a></p>
  </li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다.</li>
  <li>nums의 각 원소는 1 이상 1,000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>nums</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[1,2,3,4]</td>
      <td>1</td>
    </tr>
    <tr>
      <td>[1,2,7,6,4]</td>
      <td>4</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>[1,2,4]를 이용해서 7을 만들 수 있습니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>[1,2,4]를 이용해서 7을 만들 수 있습니다.</li>
  <li>[1,4,6]을 이용해서 11을 만들 수 있습니다.</li>
  <li>[2,4,7]을 이용해서 13을 만들 수 있습니다.</li>
  <li>[4,6,7]을 이용해서 17을 만들 수 있습니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">nums</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">answer</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">sum</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="n">nums</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">..&lt;</span><span class="n">nums</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
            <span class="k">for</span> <span class="n">k</span> <span class="k">in</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="o">..&lt;</span><span class="n">nums</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
                <span class="n">sum</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
  
                <span class="k">if</span> <span class="n">sum</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
                    <span class="k">for</span> <span class="n">n</span> <span class="k">in</span> <span class="mi">2</span><span class="o">...</span><span class="n">sum</span> <span class="p">{</span>
                        <span class="k">if</span> <span class="n">sum</span> <span class="o">%</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">sum</span> <span class="o">!=</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
                                <span class="k">break</span>
                            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                                <span class="c1">//print("sum: \(sum), n: \(n), 소수")</span>
                                <span class="n">answer</span> <span class="o">+=</span> <span class="mi">1</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">answer</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">nums</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">answer</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">combi</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="kt">Int</span><span class="p">](</span><span class="nv">repeating</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">count</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
    <span class="nf">combination</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">combi</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">nums</span><span class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">answer</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">answer</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">checkPrime</span><span class="p">(</span><span class="n">_</span> <span class="nv">num</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Bool</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">index</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">2</span><span class="o">...</span><span class="n">num</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">num</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
            <span class="n">index</span> <span class="o">=</span> <span class="n">i</span>
            <span class="k">break</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="n">index</span> <span class="o">==</span> <span class="n">num</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kc">true</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="kc">false</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">combination</span><span class="p">(</span><span class="n">_</span> <span class="nv">nums</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nv">combi</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[</span><span class="kt">Int</span><span class="p">],</span> <span class="n">_</span> <span class="nv">target</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span>
                 <span class="n">_</span> <span class="nv">n</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">index</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">k</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">answer</span><span class="p">:</span> <span class="k">inout</span> <span class="kt">Int</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">checkNum</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">combi</span> <span class="p">{</span>
            <span class="n">checkNum</span> <span class="o">+=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="p">}</span>
        <span class="c1">// 소수이면 1 더함</span>
        <span class="k">if</span> <span class="nf">checkPrime</span><span class="p">(</span><span class="n">checkNum</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="n">target</span> <span class="o">==</span> <span class="n">n</span> <span class="p">{</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span>
        <span class="n">combi</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">target</span>
        <span class="nf">combination</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">combi</span><span class="p">,</span> <span class="n">target</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">answer</span><span class="p">)</span>
        <span class="nf">combination</span><span class="p">(</span><span class="n">nums</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">combi</span><span class="p">,</span> <span class="n">target</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">k</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">answer</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>3자리수 조합을 구하여 더하고 홀수인 것만 소수 판별하여 자기 자신만 나누어 떨어지면 카운트</li>
</ul>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>이번 풀이는 다들 비슷비슷했다. 가장 많은 좋아요가 3개. 기능별로 함수를 만들어 사용했다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="소수 만들기" /><summary type="html"><![CDATA[[프로그래머스/Swift] 소수 만들기]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 26일차 - 2024.04.03</title><link href="http://localhost:4000/TIL/til26/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 26일차 - 2024.04.03" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til26</id><content type="html" xml:base="http://localhost:4000/TIL/til26/"><![CDATA[<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>3자리 수 덧셈 조합을 먼저 구하고 합이 홀수인 수만 소수 판별 체크</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EC%86%8C%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0/" target="_blank">소수만들기</a></li>
    </ul>
  </li>
</ul>

<h3 id="팀-프로젝트">팀 프로젝트</h3>
<ul>
  <li>Git에 올라온 자료를 하나로 합치는 일이 보통 일이 아니다.</li>
  <li>수정하지도 않았는데 git status에서 DS_Store, UserInterfaceState 파일때문에 문제가 발생하여 .gitignore에 브랜치 마다 추가하고 팀원들 브랜치를 각각 받아 수동으로 합쳤다. 각자 소스코드 작성하는 스타일이 달라 코드 컨벤션이 필요하구나 깨달았다.</li>
  <li>젭에서 새벽 2시까지 토론하고 계신 옆조를 찾아갔는데 같은 문제로 새로 시작하고 계셨다..</li>
  <li>오늘은 하나도 진행 못하고 날린 느낌</li>
</ul>

<h3 id="챌린지반">챌린지반</h3>
<ul>
  <li><a href="https://limlogging.github.io/UIKit/cocoapods/" target="_blank">코코아팟 설치하기</a></li>
  <li><a href="https://limlogging.github.io/UIKit/alamofire/" target="_blank">알라모파이어(alamofire) 설치하기</a></li>
  <li><a href="https://limlogging.github.io/UIKit/SDWebImage/" target="_blank">SDWebImage 설치하기</a></li>
  <li>주말에 했던 내용 하나씩 포스팅</li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>팀 과제 진행</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 26일차 이야기 - 2024.04.03]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 25일차</title><link href="http://localhost:4000/TIL/til25/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 25일차" /><published>2024-04-01T00:00:00+09:00</published><updated>2024-04-01T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til25</id><content type="html" xml:base="http://localhost:4000/TIL/til25/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-04-01-til25.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>문제는 생각보다 간단한 것 같은데 3개의 값을 비교하고 집계하고 순위를 정하는게 생각보다 고민스러웠다. 조금 더 쉬운 방법, swift가 제공하는 기본 함수를 사용할 수 없을까 생각했는데 찾지 못하고 처음 생각한대로 풀었다.</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/" target="_blank">모의고사</a></li>
    </ul>
  </li>
</ul>

<h3 id="팀-프로젝트">팀 프로젝트</h3>
<ul>
  <li>오늘은 팀 프로젝트 발제 후 팀프로젝트를 진행했다.</li>
  <li>키오스크를 만들어 보는 과제인데 주제를 정하고 구현해야하는 기능과 목표를 확인했다.</li>
  <li>필요한 키워드를 골라서 각자 해보고 싶었던 주제를 골라 역할 분담을 했다.</li>
  <li>나는 프로젝트에 필요한 이미지파일을 모으고 기본 프로젝트를 Git에 올렸다.</li>
  <li>깃허브 풀리퀘스트가 안돼서 엄청 시간 뺐겼는데 내일 차근차근 다시 해본다. !</li>
</ul>

<h3 id="챌린지반">챌린지반</h3>
<ul>
  <li>주말에 생각보다 수월하게 과제를 했다.</li>
  <li>테이블뷰 페이징처리만 못하고 기본적인 내용을 오로지 코드로만! 코드로만 작성하고 해냈다.</li>
  <li>깃허브 프로필 부분만 코드로 구현하는 내용이었지만 일부분만 스토리보드로 구현하는게 오토레이아웃 잡기가 힘들 것 같아 코드로만 진행했는데 나쁘지 않았다.</li>
  <li>코코아팟 설치, Alamofire, SDWebImage 라이브러리를 사용했다.</li>
  <li>현재 진행 상황 
<img src="/assets/images/categories/til/2024-04-01-til25-2.png" alt="" /></li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>깃허브 공부 및 챌린지반 과제 페이징 처리 구현하기</li>
  <li>챌린지반 과제 블로그 포스팅하기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 25일차 이야기]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 모의고사</title><link href="http://localhost:4000/algorithm/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 모의고사" /><published>2024-04-01T00:00:00+09:00</published><updated>2024-04-01T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC</id><content type="html" xml:base="http://localhost:4000/algorithm/%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
    <ul>
      <li>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …</li>
      <li>2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …</li>
      <li>3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …</li>
    </ul>
  </li>
  <li>
    <p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>
  </li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/42840" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>시험은 최대 10,000 문제로 구성되어있습니다.</li>
  <li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li>
  <li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>answers</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[1,2,3,4,5]</td>
      <td>[1]</td>
    </tr>
    <tr>
      <td>[1,3,2,4,2]</td>
      <td>[1,2,3]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>수포자 1은 모든 문제를 맞혔습니다.</li>
  <li>수포자 2는 모든 문제를 틀렸습니다.</li>
  <li>수포자 3은 모든 문제를 틀렸습니다.
따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>모든 사람이 2문제씩을 맞췄습니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">answers</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">one</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
    <span class="k">let</span> <span class="nv">two</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
    <span class="k">let</span> <span class="nv">three</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
    
    <span class="k">var</span> <span class="nv">oneIndex</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">twoIndex</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">threeIndex</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">var</span> <span class="nv">oneCnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">twoCnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">threeCnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">answers</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">one</span><span class="p">[</span><span class="n">oneIndex</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">oneCnt</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">two</span><span class="p">[</span><span class="n">twoIndex</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">twoCnt</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">three</span><span class="p">[</span><span class="n">threeIndex</span><span class="p">]</span> <span class="p">{</span>
            <span class="n">threeCnt</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="n">one</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">oneIndex</span> <span class="p">{</span>
            <span class="n">oneIndex</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">oneIndex</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">two</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">twoIndex</span> <span class="p">{</span>
            <span class="n">twoIndex</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">twoIndex</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">three</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">threeIndex</span> <span class="p">{</span>
            <span class="n">threeIndex</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">threeIndex</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="c1">//print("1번수포자: \(oneCnt), 2번수포자: \(twoCnt), 3번수포자: \(threeCnt)")</span>
    <span class="k">var</span> <span class="nv">tempArr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">tempArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">oneCnt</span><span class="p">)</span>
    <span class="n">tempArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">twoCnt</span><span class="p">)</span>
    <span class="n">tempArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">threeCnt</span><span class="p">)</span>
    
    <span class="c1">//print("max: \(tempArr.max())")</span>
    
    <span class="k">var</span> <span class="nv">resultArr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">if</span> <span class="k">let</span> <span class="nv">max</span> <span class="o">=</span> <span class="n">tempArr</span><span class="o">.</span><span class="nf">max</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">max</span> <span class="o">==</span> <span class="n">oneCnt</span> <span class="p">{</span>
            <span class="n">resultArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">max</span> <span class="o">==</span> <span class="n">twoCnt</span> <span class="p">{</span>
            <span class="n">resultArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="n">max</span> <span class="o">==</span> <span class="n">threeCnt</span> <span class="p">{</span>
            <span class="n">resultArr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">resultArr</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">answers</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">answer</span> <span class="o">=</span> <span class="p">(</span>
        <span class="nv">a</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="c1">// index % 5</span>
        <span class="nv">b</span><span class="p">:</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="c1">// index % 8</span>
        <span class="nv">c</span><span class="p">:</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span> <span class="c1">// index % 10</span>
    <span class="p">)</span>
    <span class="k">var</span> <span class="nv">point</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span><span class="mi">0</span><span class="p">]</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="k">in</span> <span class="n">answers</span><span class="o">.</span><span class="nf">enumerated</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">v</span> <span class="o">==</span> <span class="n">answer</span><span class="o">.</span><span class="n">a</span><span class="p">[</span><span class="n">i</span> <span class="o">%</span> <span class="mi">5</span><span class="p">]</span> <span class="p">{</span> <span class="n">point</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">point</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
        <span class="k">if</span> <span class="n">v</span> <span class="o">==</span> <span class="n">answer</span><span class="o">.</span><span class="n">b</span><span class="p">[</span><span class="n">i</span> <span class="o">%</span> <span class="mi">8</span><span class="p">]</span> <span class="p">{</span> <span class="n">point</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">point</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">!</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
        <span class="k">if</span> <span class="n">v</span> <span class="o">==</span> <span class="n">answer</span><span class="o">.</span><span class="n">c</span><span class="p">[</span><span class="n">i</span> <span class="o">%</span> <span class="mi">10</span><span class="p">]</span> <span class="p">{</span> <span class="n">point</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">point</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">!</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">point</span><span class="o">.</span><span class="n">sorted</span><span class="p">{</span> <span class="nv">$0</span><span class="o">.</span><span class="n">key</span> <span class="o">&lt;</span> <span class="nv">$1</span><span class="o">.</span><span class="n">key</span> <span class="p">}</span><span class="o">.</span><span class="n">filter</span><span class="p">{</span> <span class="nv">$0</span><span class="o">.</span><span class="n">value</span> <span class="o">==</span> <span class="n">point</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="nf">max</span><span class="p">()</span> <span class="p">}</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="nv">$0</span><span class="o">.</span><span class="n">key</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>패턴이 반복되니까 answer에서 패턴을 하나씩 비교하면서 정답을 count하고 정답 수를 배열에 담은 뒤 가장 큰 값을 구했다.</li>
  <li>가장 큰 값과 정답 수가 맞는 사람을 차례로 배열에 추가했다.</li>
</ul>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>어떻게하면 저렇게 생각할 수 있을까? 좋아요가 50개 이상…</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="모의고사" /><summary type="html"><![CDATA[[프로그래머스/Swift] 모의고사]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 24일차</title><link href="http://localhost:4000/TIL/til24/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 24일차" /><published>2024-03-29T00:00:00+09:00</published><updated>2024-03-29T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til24</id><content type="html" xml:base="http://localhost:4000/TIL/til24/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-29-til24.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>5문제가 시간 초과로 통화하지 못해서 다른 방법을 고민하다가 for문으로 해결했다.</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EA%B3%BC%EC%9D%BC%EC%9E%A5%EC%88%98/" target="_blank">과일장수</a></li>
    </ul>
  </li>
</ul>

<h3 id="개인-과제-공부">개인 과제 공부</h3>
<ul>
  <li>개인 과제 제출날 오후는 살짝 널널한 ? 느낌. 오전에 팀원분 과제 잠시 도와드리고 오후에는 개인과제 해설 영상을 봤다. 그리고 프로젝트 회고 작성</li>
  <li><a href="https://limlogging.github.io/sparta/ToDoList/" target="_blank">ToDoList 만들기 프로젝트</a></li>
</ul>

<h3 id="챌린지반">챌린지반</h3>
<ul>
  <li>구현해야하는 내용을 PDF로 주셔서 내용만 확인하고 아직 시작도 못했다.</li>
  <li>다음주에 팀과제, 개인과제 따로 있어 주말에 시간날때 조금이라도 시작해야겠다.</li>
</ul>

<h3 id="주말-목표">주말 목표</h3>
<ul>
  <li>챌린지반 과제 시작하기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 24일차 이야기]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 과일 장수</title><link href="http://localhost:4000/algorithm/%EA%B3%BC%EC%9D%BC%EC%9E%A5%EC%88%98/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 과일 장수" /><published>2024-03-29T00:00:00+09:00</published><updated>2024-03-29T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EA%B3%BC%EC%9D%BC%EC%9E%A5%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/%EA%B3%BC%EC%9D%BC%EC%9E%A5%EC%88%98/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>과일 장수가 사과 상자를 포장하고 있습니다. 사과는 상태에 따라 1점부터 k점까지의 점수로 분류하며, k점이 최상품의 사과이고 1점이 최하품의 사과입니다. 사과 한 상자의 가격은 다음과 같이 결정됩니다.
    <ul>
      <li>한 상자에 사과를 m개씩 담아 포장합니다.</li>
      <li>상자에 담긴 사과 중 가장 낮은 점수가 p (1 ≤ p ≤ k)점인 경우, 사과 한 상자의 가격은 p * m 입니다.</li>
    </ul>
  </li>
  <li>과일 장수가 가능한 많은 사과를 팔았을 때, 얻을 수 있는 최대 이익을 계산하고자 합니다.(사과는 상자 단위로만 판매하며, 남는 사과는 버립니다)</li>
  <li>예를 들어, k = 3, m = 4, 사과 7개의 점수가 [1, 2, 3, 1, 2, 3, 1]이라면, 다음과 같이 [2, 3, 2, 3]으로 구성된 사과 상자 1개를 만들어 판매하여 최대 이익을 얻을 수 있습니다.
    <ul>
      <li>(최저 사과 점수) x (한 상자에 담긴 사과 개수) x (상자의 개수) = 2 x 4 x 1 = 8</li>
    </ul>
  </li>
  <li>사과의 최대 점수 k, 한 상자에 들어가는 사과의 수 m, 사과들의 점수 score가 주어졌을 때, 과일 장수가 얻을 수 있는 최대 이익을 return하는 solution 함수를 완성해주세요.</li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/135808" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>3 ≤ k ≤ 9</li>
  <li>3 ≤ m ≤ 10</li>
  <li>7 ≤ score의 길이 ≤ 1,000,000
    <ul>
      <li>1 ≤ score[i] ≤ k</li>
    </ul>
  </li>
  <li>이익이 발생하지 않는 경우에는 0을 return 해주세요.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>k</th>
      <th>m</th>
      <th>score</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3</td>
      <td>4</td>
      <td>[1, 2, 3, 1, 2, 3, 1]</td>
      <td>8</td>
    </tr>
    <tr>
      <td>4</td>
      <td>3</td>
      <td>[4, 1, 2, 2, 4, 4, 4, 4, 1, 2, 4, 2]</td>
      <td>33</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>다음과 같이 사과 상자를 포장하여 모두 팔면 최대 이익을 낼 수 있습니다.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>사과</th>
      <th>상자</th>
      <th>가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[1, 1, 2]</td>
      <td>1 x 3 = 3</td>
      <td> </td>
    </tr>
    <tr>
      <td>[2, 2, 2]</td>
      <td>2 x 3 = 6</td>
      <td> </td>
    </tr>
    <tr>
      <td>[4, 4, 4]</td>
      <td>4 x 3 = 12</td>
      <td> </td>
    </tr>
    <tr>
      <td>[4, 4, 4]</td>
      <td>4 x 3 = 12</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>따라서 (1 x 3 x 1) + (2 x 3 x 1) + (4 x 3 x 2) = 33을 return합니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">k</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">m</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">score</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="nf">guard</span> <span class="p">(</span><span class="n">k</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">m</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">m</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">score</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">7</span> <span class="o">&amp;&amp;</span> <span class="n">score</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">1000000</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span> <span class="p">}</span>
    
    <span class="k">var</span> <span class="nv">scoreArr</span> <span class="o">=</span> <span class="n">score</span><span class="o">.</span><span class="n">sorted</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">&gt;</span> <span class="nv">$1</span> <span class="p">}</span>
    <span class="k">var</span> <span class="nv">sum</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
<span class="c1">//    while scoreArr.count &gt;= m {</span>
<span class="c1">//        sum += scoreArr.prefix(m).last! * m</span>
<span class="c1">//        </span>
<span class="c1">//        let range = 0..&lt;m</span>
<span class="c1">//        scoreArr.removeSubrange(range)</span>
<span class="c1">//    }</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span> <span class="k">in</span> <span class="n">scoreArr</span><span class="o">.</span><span class="nf">enumerated</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">m</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
            <span class="c1">//print("index: \(index), \(value * m)")</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">value</span> <span class="o">*</span> <span class="n">m</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">sum</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">k</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">m</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">score</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">s</span> <span class="o">=</span> <span class="n">score</span><span class="o">.</span><span class="nf">sorted</span><span class="p">(</span><span class="nv">by</span><span class="p">:</span> <span class="o">&gt;</span><span class="p">)</span>
    <span class="k">return</span> <span class="nf">stride</span><span class="p">(</span><span class="nv">from</span><span class="p">:</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">to</span><span class="p">:</span> <span class="n">score</span><span class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="nv">by</span><span class="p">:</span> <span class="n">m</span><span class="p">)</span>
        <span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">+</span> <span class="n">s</span><span class="p">[</span><span class="nv">$1</span><span class="p">]</span> <span class="o">*</span> <span class="n">m</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>처음에는 정렬 후 m개의 배열을 뽑아서 가장 낮은 값을 구하고 계산을 했다.</li>
  <li>while true 문을 써서 그런가 시간 초과로 통과하지 못했다. (아래 11 ~ 15번에서 시간초과 발생)</li>
  <li>for문을 사용하고 정렬했으니 m개씩 잘라서 마지막 값이 가장 작은 값이기 때문에 그 값으로 계산하고 해결했다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp"> 테스트 9 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>143.66ms, 19. 8MB<span class="o">)</span>  
<span class="gp"> 테스트 10 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>200.39ms, 18. 9MB<span class="o">)</span> 
<span class="gp"> 테스트 11 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>2919.63ms, 60.7MB<span class="o">)</span>
<span class="gp"> 테스트 12 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>2764.20ms, 60.8MB<span class="o">)</span>
<span class="gp"> 테스트 13 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>2656.91ms, 60. 6MB<span class="o">)</span>
<span class="gp"> 테스트 14 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>2809.80ms, 60.6MB<span class="o">)</span> 
<span class="gp"> 테스트 15 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>3070.25ms, 60.9MB<span class="o">)</span>
<span class="gp"> 테스트 16 &gt;</span><span class="w"> </span>통과 <span class="o">(</span>0.12ms, 16.3MB<span class="o">)</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>stride를 사용하여 푸는 방법도 있다는걸 알았다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="과일 장수" /><summary type="html"><![CDATA[[프로그래머스/Swift] 과일 장수]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 입문 - ToDoList 만들기 프로젝트</title><link href="http://localhost:4000/sparta/ToDoList/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 입문 - ToDoList 만들기 프로젝트" /><published>2024-03-29T00:00:00+09:00</published><updated>2024-03-29T00:00:00+09:00</updated><id>http://localhost:4000/sparta/ToDoList</id><content type="html" xml:base="http://localhost:4000/sparta/ToDoList/"><![CDATA[<h1 id="todolist-만들기">ToDoList 만들기</h1>
<ul>
  <li>앱 개발 입문 과제로 ToDoList 만들기를 구현하였습니다.</li>
</ul>

<h1 id="실행-화면">실행 화면</h1>

<video width="640" height="360" controls="">
    <source src="../../assets/video/categories/sparta/2024-03-29-ToDoListProject.mov" type="video/mp4" />
</video>

<h1 id="구현-기능">구현 기능</h1>
<ol>
  <li>ToDoList 출력</li>
  <li>Alert 버튼으로 할 일 입력</li>
  <li>네비게이션 바버튼을 통한 수정, 삭제, 순서 변경</li>
  <li>TableView Row선택 시 화면 이동 및 상세 내용보기, 수정내용 자동 저장</li>
  <li>총 할일 수, 총 완료 수 확인</li>
</ol>

<h1 id="프로젝트간-공부한-내용">프로젝트간 공부한 내용</h1>
<ul>
  <li><a href="https://limlogging.github.io/UIKit/Delegate/" target="_blank">델리게이트(Delegate) 패턴</a></li>
  <li><a href="https://limlogging.github.io/UIKit/UIAlertController/" target="_blank">얼러트 컨트롤러(UIAlertController)</a></li>
  <li><a href="https://limlogging.github.io/uikit/%EC%BD%94%EB%93%9C%EB%A1%9C%ED%99%94%EB%A9%B4%EC%9D%B4%EB%8F%99/" target="_blank">코드로 화면 이동</a></li>
  <li><a href="https://limlogging.github.io/UIKit/underlineAndStrikethrough/" target="_blank">Label 밑줄, 취소선 적용</a></li>
  <li><a href="https://limlogging.github.io/UIKit/UITableView/" target="_blank">UITableView - 데이터 목록 표시</a></li>
  <li><a href="https://limlogging.github.io/UIKit/NavigationBarEditButton/" target="_blank">NavigationBar에 Edit 버튼 추가하기</a></li>
  <li><a href="https://limlogging.github.io/UIKit/TableViewSwipeDelete/" target="_blank">Tableview에서 Swipe로 Row 삭제하기</a></li>
  <li><a href="https://limlogging.github.io/UIKit/UITableViewCellDelegate/" target="_blank">Tableview Cell에서 Delegate 사용</a></li>
  <li><a href="https://limlogging.github.io/uikit/%EB%AA%A9%EB%A1%9D%EC%88%9C%EC%84%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/" target="_blank">TableView 목록 순서 바꾸기</a></li>
  <li><a href="https://limlogging.github.io/uikit/%EC%85%80%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%8A%A4%EC%99%80%EC%9D%B4%ED%94%84%EC%95%A1%EC%85%98/" target="_blank">Cell의 오른쪽 Swipe 액션으로 수정/삭제 버튼 구현</a></li>
  <li><a href="https://limlogging.github.io/uikit/%EB%A1%9C%EC%9A%B0%EC%84%A0%ED%83%9D%ED%9B%84%ED%99%94%EB%A9%B4%EC%9D%B4%EB%8F%99/" target="_blank">TableView Row 선택 후 화면 이동하기</a></li>
</ul>

<h1 id="회고">회고</h1>
<ul>
  <li>스토리보드를 통해 UI는 어찌어찌 구현하였으나 그 이후 데이터를 TableView에 보여주기, View Controller 간 발생한 이벤트 처리 등 기능은 간단하지만, 그 기능을 위해 알아야하는 델리게이트 패턴, 얼러트컨트롤러, 프로토콜 채택 등 많은 것을 공부할 수 있었다.</li>
  <li>첫 주는 강의 및 개인 과제를 위한 핵심 키워드 공부, 둘째 주는 실제 프로젝트 생성 및 기능 추가하기. 간단하지만 스스로 만든 첫 프로젝트를 마무리하면서 완성했다는 성취감을 얻을 수 있었다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="ToDoList" /><summary type="html"><![CDATA[iOS 앱 개발 입문 - ToDoList 만들기 프로젝트]]></summary></entry></feed>