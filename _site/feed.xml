<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-03-28T10:03:39+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">limlogging Devlog</title><author><name>HyeongSub Lim</name></author><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 22일차</title><link href="http://localhost:4000/TIL/til22/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 22일차" /><published>2024-03-27T00:00:00+09:00</published><updated>2024-03-27T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til22</id><content type="html" xml:base="http://localhost:4000/TIL/til22/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-27-til22.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>오늘은 특정 날짜의 요일을 맞추는 문제였는데 Swift에서 제공하는 함수로 처리할 수 있을 것 같았다. Swift에서의 Date처리 방법을 확인하고 풀었다.</li>
  <li>Date, Calendar 관련은 따로 정리해보고 포스팅 해봐야겠다.</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/2016%EB%85%84/" target="_blank">2016년</a></li>
    </ul>
  </li>
</ul>

<h3 id="개인-과제-공부">개인 과제 공부</h3>
<ul>
  <li>NavigationBar에 Edit 버튼을 코드로 추가했었는데 스토리보드에서 Button을 추가하는 걸로 수정했다. Edit 버튼을 선택하면 Done으로 바뀌고 Done을 선택하면 Edit로 바뀌는데 Text 변경이 되지 않아 한참 걸렸다. 버튼을 선택할때 마다 bar button item 설정을 변경하는 것으로 해결했다.</li>
  <li>Swipe 삭제도 수정버튼을 추가하려면 다른 메서드를 사용해야해서 다시한다고 시간이 걸렸다. 어떤 메서드를 써야하나 찾는게 시간이 걸린다.</li>
  <li><a href="https://limlogging.github.io/uikit/%EC%85%80%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%8A%A4%EC%99%80%EC%9D%B4%ED%94%84%EC%95%A1%EC%85%98/" target="_blank">Cell의 오른쪽 Swipe 액션으로 수정/삭제 버튼 구현</a></li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>꾸미기 도전에는 실패했는데 우선 기능 추가와 완성에 조금 더 집중하는걸로</li>
  <li>알고리즘 문제 풀기 (문제 풀고 고차함수 연습 꼭 10분이라도..)</li>
  <li>과제 풀기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 22일차 이야기]]></summary></entry><entry><title type="html">[UIKit] Cell의 오른쪽 Swipe 액션으로 수정/삭제 버튼 구현</title><link href="http://localhost:4000/uikit/%EC%85%80%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%8A%A4%EC%99%80%EC%9D%B4%ED%94%84%EC%95%A1%EC%85%98/" rel="alternate" type="text/html" title="[UIKit] Cell의 오른쪽 Swipe 액션으로 수정/삭제 버튼 구현" /><published>2024-03-27T00:00:00+09:00</published><updated>2024-03-27T00:00:00+09:00</updated><id>http://localhost:4000/uikit/%EC%85%80%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%8A%A4%EC%99%80%EC%9D%B4%ED%94%84%EC%95%A1%EC%85%98</id><content type="html" xml:base="http://localhost:4000/uikit/%EC%85%80%EC%98%A4%EB%A5%B8%EC%AA%BD%EC%8A%A4%EC%99%80%EC%9D%B4%ED%94%84%EC%95%A1%EC%85%98/"><![CDATA[<h1 id="cell을-오른쪽-swipe하여-수정--삭제-기능-화면보기">Cell을 오른쪽 Swipe하여 수정 / 삭제 기능 화면보기</h1>
<ul>
  <li>Cell을 오른쪽 Swipe하여 수정, 삭제 버튼을 추가했습니다.</li>
</ul>

<h2 id="실행화면">실행화면</h2>

<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-27-trailingSwipeActionsConfigurationForRowAt.mov" type="video/mp4" />
</video>

<p><br /></p>

<h1 id="예제-코드">예제 코드</h1>
<ul>
  <li>UITableViewDelegate 채택 후 trailingSwipeActionsConfigurationForRowAt 메서드를 구현합니다.</li>
  <li>특정 indexPath에 해당하는 테이블 뷰 셀의 오른쪽 스와이프 액션을 구성할 때 호출됩니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 오른쪽으로 스와이프할 때의 액션을 구성하는 메서드</span>
<span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">trailingSwipeActionsConfigurationForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UISwipeActionsConfiguration</span><span class="p">?</span> <span class="p">{</span>
    <span class="c1">// 삭제 액션 설정</span>
    <span class="k">let</span> <span class="nv">deleteAction</span> <span class="o">=</span> <span class="kt">UIContextualAction</span><span class="p">(</span><span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">destructive</span><span class="p">,</span> <span class="nv">title</span><span class="p">:</span> <span class="s">"삭제"</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">action</span><span class="p">,</span> <span class="n">view</span><span class="p">,</span> <span class="n">completionHandler</span><span class="p">)</span> <span class="k">in</span>
        <span class="c1">//삭제 기능 추가 </span>
        <span class="k">let</span> <span class="nv">alertController</span> <span class="o">=</span> <span class="kt">UIAlertController</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"삭제 확인"</span><span class="p">,</span> <span class="nv">message</span><span class="p">:</span> <span class="s">"삭제하시겠습니까?"</span><span class="p">,</span> <span class="nv">preferredStyle</span><span class="p">:</span> <span class="o">.</span><span class="n">alert</span><span class="p">)</span>
        <span class="k">let</span> <span class="nv">cancelButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"취소"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">cancel</span><span class="p">)</span>
        <span class="k">let</span> <span class="nv">deleteButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"삭제"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
            <span class="c1">// 데이터 소스에서 해당 셀에 대한 데이터를 삭제</span>
            <span class="k">self</span><span class="o">.</span><span class="n">myToDoListArray</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
            <span class="c1">// 테이블 뷰에서 해당 셀을 삭제</span>
            <span class="n">tableView</span><span class="o">.</span><span class="nf">deleteRows</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="p">[</span><span class="n">indexPath</span><span class="p">],</span> <span class="nv">with</span><span class="p">:</span> <span class="o">.</span><span class="n">fade</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">cancelButton</span><span class="p">)</span>
        <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">deleteButton</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="nf">present</span><span class="p">(</span><span class="n">alertController</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
    
        <span class="c1">// 처리 완료 핸들러 호출</span>
        <span class="nf">completionHandler</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">// 수정 액션 설정</span>
    <span class="k">let</span> <span class="nv">editAction</span> <span class="o">=</span> <span class="kt">UIContextualAction</span><span class="p">(</span><span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">normal</span><span class="p">,</span> <span class="nv">title</span><span class="p">:</span> <span class="s">"수정"</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">action</span><span class="p">,</span> <span class="n">view</span><span class="p">,</span> <span class="n">completionHandler</span><span class="p">)</span> <span class="k">in</span>
        <span class="c1">//수정 기능 추가 </span>
        <span class="k">let</span> <span class="nv">alertController</span> <span class="o">=</span> <span class="kt">UIAlertController</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"할 일 입력"</span><span class="p">,</span> <span class="nv">message</span><span class="p">:</span> <span class="s">""</span><span class="p">,</span> <span class="nv">preferredStyle</span><span class="p">:</span> <span class="o">.</span><span class="n">alert</span><span class="p">)</span>
        <span class="n">alertController</span><span class="o">.</span><span class="n">addTextField</span> <span class="p">{</span> <span class="n">textField</span> <span class="k">in</span>
            <span class="n">textField</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoTitle</span>
        <span class="p">}</span>
        <span class="k">let</span> <span class="nv">cancelButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"취소"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">cancel</span><span class="p">)</span>
        <span class="k">let</span> <span class="nv">editButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"수정"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
            <span class="k">if</span> <span class="k">let</span> <span class="nv">editTextField</span> <span class="o">=</span> <span class="n">alertController</span><span class="o">.</span><span class="n">textFields</span><span class="p">?</span><span class="o">.</span><span class="n">first</span><span class="p">,</span>
                <span class="k">let</span> <span class="nv">text</span> <span class="o">=</span> <span class="n">editTextField</span><span class="o">.</span><span class="n">text</span> <span class="p">{</span>
                <span class="k">self</span><span class="o">.</span><span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoTitle</span> <span class="o">=</span> <span class="n">text</span>
                <span class="c1">// 수정됐는지 확인하기 위해 row 새로고침</span>
                <span class="k">self</span><span class="o">.</span><span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">reloadRows</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="p">[</span><span class="n">indexPath</span><span class="p">],</span> <span class="nv">with</span><span class="p">:</span> <span class="o">.</span><span class="n">automatic</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">cancelButton</span><span class="p">)</span>
        <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">editButton</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="nf">present</span><span class="p">(</span><span class="n">alertController</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
        
        <span class="nf">completionHandler</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">// 버튼들을 배열로 묶어서 스와이프 액션 구성</span>
    <span class="k">let</span> <span class="nv">swipeConfiguration</span> <span class="o">=</span> <span class="kt">UISwipeActionsConfiguration</span><span class="p">(</span><span class="nv">actions</span><span class="p">:</span> <span class="p">[</span><span class="n">deleteAction</span><span class="p">,</span> <span class="n">editAction</span><span class="p">])</span>
    
    <span class="c1">// 스와이프 액션 구성 반환</span>
    <span class="k">return</span> <span class="n">swipeConfiguration</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="마무리">마무리</h1>
<ul>
  <li>기존에 사용한 메서드 tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) 삭제</li>
  <li>기존에 사용한 메서드에서 스와이프를 통한 삭제 기능을 추가했으나 수정 버튼을 추가할 수 없었다.</li>
  <li>스와이프로 원하는 액션을 만들어 구성하는 방법으로 원하는 기능 추가 가능</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="Tableview" /><category term="Cell" /><category term="Swipe" /><category term="edit" /><category term="delete" /><summary type="html"><![CDATA[Cell 오른쪽 Swipe로 수정,삭제 구현]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 2016년</title><link href="http://localhost:4000/algorithm/2016%EB%85%84/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 2016년" /><published>2024-03-27T00:00:00+09:00</published><updated>2024-03-27T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2016%EB%85%84</id><content type="html" xml:base="http://localhost:4000/algorithm/2016%EB%85%84/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>
    <p>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT 입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 “TUE”를 반환하세요.</p>
  </li>
  <li>
    <p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/12901" target="_blank">문제 풀기</a></p>
  </li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>2016년은 윤년입니다.</li>
  <li>2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>a</th>
      <th>b</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>5</td>
      <td>24</td>
      <td>TUE</td>
    </tr>
  </tbody>
</table>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">a</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">b</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">weekdays</span> <span class="o">=</span> <span class="p">[</span><span class="s">"SUN"</span><span class="p">,</span> <span class="s">"MON"</span><span class="p">,</span> <span class="s">"TUE"</span><span class="p">,</span> <span class="s">"WED"</span><span class="p">,</span> <span class="s">"THU"</span> <span class="p">,</span> <span class="s">"FRI"</span><span class="p">,</span> <span class="s">"SAT"</span><span class="p">]</span>
    <span class="k">let</span> <span class="nv">month</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="nv">format</span><span class="p">:</span> <span class="s">"%02d"</span><span class="p">,</span> <span class="n">a</span><span class="p">)</span>   <span class="c1">//한자리인 경우 앞에 0이 붙도록 </span>
    <span class="k">let</span> <span class="nv">day</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="nv">format</span><span class="p">:</span> <span class="s">"%02d"</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>     <span class="c1">//한자리인 경우 앞에 0이 붙도록 </span>
    
    <span class="c1">//문자열을 날짜로 변환하기 위해 사용 </span>
    <span class="k">let</span> <span class="nv">dateFormatter</span> <span class="o">=</span> <span class="kt">DateFormatter</span><span class="p">()</span>
    <span class="n">dateFormatter</span><span class="o">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">"yyyyMMdd"</span>
    
    <span class="k">guard</span> <span class="k">let</span> <span class="nv">date</span> <span class="o">=</span> <span class="n">dateFormatter</span><span class="o">.</span><span class="nf">date</span><span class="p">(</span><span class="nv">from</span><span class="p">:</span> <span class="s">"2016"</span> <span class="o">+</span> <span class="n">month</span> <span class="o">+</span> <span class="n">day</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="s">""</span> <span class="p">}</span>
    
    <span class="k">let</span> <span class="nv">calendar</span> <span class="o">=</span> <span class="kt">Calendar</span><span class="o">.</span><span class="n">current</span>     <span class="c1">//현재 달력 가져오기 </span>
    <span class="k">let</span> <span class="nv">weekday</span> <span class="o">=</span> <span class="n">calendar</span><span class="o">.</span><span class="nf">component</span><span class="p">(</span><span class="o">.</span><span class="n">weekday</span><span class="p">,</span> <span class="nv">from</span><span class="p">:</span> <span class="n">date</span><span class="p">)</span>  <span class="c1">//요일 추출하기 </span>
        
    <span class="k">return</span> <span class="n">weekdays</span><span class="p">[</span><span class="n">weekday</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">a</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">b</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">w</span> <span class="o">=</span> <span class="p">[</span><span class="s">"THU"</span><span class="p">,</span> <span class="s">"FRI"</span><span class="p">,</span> <span class="s">"SAT"</span><span class="p">,</span> <span class="s">"SUN"</span><span class="p">,</span> <span class="s">"MON"</span><span class="p">,</span> <span class="s">"TUE"</span><span class="p">,</span> <span class="s">"WED"</span><span class="p">]</span>
    <span class="k">let</span> <span class="nv">monthDay</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">]</span>
    <span class="k">let</span> <span class="nv">totalDay</span> <span class="o">=</span> <span class="n">monthDay</span><span class="p">[</span><span class="mi">0</span><span class="o">..&lt;</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span>

    <span class="k">return</span> <span class="n">w</span><span class="p">[</span><span class="n">totalDay</span> <span class="o">%</span> <span class="mi">7</span><span class="p">]</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="의견">의견</h1>
<ul>
  <li>이번에는 날짜 관련된 기능을 알아야 할 것 같아 바로 검색을 하고 풀었다.</li>
  <li>좋아요 많은 다른 사람 풀이를 봤지만 2016년 기준이라 DateFormatter, Calendar를 쓰는게 년도 입력으로 확장하기에 더 맞는 방법인 것 같다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="2016년" /><summary type="html"><![CDATA[[프로그래머스/Swift] 2016년]]></summary></entry><entry><title type="html">[UIKit] Tableview Cell에서 Delegate 사용</title><link href="http://localhost:4000/UIKit/UITableViewCellDelegate/" rel="alternate" type="text/html" title="[UIKit] Tableview Cell에서 Delegate 사용" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/UITableViewCellDelegate</id><content type="html" xml:base="http://localhost:4000/UIKit/UITableViewCellDelegate/"><![CDATA[<h1 id="tableviewcell과-viewcontroller와-상호작용">TableViewCell과 ViewController와 상호작용</h1>
<ul>
  <li>TableViewCell에는 ViewController에서 가져온 데이터를 보여줍니다.</li>
  <li>Cell에서 스위치의 데이터를 변경하고 새로운 데이터를 추가하면 switch 정보가 초기화가 됩니다.</li>
  <li>Cell에서 스위치를 변경할때 ViewController의 배열의 값도 변경하면 새로운 값이 추가되어도 스위치의 Value가 바뀌지 않을 것 입니다.</li>
</ul>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-UITableViewCellDelegate1.mov" type="video/mp4" />
</video>

<h1 id="예제-코드">예제 코드</h1>
<ul>
  <li>Cell에서 스위치를 변경할때 ViewController의 배열의 값도 변경하면 새로운 값이 추가되어도 스위치의 Value가 바뀌지 않도록하는 예제입니다.</li>
</ul>

<h2 id="1-스위치-valuechanged-액션함수-생성">1. 스위치 ValueChanged 액션함수 생성</h2>
<ul>
  <li>Cell 클래스에 액션 함수 추가</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 스위치 변경 이벤트</span>
<span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UISwitch</span><span class="p">)</span> <span class="p">{</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="2-스위치-delegate-프로토콜-정의">2. 스위치 Delegate 프로토콜 정의</h2>
<ul>
  <li>스위치 값이 변경될때마다 해당 정보를 View Controller로 전달 할 수 있는 프로토콜을 Cell class에 정의합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>

<span class="c1">//스위치 값이 변경될때마다 해당 정보를 View Controller로 전달 할 수 있는 프로토콜을 정의</span>
<span class="kd">protocol</span> <span class="kt">MyToDoListCellDelegate</span><span class="p">:</span> <span class="kt">AnyObject</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">cell</span><span class="p">:</span> <span class="kt">MyToDoListCell</span><span class="p">,</span> <span class="nv">isOn</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="c1">// 스위치 값 변경 시 호출할 메서드</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="kt">MyToDoListCell</span><span class="p">:</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
</code></pre></div></div>

<h2 id="3-스위치-delegate-선언">3. 스위치 Delegate 선언</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 스위치 값 변경 이벤트를 처리할 delegate를 선언합니다.</span>
<span class="k">var</span> <span class="nv">delegate</span><span class="p">:</span> <span class="kt">MyToDoListCellDelegate</span><span class="p">?</span>   <span class="c1">// 스위치 값 변경 이벤트를 처리할 delegate</span>

<span class="k">override</span> <span class="kd">func</span> <span class="nf">awakeFromNib</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">super</span><span class="o">.</span><span class="nf">awakeFromNib</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="4-스위치-valuechanged-액션함수-수정">4. 스위치 ValueChanged 액션함수 수정</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 스위치 변경 이벤트</span>
<span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UISwitch</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// delegate를 통해 스위치 값 변경 이벤트를 처리할 메서드를 호출합니다.</span>
    <span class="n">delegate</span><span class="p">?</span><span class="o">.</span><span class="nf">switchValueChanged</span><span class="p">(</span><span class="k">self</span><span class="p">,</span> <span class="nv">isOn</span><span class="p">:</span> <span class="n">sender</span><span class="o">.</span><span class="n">isOn</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="5-viewcontroller에서-스위치-델리게이트-채택">5. ViewController에서 스위치 델리게이트 채택</h2>
<ul>
  <li>ViewController를 확장하여 스위치 델리게이트 채택</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 스위치 변경 이벤트 처리를 위한 Delegate 채택</span>
<span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">MyToDoListCellDelegate</span> <span class="p">{</span>
    <span class="c1">//필수메서드를 구현하라고 에러가 발생하고 에러를 선택하면 Cell 클래스에서 만들어 놓은 함수가 만들어진다. </span>
    <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">cell</span><span class="p">:</span> <span class="kt">MyToDoListCell</span><span class="p">,</span> <span class="nv">isOn</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
          <span class="o">&lt;</span><span class="k">#code</span><span class="err">#</span><span class="o">&gt;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="6-cell의-인덱스를-구하고-스위치-bool-값을-배열에-반영">6. Cell의 인덱스를 구하고 스위치 Bool 값을 배열에 반영</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 스위치 변경 이벤트 처리를 위한 Delegate 채택</span>
<span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">MyToDoListCellDelegate</span> <span class="p">{</span>
  <span class="c1">//필수메서드를 구현하라고 에러가 발생하고 에러를 선택하면 Cell 클래스에서 만들어 놓은 함수가 만들어진다. </span>
  <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">cell</span><span class="p">:</span> <span class="kt">MyToDoListCell</span><span class="p">,</span> <span class="nv">isOn</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//해당 셀의 인덱스 가져오기</span>
    <span class="k">guard</span> <span class="k">let</span> <span class="nv">indexPath</span> <span class="o">=</span> <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">indexPath</span><span class="p">(</span><span class="nv">for</span><span class="p">:</span> <span class="n">cell</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
      <span class="k">return</span>
    <span class="p">}</span>
    <span class="c1">// 스위치 값을 배열에 반영</span>
    <span class="c1">//ViewController에 선언한 myToDoListArray 배열에 변경된 스위치 값 설정  </span>
    <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoIsComplete</span> <span class="o">=</span> <span class="n">isOn</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="7-️️️-스위치-값-변경-이벤트-처리를-위한-delegate-설정">7. ⭐️⭐️⭐️ 스위치 값 변경 이벤트 처리를 위한 Delegate 설정</h2>
<ul>
  <li>cellForRowAt 함수 리턴 부분 위에 cell.delegate = self를 추가합니다.</li>
  <li>셀에서 발생한 이벤트를 뷰 컨트롤러에서 처리할 수 있도록 연결합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - TableView Row에서 보여줄 컨텐츠</span>
<span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">cellForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
    <span class="c1">//다른코드 생략 </span>
    <span class="n">cell</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>    <span class="c1">//스위치 값 변경 이벤트 처리를 위한 delegate 설정</span>
    <span class="k">return</span> <span class="n">cell</span>
<span class="p">}</span> 
</code></pre></div></div>

<h2 id="8-실행화면">8. 실행화면</h2>
<ul>
  <li>스위치 변경 시 배열의 값도 변경하여 데이터를 추가해도 스위치가 초기화되지 않습니다.</li>
</ul>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-UITableViewCellDelegate2.mov" type="video/mp4" />
</video>

<h1 id="스위치-토글-시-취소선strikethrough-추가">스위치 토글 시 취소선(strikeThrough) 추가</h1>
<h2 id="1-string-확장-메서드-구현">1. String 확장 메서드 구현</h2>
<ul>
  <li><a href="https://limlogging.github.io/UIKit/underlineAndStrikethrough/" target="_blank">참고: [UIKit] Label 밑줄(underline) 및 가운데줄/취소선(Strikethrough) 긋기</a></li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - String 확장(extension) 메서드에 취소선 구현</span>
<span class="kd">extension</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">strikeThrough</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">NSAttributedString</span> <span class="p">{</span>
        <span class="c1">// NSAttributedString.Key를 사용하여 서식과 속성을 적용할 수 있음(NSAttributedString.Key.strikethroughStyle을 .strikethroughStyle로 사용 가능)</span>
        <span class="k">let</span> <span class="nv">attributeString</span> <span class="o">=</span> <span class="kt">NSMutableAttributedString</span><span class="p">(</span><span class="nv">string</span><span class="p">:</span> <span class="k">self</span><span class="p">)</span>
        <span class="c1">// 전체 문자열에 취소선 스타일 속성을 추가</span>
        <span class="n">attributeString</span><span class="o">.</span><span class="nf">addAttribute</span><span class="p">(</span><span class="kt">NSAttributedString</span><span class="o">.</span><span class="kt">Key</span><span class="o">.</span><span class="n">strikethroughStyle</span><span class="p">,</span> <span class="nv">value</span><span class="p">:</span> <span class="kt">NSUnderlineStyle</span><span class="o">.</span><span class="n">single</span><span class="o">.</span><span class="n">rawValue</span><span class="p">,</span> <span class="nv">range</span><span class="p">:</span> <span class="kt">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">attributeString</span><span class="o">.</span><span class="n">length</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">attributeString</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="2-cellforrowat-메서드-수정">2. cellForRowAt 메서드 수정</h2>
<ul>
  <li>switch 값에 따른 취소선 적용 및 취소선 취소</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - TableView Row에서 보여줄 컨텐츠</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">cellForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
        <span class="c1">// 다른코드 생략 </span>

        <span class="c1">//title 취소선 - switch 값에 따라 취소선 또는 일반 Text</span>
        <span class="k">if</span> <span class="n">cell</span><span class="o">.</span><span class="n">myToDoIsCompleteSwitch</span><span class="o">.</span><span class="n">isOn</span> <span class="p">{</span>
            <span class="c1">// 해당 텍스트에 취소선을 적용한 NSAttributedString을 생성</span>
            <span class="k">let</span> <span class="nv">attributedText</span> <span class="o">=</span> <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoTitle</span><span class="o">.</span><span class="nf">strikeThrough</span><span class="p">()</span>
            <span class="c1">// 취소선이 적용된 NSAttributedString을 텍스트로 설정</span>
            <span class="n">cell</span><span class="o">.</span><span class="n">myToDoTitleLabel</span><span class="o">.</span><span class="n">attributedText</span> <span class="o">=</span> <span class="n">attributedText</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="c1">//일반 Text - 취소선 없애기</span>
            <span class="n">cell</span><span class="o">.</span><span class="n">myToDoTitleLabel</span><span class="o">.</span><span class="n">attributedText</span> <span class="o">=</span> <span class="kt">NSAttributedString</span><span class="p">(</span><span class="nv">string</span><span class="p">:</span> <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoTitle</span><span class="p">)</span>
        <span class="p">}</span>

        <span class="n">cell</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>    <span class="c1">//스위치 값 변경 이벤트 처리를 위한 delegate 설정</span>
        <span class="k">return</span> <span class="n">cell</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="3-cell-새로고침-추가">3. Cell 새로고침 추가</h2>
<ul>
  <li>스위치 변경 후 label에 취소선을 적용시키도록 새로고침 추가</li>
  <li>myTodoListTableView.reloadRows(at: [indexPath], with: .automatic)</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 스위치 변경 이벤트 처리를 위한 Delegate 채택</span>
<span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">MyToDoListCellDelegate</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">switchValueChanged</span><span class="p">(</span><span class="n">_</span> <span class="nv">cell</span><span class="p">:</span> <span class="kt">MyToDoListCell</span><span class="p">,</span> <span class="nv">isOn</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">//해당 셀의 인덱스 가져여오기</span>
        <span class="k">guard</span> <span class="k">let</span> <span class="nv">indexPath</span> <span class="o">=</span> <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">indexPath</span><span class="p">(</span><span class="nv">for</span><span class="p">:</span> <span class="n">cell</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span>
        <span class="p">}</span>        
        <span class="c1">// 스위치 값을 배열에 반영</span>
        <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoIsComplete</span> <span class="o">=</span> <span class="n">isOn</span>
        <span class="c1">// 스위치가 변경될 때마다 테이블 뷰의 해당 셀만 다시 로드, 취소선 때문에</span>
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">reloadRows</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="p">[</span><span class="n">indexPath</span><span class="p">],</span> <span class="nv">with</span><span class="p">:</span> <span class="o">.</span><span class="n">automatic</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="4-실행화면">4. 실행화면</h2>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-UITableViewCellDelegate3.mov" type="video/mp4" />
</video>

<h1 id="마무리">마무리</h1>
<ul>
  <li>데이터를 주는 곳에서 델리게이트를 만들고 데이터를 받는 곳에서 델리게이터를 채택하고 사용
    <ol>
      <li>Cell클래스의 @IBAction func switchValueChanged(_ sender: UISwitch) 함수 먼저 실행</li>
      <li>View클래스에서 델리게이트 채택 후 switchValueChanged 함수에서 스위치 변경 이벤트 처리</li>
    </ol>
  </li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="Tableview Cell Delegate" /><summary type="html"><![CDATA[Cell Class와 View Class와 상호작용]]></summary></entry><entry><title type="html">[UIKit] NavigationBar에 Edit 버튼 추가하기</title><link href="http://localhost:4000/UIKit/NavigationBarEditButton/" rel="alternate" type="text/html" title="[UIKit] NavigationBar에 Edit 버튼 추가하기" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/NavigationBarEditButton</id><content type="html" xml:base="http://localhost:4000/UIKit/NavigationBarEditButton/"><![CDATA[<h1 id="navigation-bar에-edit-버튼-추가하기">Navigation Bar에 Edit 버튼 추가하기</h1>
<ul>
  <li>navigation과 연결된 상태에서 viewDidLoad에 코드를 추가합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="k">self</span>
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>
        
        <span class="c1">//상단 Navigation bar 왼쪽에 Edit 버튼 추가</span>
        <span class="k">self</span><span class="o">.</span><span class="n">navigationItem</span><span class="o">.</span><span class="n">leftBarButtonItem</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">editButtonItem</span> 
    <span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="실행-화면">실행 화면</h1>
<ul>
  <li>네비게이션 바 왼쪽에 edit 버튼이 생기고 edit 버튼을 누르면 done으로 바뀝니다.</li>
  <li>edit 버튼을 선택 시 아무런 변화가 없습니다.</li>
</ul>

<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-NavigationBarEditButton1.mov" type="video/mp4" />
</video>

<p><br /></p>

<h1 id="delegate-상속-후-setediting-메서드를-추가">Delegate 상속 후 setEditing 메서드를 추가</h1>
<ul>
  <li>UITableViewDelegate를 채택하고 setEditing 메서드를 추가합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">override</span> <span class="kd">func</span> <span class="nf">setEditing</span><span class="p">(</span><span class="n">_</span> <span class="nv">editing</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">//부모클래스 편집 모드 설정에 관련된 작업을 수행, 없으면 Done 버튼 사라짐 </span>
        <span class="k">super</span><span class="o">.</span><span class="nf">setEditing</span><span class="p">(</span><span class="n">editing</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="n">animated</span><span class="p">)</span> 
        
        <span class="c1">//사용자가 편집 모드로 전환할 때 테이블 뷰의 셀을 편집할 수 있도록 허용하거나 허용하지 않도록 설정</span>
        <span class="c1">//myTodoListTableView를 편집모드로 변경할 수 있도록 설정 </span>
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">setEditing</span><span class="p">(</span><span class="n">editing</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span> 
    <span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>관련 이벤트가 없으면 ⛔️ 버튼을 클릭하면 아무런 변화가 없습니다.</li>
  <li><a href="https://limlogging.github.io/UIKit/TableViewSwipeDelete/" target="_blank">삭제기능 바로가기</a></li>
</ul>

<p><br /></p>

<h1 id="실행-화면-1">실행 화면</h1>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-NavigationBarEditButton2.mov" type="video/mp4" />
</video>

<p><br /></p>

<h1 id="코드가-아닌-스토리보드에-bar-button-item-추가하여-구현하기">코드가 아닌 스토리보드에 bar Button Item 추가하여 구현하기</h1>
<h2 id="1-bar-button-item-추가">1. bar Button Item 추가</h2>
<ul>
  <li>라이브러리에서 bar button item을 추가하고 System Item을 Edit으로 변경합니다.</li>
</ul>

<p><img src="../../assets/images/categories/uikit/2024-03-26-NavigationBarEditButton1.png" alt="" /></p>

<h2 id="2-액션버튼-생성">2. 액션버튼 생성</h2>
<ul>
  <li>편집모드가 아닐땐 Edit 버튼이 보여야하고 편집모드일때는 Done 버튼이 보여야합니다.</li>
  <li>새로운 버튼 설정을 하지 않으면 button title이 edit로만 보입니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - edit 창 선택</span>
<span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">editButtonTapped</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UIBarButtonItem</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//편집 모드와 버튼의 Text는 서로 반대 </span>
    <span class="k">if</span> <span class="n">myTodoListTableView</span><span class="o">.</span><span class="n">isEditing</span> <span class="p">{</span>
        <span class="c1">// 편집 모드 해제</span>
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">setEditing</span><span class="p">(</span><span class="kc">false</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
        <span class="c1">// 새로운 UIBarButtonItem 생성하여 Edit 버튼으로 설정</span>
        <span class="k">let</span> <span class="nv">editButton</span> <span class="o">=</span> <span class="kt">UIBarButtonItem</span><span class="p">(</span><span class="nv">barButtonSystemItem</span><span class="p">:</span> <span class="o">.</span><span class="n">edit</span><span class="p">,</span> <span class="nv">target</span><span class="p">:</span> <span class="k">self</span><span class="p">,</span> <span class="nv">action</span><span class="p">:</span> <span class="k">#selector</span><span class="p">(</span><span class="nf">editButtonTapped</span><span class="p">(</span><span class="nv">_</span><span class="p">:)))</span>
        <span class="n">navigationItem</span><span class="o">.</span><span class="n">leftBarButtonItem</span> <span class="o">=</span> <span class="n">editButton</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="c1">// 편집 모드 활성화</span>
        <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">setEditing</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
        
        <span class="c1">// 새로운 UIBarButtonItem 생성하여 Done 버튼으로 설정</span>
        <span class="k">let</span> <span class="nv">doneButton</span> <span class="o">=</span> <span class="kt">UIBarButtonItem</span><span class="p">(</span><span class="nv">barButtonSystemItem</span><span class="p">:</span> <span class="o">.</span><span class="n">done</span><span class="p">,</span> <span class="nv">target</span><span class="p">:</span> <span class="k">self</span><span class="p">,</span> <span class="nv">action</span><span class="p">:</span> <span class="k">#selector</span><span class="p">(</span><span class="nf">editButtonTapped</span><span class="p">(</span><span class="nv">_</span><span class="p">:)))</span>
        <span class="n">navigationItem</span><span class="o">.</span><span class="n">leftBarButtonItem</span> <span class="o">=</span> <span class="n">doneButton</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>Navigation Bar에 버튼을 추가하고 TableView Delegate를 채택하여 TableView 편집모드 구현가능</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="Navigation" /><category term="Bar" /><category term="Edit" /><category term="Button" /><summary type="html"><![CDATA[NavigationBar에 Edit 버튼 추가하고 TableView row삭제하기]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 21일차</title><link href="http://localhost:4000/TIL/til21/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 21일차" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til21</id><content type="html" xml:base="http://localhost:4000/TIL/til21/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<p><img src="/assets/images/categories/til/2024-03-26-til21.png" alt="" /></p>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>고차함수를 많이 연습해보고 알고리즘 문제 풀어야하는데 따로 공부없이 아침에 문제를 풀다보니 많이 부족한 것 같다. 꼭 시간내서 클로저, 고차함수 다시.. 공부해봐야겠다</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EB%AA%85%EC%98%88%EC%9D%98%EC%A0%84%EB%8B%B9/" target="_blank">명예의전당</a></li>
    </ul>
  </li>
</ul>

<h3 id="개인-과제-공부">개인 과제 공부</h3>
<ul>
  <li>오늘은 속도를 내서 level3 삭제까지 완료하고 순서바꾸기를 추가했다.</li>
  <li>검색 하는 도중에 자동완성이 안되는 메서드가 있었는데 TableViewController를 상속받아 파일을 생성하면 기본적으로 주석처리된 메서드가 있다는걸 알았다.</li>
  <li>Delegate에서 제공하는 함수를 많이 알면 다양하게 적용을 시도해 볼 수 있을 것 같다!
    <ul>
      <li><a href="https://limlogging.github.io/UIKit/UITableViewCellDelegate/" target="_blank">Tableview Cell에서 Delegate 사용</a></li>
      <li><a href="https://limlogging.github.io/UIKit/TableViewSwipeDelete/" target="_blank">Tableview에서 Swipe로 Row 삭제하기</a></li>
      <li><a href="https://limlogging.github.io/UIKit/NavigationBarEditButton/" target="_blank">NavigationBar에 Edit 버튼 추가하기</a></li>
      <li><a href="https://limlogging.github.io/uikit/%EB%AA%A9%EB%A1%9D%EC%88%9C%EC%84%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/" target="_blank">TableView 목록 순서 바꾸기</a></li>
    </ul>
  </li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>다른 분들이 UI를 스위치에서 체크박스로 바꾸고 폰트도 변경하고 조금 꾸며도 꾸민 티가 확 나는 것 같다. 내일은 꾸미기에도 조금 도전해보는걸로…</li>
  <li>알고리즘 문제 풀기 (문제 풀고 고차함수 연습 꼭 10분이라도..)</li>
  <li>과제 풀기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 21일차 이야기]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 명예의 전당</title><link href="http://localhost:4000/algorithm/%EB%AA%85%EC%98%88%EC%9D%98%EC%A0%84%EB%8B%B9/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 명예의 전당" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EB%AA%85%EC%98%88%EC%9D%98%EC%A0%84%EB%8B%B9</id><content type="html" xml:base="http://localhost:4000/algorithm/%EB%AA%85%EC%98%88%EC%9D%98%EC%A0%84%EB%8B%B9/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>“명예의 전당”이라는 TV 프로그램에서는 매일 1명의 가수가 노래를 부르고, 시청자들의 문자 투표수로 가수에게 점수를 부여합니다. 매일 출연한 가수의 점수가 지금까지 출연 가수들의 점수 중 상위 k번째 이내이면 해당 가수의 점수를 명예의 전당이라는 목록에 올려 기념합니다. 즉 프로그램 시작 이후 초기에 k일까지는 모든 출연 가수의 점수가 명예의 전당에 오르게 됩니다. k일 다음부터는 출연 가수의 점수가 기존의 명예의 전당 목록의 k번째 순위의 가수 점수보다 더 높으면, 출연 가수의 점수가 명예의 전당에 오르게 되고 기존의 k번째 순위의 점수는 명예의 전당에서 내려오게 됩니다.</li>
  <li>이 프로그램에서는 매일 “명예의 전당”의 최하위 점수를 발표합니다. 예를 들어, k = 3이고, 7일 동안 진행된 가수의 점수가 [10, 100, 20, 150, 1, 100, 200]이라면, 명예의 전당에서 발표된 점수는 아래의 그림과 같이 [10, 10, 10, 20, 20, 100, 100]입니다.</li>
</ul>

<table>
    <tr>
        <td>일차</td>
        <td>1</td>
        <td>2</td>
        <td>3</td>
        <td>4</td>
        <td>5</td>
        <td>6</td>
        <td>7</td>
    </tr>
    <tr>
        <td>score</td>
        <td>10</td>
        <td>100</td>
        <td>20</td>
        <td>150</td>
        <td>1</td>
        <td>100</td>
        <td>200</td>
    </tr>
    <tr>
        <td>명예의 전당<br />(k = 3)</td>
        <td>10</td>
        <td>100<br />10</td>
        <td>100<br />20<br />10</td>
        <td>150<br />100<br />20</td>
        <td>150<br />100<br />20</td>
        <td>150<br />100<br />100</td>
        <td>200<br />150<br />100</td>
    </tr>
    <tr>
        <td>발표 점수</td>
        <td>10</td>
        <td>10</td>
        <td>10</td>
        <td>20</td>
        <td>20</td>
        <td>100</td>
        <td>100</td>
    </tr>
</table>

<ul>
  <li>
    <p>명예의 전당 목록의 점수의 개수 k, 1일부터 마지막 날까지 출연한 가수들의 점수인 score가 주어졌을 때, 매일 발표된 명예의 전당의 최하위 점수를 return하는 solution 함수를 완성해주세요.</p>
  </li>
  <li>
    <p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/138477" target="_blank">문제 풀기</a></p>
  </li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>3 ≤ k ≤ 100</li>
  <li>7 ≤ score의 길이 ≤ 1,000
    <ul>
      <li>0 ≤ score[i] ≤ 2,000</li>
    </ul>
  </li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>k</th>
      <th>score</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>3</td>
      <td>[10, 100, 20, 150, 1, 100, 200]</td>
      <td>[10, 10, 10, 20, 20, 100, 100]</td>
    </tr>
    <tr>
      <td>4</td>
      <td>[0, 300, 40, 300, 20, 70, 150, 50, 500, 1000]</td>
      <td>[0, 0, 0, 0, 20, 40, 70, 70, 150, 300]</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>문제의 예시와 같습니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>아래와 같이, [0, 0, 0, 0, 20, 40, 70, 70, 150, 300]을 return합니다.</li>
</ul>
<table>
    <tr>
        <td>일차</td>
        <td>1</td>
        <td>2</td>
        <td>3</td>
        <td>4</td>
        <td>5</td>
        <td>6</td>
        <td>7</td>
        <td>8</td>
        <td>9</td>
        <td>10</td>
    </tr>
    <tr>
        <td>score</td>
        <td>0</td>
        <td>300</td>
        <td>40</td>
        <td>300</td>
        <td>20</td>
        <td>70</td>
        <td>150</td>
        <td>50</td>
        <td>500</td>
        <td>1000</td>
    </tr>
    <tr>
        <td>명예의 전당<br />(k = 4)</td>
        <td>0</td>
        <td>300<br />0</td>
        <td>300<br />40<br />0</td>
        <td>300<br />300<br />40<br />0</td>
        <td>300<br />300<br />40<br />20</td>
        <td>300<br />300<br />70<br />40</td>
        <td>300<br />300<br />150<br />70</td>
        <td>300<br />300<br />150<br />70</td>
        <td>500<br />300<br />300<br />150</td>
        <td>1000<br />500<br />300<br />300</td>
    </tr>
    <tr>
        <td>발표 점수</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
        <td>0</td>
        <td>20</td>
        <td>40</td>
        <td>70</td>
        <td>70</td>
        <td>150</td>
        <td>300</td>
    </tr>
</table>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">k</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">score</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>     <span class="c1">//k수만큼 저장</span>
    <span class="k">var</span> <span class="nv">result</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>  <span class="c1">//결과 값</span>
    
    <span class="k">if</span> <span class="p">(</span><span class="n">k</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="o">||</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">score</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">score</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">1000</span><span class="p">)</span> <span class="p">{</span> 
        <span class="c1">//k개수까지는 무조건 추가</span>
        <span class="c1">//k개수인 경우 현재 값이 최소값보다 크거나 같으면 최소값을 삭제하고 추가</span>
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">score</span> <span class="p">{</span>
            <span class="k">if</span> <span class="n">arr</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;</span> <span class="n">k</span> <span class="p">{</span>
                <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
                <span class="n">arr</span><span class="o">.</span><span class="nf">sort</span><span class="p">()</span>
                <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="k">if</span> <span class="k">let</span> <span class="nv">min</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="nf">min</span><span class="p">(),</span>
                    <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">min</span> <span class="p">{</span>
                    <span class="n">arr</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
                    <span class="n">arr</span><span class="o">.</span><span class="nf">sort</span><span class="p">()</span>
                    <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">result</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">k</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">score</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="p">{</span>
    <span class="nf">return</span> <span class="p">(</span><span class="mi">0</span><span class="o">...</span><span class="n">score</span><span class="o">.</span><span class="n">count</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span>
        <span class="k">let</span> <span class="nv">end</span> <span class="o">=</span> <span class="nv">$0</span> <span class="o">&lt;</span> <span class="n">k</span><span class="o">-</span><span class="mi">1</span> <span class="p">?</span> <span class="nv">$0</span> <span class="p">:</span> <span class="n">k</span><span class="o">-</span><span class="mi">1</span>
        <span class="k">return</span> <span class="kt">Array</span><span class="p">(</span><span class="n">score</span><span class="p">[</span><span class="mi">0</span><span class="o">...</span><span class="nv">$0</span><span class="p">]</span><span class="o">.</span><span class="nf">sorted</span><span class="p">(</span><span class="nv">by</span><span class="p">:</span> <span class="o">&gt;</span><span class="p">)[</span><span class="mi">0</span><span class="o">...</span><span class="n">end</span><span class="p">])</span><span class="o">.</span><span class="n">last</span><span class="o">!</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="의견">의견</h1>
<ul>
  <li>런타임 에러가 발생해서 제한사항을 추가했다. 보통 없어도 통과인데 간혹 제한사항 추가해야하는 문제가 있다.</li>
  <li>대부분 비슷한 풀이인데 짧게 푼 코드를 찾았다. 다른 사람 코드로 또 배우는 중..</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="명예의 전당" /><summary type="html"><![CDATA[[프로그래머스/Swift] 명예의 전당]]></summary></entry><entry><title type="html">[UIKit] TableView 목록 순서 바꾸기</title><link href="http://localhost:4000/uikit/%EB%AA%A9%EB%A1%9D%EC%88%9C%EC%84%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/" rel="alternate" type="text/html" title="[UIKit] TableView 목록 순서 바꾸기" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/uikit/%EB%AA%A9%EB%A1%9D%EC%88%9C%EC%84%9C%EB%B0%94%EA%BE%B8%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/uikit/%EB%AA%A9%EB%A1%9D%EC%88%9C%EC%84%9C%EB%B0%94%EA%BE%B8%EA%B8%B0/"><![CDATA[<h1 id="table-view에-목록-순서-바꾸기">Table View에 목록 순서 바꾸기</h1>
<ul>
  <li>navigation bar에서 Edit 버튼을 선택하고 오른쪽에 줄을 선택하고 드래그하면 순서를 변경할 수 있습니다.</li>
</ul>

<p><br /></p>

<h1 id="tableview-dalegate-채택-후-moverowat-메서드-구현">TableView Dalegate 채택 후 moveRowAt 메서드 구현</h1>
<ul>
  <li>moveRowAt 메서드에서 source / destination Index를 확인 할 수 있습니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 목록 순서 변경</span>
<span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">moveRowAt</span> <span class="nv">sourceIndexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">,</span> <span class="n">to</span> <span class="nv">destinationIndexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//현재 row(출발지)의 cell 데이터 저장</span>
    <span class="k">let</span> <span class="nv">sourceId</span> <span class="o">=</span> <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">sourceIndexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoid</span>
    <span class="k">let</span> <span class="nv">sourceTitle</span> <span class="o">=</span> <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">sourceIndexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoTitle</span>
    <span class="k">let</span> <span class="nv">sourceIsComplete</span> <span class="o">=</span> <span class="n">myToDoListArray</span><span class="p">[</span><span class="n">sourceIndexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">toDoIsComplete</span>
    
    <span class="c1">//선택한 row 배열에서 삭제</span>
    <span class="n">myToDoListArray</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">sourceIndexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
    
    <span class="c1">//이동한 위치에 출발지 cell 데이터를 배열의 목적지 index 위치에 추가</span>
    <span class="n">myToDoListArray</span><span class="o">.</span><span class="nf">insert</span><span class="p">(</span><span class="kt">ToDoList</span><span class="p">(</span><span class="nv">toDoid</span><span class="p">:</span> <span class="n">sourceId</span><span class="p">,</span> <span class="nv">toDoTitle</span><span class="p">:</span> <span class="n">sourceTitle</span><span class="p">,</span> <span class="nv">toDoIsComplete</span><span class="p">:</span> <span class="n">sourceIsComplete</span><span class="p">),</span> <span class="nv">at</span><span class="p">:</span> <span class="n">destinationIndexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
    
    <span class="c1">//print("목록 변경 후: \(myToDoListArray)")</span>
    <span class="n">myTodoListTableView</span><span class="o">.</span><span class="nf">reloadData</span><span class="p">()</span>    <span class="c1">//변경사항 확인을 위해 새로고침</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="실행-화면">실행 화면</h1>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-목록순서바꾸기.mov" type="video/mp4" />
</video>

<p><br /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>TableView Dalegate 채택 후 moveRowAt 메서드를 통해 순서이동을 구현할 수 있다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="TableView" /><category term="moveRowAt" /><summary type="html"><![CDATA[TableView 목록 순서 바꾸기]]></summary></entry><entry><title type="html">[UIKit] Tableview에서 Swipe로 Row 삭제하기</title><link href="http://localhost:4000/UIKit/TableViewSwipeDelete/" rel="alternate" type="text/html" title="[UIKit] Tableview에서 Swipe로 Row 삭제하기" /><published>2024-03-26T00:00:00+09:00</published><updated>2024-03-26T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/TableViewSwipeDelete</id><content type="html" xml:base="http://localhost:4000/UIKit/TableViewSwipeDelete/"><![CDATA[<h1 id="tableview에서-swipe로-row-삭제하기">Tableview에서 Swipe로 Row 삭제하기</h1>
<ul>
  <li>TableView에서 Row을 움직여 삭제할 수 있습니다.</li>
</ul>

<p><br /></p>

<h1 id="예제-코드">예제 코드</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - TableView 스와이프(swipe) 삭제</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">commit</span> <span class="nv">editingStyle</span><span class="p">:</span> <span class="kt">UITableViewCell</span><span class="o">.</span><span class="kt">EditingStyle</span><span class="p">,</span> <span class="n">forRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// 편집 스타일이 삭제인 경우 </span>
        <span class="k">if</span> <span class="n">editingStyle</span> <span class="o">==</span> <span class="o">.</span><span class="n">delete</span> <span class="p">{</span>
            <span class="c1">//해당 indexPath에 위치한 데이터를 배열에서 제거</span>
            <span class="n">myToDoListArray</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
            <span class="c1">// 테이블 뷰에서 해당 행을 애니메이션과 함께 삭제</span>
            <span class="n">tableView</span><span class="o">.</span><span class="nf">deleteRows</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="p">[</span><span class="n">indexPath</span><span class="p">],</span> <span class="nv">with</span><span class="p">:</span> <span class="o">.</span><span class="n">fade</span><span class="p">)</span>
        <span class="p">}</span> 
    <span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="실행화면">실행화면</h1>
<video width="640" height="360" controls="">
    <source src="../../assets/video/2024-03-26-TableViewSwipeDelete.mov" type="video/mp4" />
</video>

<p><br /></p>

<h1 id="버튼-이름-변경">버튼 이름 변경</h1>
<ul>
  <li>버튼 이름 변경 (Delete -&gt; 삭제)</li>
  <li>UITableViewDelegate 채택해야 사용 가능</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - 삭제 글자 변경 Delete -&gt; 삭제</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">titleForDeleteConfirmationButtonForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">String</span><span class="p">?</span> <span class="p">{</span>
        <span class="k">return</span> <span class="s">"삭제"</span>
    <span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>버튼 이름 변경 확인</li>
</ul>

<p><img src="../../assets/images/categories/uikit/2024-03-26-TableViewSwipeDelete1.png" alt="alt text" /></p>

<p><br /></p>

<h1 id="삭제-전-alert-버튼으로-다시-확인하기">삭제 전 alert 버튼으로 다시 확인하기</h1>
<ul>
  <li>alert 추가 코드</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - TableView 스와이프(swipe) 삭제</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">commit</span> <span class="nv">editingStyle</span><span class="p">:</span> <span class="kt">UITableViewCell</span><span class="o">.</span><span class="kt">EditingStyle</span><span class="p">,</span> <span class="n">forRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">editingStyle</span> <span class="o">==</span> <span class="o">.</span><span class="n">delete</span> <span class="p">{</span>
            <span class="k">let</span> <span class="nv">alertController</span> <span class="o">=</span> <span class="kt">UIAlertController</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"삭제 확인"</span><span class="p">,</span> <span class="nv">message</span><span class="p">:</span> <span class="s">"삭제하시겠습니까?"</span><span class="p">,</span> <span class="nv">preferredStyle</span><span class="p">:</span> <span class="o">.</span><span class="n">alert</span><span class="p">)</span>
            <span class="k">let</span> <span class="nv">cancelButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"취소"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">cancel</span><span class="p">)</span>
            <span class="k">let</span> <span class="nv">deleteButton</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"삭제"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
                <span class="c1">//해당 indexPath에 위치한 데이터를 배열에서 제거</span>
                <span class="k">self</span><span class="o">.</span><span class="n">myToDoListArray</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
                <span class="c1">// 테이블 뷰에서 해당 행을 애니메이션과 함께 삭제</span>
                <span class="n">tableView</span><span class="o">.</span><span class="nf">deleteRows</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="p">[</span><span class="n">indexPath</span><span class="p">],</span> <span class="nv">with</span><span class="p">:</span> <span class="o">.</span><span class="n">fade</span><span class="p">)</span>
            <span class="p">}</span>
            <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">cancelButton</span><span class="p">)</span>
            <span class="n">alertController</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">deleteButton</span><span class="p">)</span>
            <span class="nf">present</span><span class="p">(</span><span class="n">alertController</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nv">completion</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>
        <span class="p">}</span> 
    <span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>alert 창 확인</li>
</ul>

<p><img src="../../assets/images/categories/uikit/2024-03-26-TableViewSwipeDelete2.png" alt="alt text" /></p>

<p><br /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>TableView의 편집 버튼을 눌러 삭제를 시도할 수 있지만 Swipe로 삭제 가능</li>
  <li>삭제를 되물어보는 기능이 없어 따로 만들어야함</li>
  <li>해당 메서드가 XCode에서 자동검색이 되지 않는 것 같다.
    <ul>
      <li>⭐️⭐️⭐️더 찾아보니 내 클래스 파일은 UIViewController를 상속받는 클래스인데 <font color="red">UITableViewController</font>를 상속받는 클래스 파일을 만들면 주석처리된 메서드가 그냥 보인다!!!!!⭐️⭐️⭐️
        <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="cm">/*
  // Override to support editing the table view.
  override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
  if editingStyle == .delete {
      // Delete the row from the data source
      tableView.deleteRows(at: [indexPath], with: .fade)
  } else if editingStyle == .insert {
      // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
  }    
  }
  */</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="TableView Swipe Delete" /><summary type="html"><![CDATA[Tableview에서 Swipe로 Row 삭제하기]]></summary></entry><entry><title type="html">[UIKit] UITableView - 데이터 목록 표시</title><link href="http://localhost:4000/UIKit/UITableView/" rel="alternate" type="text/html" title="[UIKit] UITableView - 데이터 목록 표시" /><published>2024-03-25T00:00:00+09:00</published><updated>2024-03-25T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/UITableView</id><content type="html" xml:base="http://localhost:4000/UIKit/UITableView/"><![CDATA[<h1 id="uitableview">UITableView</h1>
<ul>
  <li>세로로만 스크롤 가능한 뷰</li>
  <li>iOS 애플리케이션에서 테이블 형식의 데이터를 표시하고 관리하는 데 사용되는 중요한 뷰 컴포넌트입니다.</li>
  <li>테이블 뷰는 여러 행으로 구성되며, 각 행에는 하나 이상의 셀이 포함됩니다.</li>
  <li>각 셀은 사용자 인터페이스에 정보를 표시하거나 사용자 상호 작용을 위한 컨트롤을 제공합니다.</li>
</ul>

<h2 id="특징">특징</h2>
<ul>
  <li>다양한 셀 유형
    <ul>
      <li>UITableView는 특정 유형의 데이터를 표시하기 위해 다양한 스타일과 레이아웃의 셀을 지원합니다. 텍스트, 이미지, 버튼 등 다양한 컨텐츠를 포함할 수 있습니다.</li>
    </ul>
  </li>
  <li>스크롤 기능
    <ul>
      <li>테이블 뷰는 데이터가 많거나 너무 긴 경우에도 스크롤하여 모든 데이터에 접근할 수 있도록 합니다.</li>
    </ul>
  </li>
  <li>섹션 및 인덱스
    <ul>
      <li>UITableView는 섹션을 사용하여 데이터를 구성하고 섹션 인덱스를 제공하여 사용자가 특정 부분으로 빠르게 이동할 수 있도록 합니다.</li>
    </ul>
  </li>
  <li>셀 재사용
    <ul>
      <li>UITableView는 셀을 효율적으로 관리하기 위해 셀 재사용 메커니즘을 사용합니다. 이는 메모리 사용량을 최적화하고 성능을 향상시킵니다.</li>
    </ul>
  </li>
  <li>델리게이트 및 데이터 소스
    <ul>
      <li>UITableView는 UITableViewDelegate 및 UITableViewDataSource 프로토콜을 사용하여 사용자 상호 작용 및 데이터 관리를 처리합니다. 데이터 소스는 UITableView에 표시할 데이터를 제공하고, 델리게이트는 사용자 상호 작용 및 테이블 뷰의 동작을 제어합니다.</li>
    </ul>
  </li>
</ul>

<h2 id="사용">사용</h2>
<ul>
  <li>iOS 애플리케이션에서 매우 일반적으로 사용됩니다.</li>
  <li>메시지 리스트, 설정 화면, 사용자 목록 등</li>
</ul>

<h1 id="uitableview-설정-예제-코드">UITableView 설정 예제 코드</h1>

<h2 id="1-스토리보드에-table-view-추가">1. 스토리보드에 Table View 추가</h2>
<p><img src="/assets/images/categories/uikit/2024-03-25-tableviewMain.png" alt="" /></p>

<h2 id="2-tableview-아울렛-변수-추가">2. TableView 아울렛 변수 추가</h2>
<ul>
  <li>스토리보드에 추가한 객체에 접근 할 수 있는 아울렛 변수 추가</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>    
    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">toDoListTableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="o">!</span>
 
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="3-tableview-datasource-추가-및-필수-메서드-구현">3. TableView DataSource 추가 및 필수 메서드 구현</h2>
<ul>
  <li>ViewController 클래스에 UITableViewDataSource 프로토콜을 확장(extension)하여 UITableViewDataSource 프로토콜의 메서드를 구현</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UITableViewDataSource</span> <span class="p">{</span>
    <span class="c1">//특정 섹션(section)에 표시할 행(row)의 수를 반환</span>
    <span class="kd">public</span> <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">numberOfRowsInSection</span> <span class="nv">section</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
        <span class="k">return</span> <span class="mi">10</span>   <span class="c1">//10개의 행을 반환하여 표시 </span>
    <span class="p">}</span>
    
    <span class="c1">//메서드는 특정 indexPath에 해당하는 행의 셀을 반환</span>
    <span class="kd">public</span> <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">cellForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
        <span class="c1">//행에 표시할 셀을 생성하고 반환 </span>
        <span class="k">return</span> <span class="kt">UITableViewCell</span><span class="p">()</span> 
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>섹션은 여러개의 row로 구성된 그룹 (아래 빨간 묶음)
<img src="/assets/images/categories/uikit/2024-03-25-tableviewSection.png" alt="" /></li>
</ul>

<h2 id="4-datasource-설정-델리게이트-설정과-동일">4. DataSource 설정 (델리게이트 설정과 동일)</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>    
    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">toDoListTableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="o">!</span>
 
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="n">toDoListTableView</span><span class="o">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="k">self</span> <span class="c1">//UITableView의 dataSource를 현재(self)의 ViewController로 설정</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="5-실행">5. 실행</h2>
<ul>
  <li>row 10개가 생겼는데 데이터가 없습니다.<br />
<img src="../../assets/images/categories/uikit/2024-03-25-TableViewExecute.png" alt="" /></li>
</ul>

<h2 id="6-row에-data를-입력하기위해-cell-추가">6. row에 Data를 입력하기위해 Cell 추가</h2>
<ul>
  <li>라이브러리에서 table view cell을 추가합니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-TableViewCell.png" alt="" /></li>
</ul>

<h2 id="7-cell-식별자identifier-이름-지정">7. Cell 식별자(Identifier) 이름 지정</h2>
<ul>
  <li>
    <p>셀을 선택하고 인스펙터(Inspector) 화면에서 식별자 이름을 지정합니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-TableViewCellIdentifier1.png" alt="" /></p>
  </li>
  <li>
    <p>식별자 이름을 변경하면 다큐먼트 아웃라인(Document Outline) 화면에서도 변경된 것을 확인할 수 있습니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-TableViewCellIdentifier2.png" alt="" /></p>
  </li>
</ul>

<h2 id="8-cell에-연결시킬-class-파일-생성">8. Cell에 연결시킬 Class 파일 생성</h2>
<ul>
  <li>UITableViewCell를 상속 받는 ToDoCell 클래스를 생성합니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-createCellClass.png" alt="" /></li>
</ul>

<h2 id="9-cell에-class-연결">9. Cell에 Class 연결</h2>
<ul>
  <li>스토리보드에서 Cell을 선택하고 인스펙터 화면에서 클래스를 연결합니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-CellClassConnection.png" alt="" /></li>
</ul>

<h2 id="10-cell에-object-추가-및-아울렛-변수-추가">10. Cell에 object 추가 및 아울렛 변수 추가</h2>
<ul>
  <li>label 2개 스위치 1개를 추가했습니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-AddObejctInCell.png" alt="" /></li>
  <li>만들어진 객체의 아울렛 변수 추가했습니다.
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ToDoCell</span><span class="p">:</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
  <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">idLebel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>        <span class="c1">//id</span>
  <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">titleLabel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>     <span class="c1">//title</span>
  <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">isCompleteSwitch</span><span class="p">:</span> <span class="kt">UISwitch</span><span class="o">!</span>      <span class="c1">//스위치 </span>
    
  <span class="k">override</span> <span class="kd">func</span> <span class="nf">awakeFromNib</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">super</span><span class="o">.</span><span class="nf">awakeFromNib</span><span class="p">()</span>
      <span class="c1">// Initialization code</span>
  <span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="11-cell에-보여줄-배열-생성-및-초기화">11. Cell에 보여줄 배열 생성 및 초기화</h2>
<ul>
  <li>구조체 생성 및 배열 초기화
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">struct</span> <span class="kt">ToDo</span> <span class="p">{</span>
      <span class="k">var</span> <span class="nv">id</span><span class="p">:</span> <span class="kt">Int</span>
      <span class="k">var</span> <span class="nv">title</span><span class="p">:</span> <span class="kt">String</span>
      <span class="k">var</span> <span class="nv">isComplete</span><span class="p">:</span> <span class="kt">Bool</span>
  <span class="p">}</span>
  <span class="k">var</span> <span class="nv">toDoListArr</span><span class="p">:</span> <span class="p">[</span><span class="kt">ToDo</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span>
      <span class="kt">ToDo</span><span class="p">(</span><span class="nv">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">title</span><span class="p">:</span> <span class="s">"테스트1111"</span><span class="p">,</span> <span class="nv">isComplete</span><span class="p">:</span> <span class="kc">true</span><span class="p">),</span>
      <span class="kt">ToDo</span><span class="p">(</span><span class="nv">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nv">title</span><span class="p">:</span> <span class="s">"테스트2222"</span><span class="p">,</span> <span class="nv">isComplete</span><span class="p">:</span> <span class="kc">false</span><span class="p">),</span>
      <span class="kt">ToDo</span><span class="p">(</span><span class="nv">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nv">title</span><span class="p">:</span> <span class="s">"테스트3333"</span><span class="p">,</span> <span class="nv">isComplete</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
  <span class="p">]</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="12-uitableviewdatasource-필수-메서드-수정">12. UITableViewDataSource 필수 메서드 수정</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UITableViewDataSource</span> <span class="p">{</span>
    <span class="c1">//특정 섹션에 표시할 행의 수</span>
    <span class="kd">public</span> <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">numberOfRowsInSection</span> <span class="nv">section</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">toDoListArr</span><span class="o">.</span><span class="n">count</span> <span class="c1">//테이블 뷰에 표시할 셀의 개수를 배열의 수로 변경</span>
    <span class="p">}</span>
    
    <span class="c1">//특정 indexPath에 해당하는 행의 셀을 반환</span>
    <span class="kd">public</span> <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">cellForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
        <span class="c1">//재사용 가능한 셀을 생성, 식별자를 Cell과 동일하게, cell이 UITableViewCell라서 만들어놓은 Cell로 다운캐스팅</span>
        <span class="k">let</span> <span class="nv">cell</span> <span class="o">=</span> <span class="n">tableView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withIdentifier</span><span class="p">:</span> <span class="s">"ToDoCell"</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as!</span> <span class="kt">ToDoCell</span>
        
        <span class="c1">//ToDoCell 클래스의 아울렛 변수에 배열의 값을 할당</span>
        <span class="n">cell</span><span class="o">.</span><span class="n">idLebel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">toDoListArr</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
        <span class="n">cell</span><span class="o">.</span><span class="n">titleLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">toDoListArr</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">title</span>
        <span class="n">cell</span><span class="o">.</span><span class="n">isCompleteSwitch</span><span class="o">.</span><span class="n">isOn</span> <span class="o">=</span> <span class="n">toDoListArr</span><span class="p">[</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">]</span><span class="o">.</span><span class="n">isComplete</span>
        
        <span class="k">return</span> <span class="n">cell</span> <span class="c1">//셀 반환 </span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="13-실행">13. 실행</h2>
<ul>
  <li>배열의 데이터을 cell에서 확인할 수 있습니다. 
<img src="../../assets/images/categories/uikit/2024-03-25-TableViewCell2.png" alt="" /></li>
</ul>

<h1 id="마무리">마무리</h1>
<ul>
  <li>Table View에서 row와 cell의 데이터는 TableViewDatasource 프로토콜을 채택하여 필수 메서드 구현, viewDidLoad 밑 datasource 설정 필수</li>
  <li>UITableViewCell을 상속받는 클래스를 만들고 스토리보드의 Cell과 연결시키기, 스토리보드 Cell의 식별자 추가하기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="UITableView" /><summary type="html"><![CDATA[UITableView - 데이터 목록을 표시하고 사용자와 상호 작용할 수 있는 스크롤 가능한 UI 요소]]></summary></entry></feed>