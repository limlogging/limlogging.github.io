<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-04-09T09:29:32+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">limlogging Devlog</title><author><name>HyeongSub Lim</name></author><entry><title type="html">[프로그래머스/Swift] ⭐️기사단원의 무기⭐️</title><link href="http://localhost:4000/algorithm/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%EB%AC%B4%EA%B8%B0/" rel="alternate" type="text/html" title="[프로그래머스/Swift] ⭐️기사단원의 무기⭐️" /><published>2024-04-09T00:00:00+09:00</published><updated>2024-04-09T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%EB%AC%B4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98%EB%AC%B4%EA%B8%B0/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>숫자나라 기사단의 각 기사에게는 1번부터 number까지 번호가 지정되어 있습니다. 기사들은 무기점에서 무기를 구매하려고 합니다.</li>
  <li>각 기사는 자신의 기사 번호의 약수 개수에 해당하는 공격력을 가진 무기를 구매하려 합니다. 단, 이웃나라와의 협약에 의해 공격력의 제한수치를 정하고, 제한수치보다 큰 공격력을 가진 무기를 구매해야 하는 기사는 협약기관에서 정한 공격력을 가지는 무기를 구매해야 합니다.</li>
  <li>예를 들어, 15번으로 지정된 기사단원은 15의 약수가 1, 3, 5, 15로 4개 이므로, 공격력이 4인 무기를 구매합니다. 만약, 이웃나라와의 협약으로 정해진 공격력의 제한수치가 3이고 제한수치를 초과한 기사가 사용할 무기의 공격력이 2라면, 15번으로 지정된 기사단원은 무기점에서 공격력이 2인 무기를 구매합니다. 무기를 만들 때, 무기의 공격력 1당 1kg의 철이 필요합니다. 그래서 무기점에서 무기를 모두 만들기 위해 필요한 철의 무게를 미리 계산하려 합니다.</li>
  <li>기사단원의 수를 나타내는 정수 number와 이웃나라와 협약으로 정해진 공격력의 제한수치를 나타내는 정수 limit와 제한수치를 초과한 기사가 사용할 무기의 공격력을 나타내는 정수 power가 주어졌을 때, 무기점의 주인이 무기를 모두 만들기 위해 필요한 철의 무게를 return 하는 solution 함수를 완성하시오.</li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/136798" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>1 ≤ number ≤ 100,000</li>
  <li>2 ≤ limit ≤ 100</li>
  <li>1 ≤ power ≤ limit</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>number</th>
      <th>limit</th>
      <th>power</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>10</td>
    </tr>
    <tr>
      <td>10</td>
      <td>3</td>
      <td>2</td>
      <td>21</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>1부터 5까지의 약수의 개수는 순서대로 [1, 2, 2, 3, 2]개입니다. 모두 공격력 제한 수치인 3을 넘지 않기 때문에 필요한 철의 무게는 해당 수들의 합인 10이 됩니다. 따라서 10을 return 합니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>1부터 10까지의 약수의 개수는 순서대로 [1, 2, 2, 3, 2, 4, 2, 4, 3, 4]개입니다. 공격력의 제한수치가 3이기 때문에, 6, 8, 10번 기사는 공격력이 2인 무기를 구매합니다. 따라서 해당 수들의 합인 21을 return 합니다.</li>
</ul>

<h1 id="나의-풀이-1번-방법---667점">나의 풀이 1번 방법 - 66.7점</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">number</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">limit</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">power</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="nf">guard</span> <span class="p">(</span><span class="n">number</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">100000</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">limit</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">power</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">power</span> <span class="o">&lt;=</span> <span class="n">limit</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span> <span class="p">}</span>

    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">var</span> <span class="nv">cnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">number</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">i</span> <span class="p">{</span>
            <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
                <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;=</span> <span class="n">limit</span> <span class="p">?</span> <span class="nv">cnt</span> <span class="p">:</span> <span class="n">power</span><span class="p">)</span>
        <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">arr</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이-2번-방법---556">나의 풀이 2번 방법 - 55.6</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">number</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">limit</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">power</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="nf">guard</span> <span class="p">(</span><span class="n">number</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">100000</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">limit</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">power</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">power</span> <span class="o">&lt;=</span> <span class="n">limit</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span> <span class="p">}</span>

    <span class="nf">return</span> <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="n">number</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">i</span> <span class="nf">in</span>
        <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="n">j</span> <span class="k">in</span>
            <span class="n">i</span> <span class="o">%</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span>
        <span class="p">}</span><span class="o">.</span><span class="n">count</span>
    <span class="p">}</span><span class="o">.</span><span class="nf">map</span><span class="p">({</span>
        <span class="nv">$0</span> <span class="o">&gt;</span> <span class="n">limit</span> <span class="p">?</span> <span class="nv">power</span> <span class="p">:</span> <span class="nv">$0</span>
    <span class="p">})</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이-3번-방법---556">나의 풀이 3번 방법 - 55.6</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">number</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">limit</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">power</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="nf">guard</span> <span class="p">(</span><span class="n">number</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">100000</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">limit</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">power</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">power</span> <span class="o">&lt;=</span> <span class="n">limit</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span> <span class="p">}</span>

    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">number</span> <span class="p">{</span>
        <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">((</span><span class="mi">1</span><span class="o">...</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="n">i</span> <span class="o">%</span> <span class="nv">$0</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">}</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="n">limit</span> <span class="p">?</span> <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="n">i</span> <span class="o">%</span> <span class="nv">$0</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">}</span><span class="o">.</span><span class="nv">count</span> <span class="p">:</span> <span class="n">power</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">arr</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이-4번-방법---556">나의 풀이 4번 방법 - 55.6</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">number</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">limit</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">power</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="nf">guard</span> <span class="p">(</span><span class="n">number</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">100000</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">&gt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">limit</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">power</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">power</span> <span class="o">&lt;=</span> <span class="n">limit</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span> <span class="p">}</span>

    <span class="k">var</span> <span class="nv">arr</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">var</span> <span class="nv">cnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">number</span> <span class="p">{</span>
        <span class="n">cnt</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="n">j</span> <span class="k">in</span>
            <span class="n">i</span> <span class="o">%</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span>
        <span class="p">}</span><span class="o">.</span><span class="n">count</span>
        <span class="n">arr</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;=</span> <span class="n">limit</span> <span class="p">?</span> <span class="nv">cnt</span> <span class="p">:</span> <span class="n">power</span><span class="p">)</span>
        <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">arr</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">number</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">limit</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">power</span><span class="p">:</span><span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    
    <span class="k">var</span> <span class="nv">result</span> <span class="o">=</span> <span class="p">[</span><span class="kt">Int</span><span class="p">]()</span>
    
    <span class="k">for</span> <span class="n">number</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="n">number</span><span class="p">{</span>
        <span class="c1">//약수의 개수를 셈</span>
        <span class="k">var</span> <span class="nv">count</span> <span class="o">=</span> <span class="mi">0</span>
        
        <span class="c1">//16일경우 -&gt; 4까지만 구해도됨</span>
        <span class="c1">//약수 1로 16을 유추할수있음</span>
        <span class="c1">//2로 8을 유추할 수 있음</span>
        <span class="c1">//4 * 4 = 16이므로 이땐 +1</span>
        <span class="c1">//이외엔 약수 하나로 두 수를 구할 수 있으니 +2</span>
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="kt">Int</span><span class="p">(</span><span class="nf">sqrt</span><span class="p">(</span><span class="kt">Double</span><span class="p">(</span><span class="n">number</span><span class="p">))){</span>
            <span class="k">if</span> <span class="n">number</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">{</span>
                <span class="k">if</span><span class="p">(</span> <span class="n">i</span> <span class="o">*</span> <span class="n">i</span><span class="p">)</span> <span class="o">==</span> <span class="n">number</span><span class="p">{</span>
                    <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="p">}</span><span class="k">else</span><span class="p">{</span>
                    <span class="n">count</span> <span class="o">+=</span> <span class="mi">2</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="c1">//limit을 넘는다면 power를, limit을 넘지 않는다면 그대로</span>
        <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="n">limit</span> <span class="p">?</span> <span class="nv">power</span> <span class="p">:</span> <span class="n">count</span>
        <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
        
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="nv">$0</span> <span class="o">+</span> <span class="nv">$1</span><span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>채점 시 11번 ~ 16번 그 근처에 시간초과로 계속 실패했다.</li>
  <li>약수구하는 다른방법을 찾으면 시간을 줄일 수 있을 것 같은데 찾지 못했고 어려웠다 ㅠ</li>
  <li>결국 구글 검색으로 해결 …..</li>
</ul>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>전체적인 방법은 비슷한데 결국 약수구하는 방법에서 차이가 많이 났다. 통과 못한적은 처음인데 다시 공부해봐야겠다 😭</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="기사단원의 무기" /><summary type="html"><![CDATA[[프로그래머스/Swift] ⭐️기사단원의 무기⭐️]]></summary></entry><entry><title type="html">[minimal-mistakes]블로그에서 검색 노출(Search Console) 사용하기</title><link href="http://localhost:4000/GitHubBlog/googleSearchConsole/" rel="alternate" type="text/html" title="[minimal-mistakes]블로그에서 검색 노출(Search Console) 사용하기" /><published>2024-04-08T00:00:00+09:00</published><updated>2024-04-08T00:00:00+09:00</updated><id>http://localhost:4000/GitHubBlog/googleSearchConsole</id><content type="html" xml:base="http://localhost:4000/GitHubBlog/googleSearchConsole/"><![CDATA[<h1 id="1-google-search-console-접속">1. Google Search Console 접속</h1>
<ul>
  <li><a href="https://search.google.com/search-console/welcome?utm_source=about-page" target="_blank">Google Search Console 접속하기</a></li>
</ul>

<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole1.png" alt="" /></p>

<h1 id="2-google-search-console-시작">2. Google Search Console 시작</h1>

<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole2.png" alt="" /></p>

<h1 id="3-sitemapxml-추가하기">3. sitemap.xml 추가하기</h1>
<ul>
  <li>_config.yml 파일과 같은 경로에 sitemap.xml 파일을 추가 후 코드를 작성합니다.</li>
  <li>%안에 내용때문에 코드가 길어지고 달라져서 캡처로 대체합니다 ㅠ ㅠ</li>
</ul>

<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole7.png" alt="" /></p>

<h1 id="4-robotstxt-파일-생성">4. robots.txt 파일 생성</h1>
<ul>
  <li>_config.yml 파일과 같은 경로에 robots.txt 파일을 추가 후 내용 작성합니다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>User-agent: *
Allow: /
Sitemap: http://localhost:4000/sitemap.xml
</code></pre></div></div>

<h1 id="5-새-사이트맵-추가">5. 새 사이트맵 추가</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole3.png" alt="" /></p>

<h1 id="6-도메인으로-계속하기">6. 도메인으로 계속하기</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole4.png" alt="" /></p>

<h1 id="7-txt-레코드-복사">7. txt 레코드 복사</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole5.png" alt="" /></p>

<h1 id="8-_configyml-파일-수정">8. _config.yml 파일 수정</h1>
<ul>
  <li>google_site_verification 레코드를 붙여넣습니다.</li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># SEO Related</span>
<span class="na">google_site_verification </span><span class="pi">:</span> <span class="s2">"</span><span class="s">B9n-ap1lRd2h2TkRZ7YJ0o4C6AnWUSXWrBq2xCjZ9ug"</span>
<span class="na">bing_site_verification   </span><span class="pi">:</span>
<span class="na">naver_site_verification  </span><span class="pi">:</span>
<span class="na">yandex_site_verification </span><span class="pi">:</span>
<span class="na">baidu_site_verification  </span><span class="pi">:</span>
</code></pre></div></div>

<h1 id="9-완료">9. 완료</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-googleSearchConsole6.png" alt="" /></p>]]></content><author><name>HyeongSub Lim</name></author><category term="GitHubBlog" /><category term="GitHub" /><category term="blog" /><category term="GitHub blog" /><category term="Search Console" /><summary type="html"><![CDATA[[minimal-mistakes]블로그에서 검색 노출(Search Console) 사용하기]]></summary></entry><entry><title type="html">[minimal-mistakes]블로그 광고(google AdSense) 추가하기</title><link href="http://localhost:4000/GitHubBlog/googleAdSense/" rel="alternate" type="text/html" title="[minimal-mistakes]블로그 광고(google AdSense) 추가하기" /><published>2024-04-08T00:00:00+09:00</published><updated>2024-04-08T00:00:00+09:00</updated><id>http://localhost:4000/GitHubBlog/googleAdSense</id><content type="html" xml:base="http://localhost:4000/GitHubBlog/googleAdSense/"><![CDATA[<h1 id="1-google-adsense-시작하기">1. Google AdSense 시작하기</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense1.png" alt="Google AdSense 시작하기" /></p>

<h1 id="2-애드센스에-사이트-연결하기">2. 애드센스에 사이트 연결하기</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense2.png" alt="사이트연결하기" /></p>

<h1 id="3-코드스니펫-확인하기">3. 코드스니펫 확인하기</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense3.png" alt="코드스니펫 확인하기" /></p>

<h1 id="4-customshtml-수정">4. customs.html 수정</h1>
<ul>
  <li>_includes / head 경로에 위치한 customs.html 상단에 코드를 추가합니다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- start custom head snippets --&gt;</span>
<span class="c">&lt;!-- 구글 애드센스 추가 --&gt;</span>
<span class="nt">&lt;script </span><span class="na">async</span> <span class="na">src=</span><span class="s">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8663638822726862"</span> <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="코드-반영-전">코드 반영 전</h2>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense4.png" alt="" /></p>

<h2 id="코드-반영-후">코드 반영 후</h2>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense5.png" alt="" /></p>

<h1 id="5-애드센스-승인-메일-확인">5. 애드센스 승인 메일 확인</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense6.png" alt="" /></p>

<h1 id="6-adstxt-파일-추가">6. ads.txt 파일 추가</h1>
<ul>
  <li>애드센스 홈에서 아래와 같은 경고창이 뜨는데 ads.txt파일을 추가하면 됩니다.<br />
<img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense7.png" alt="" /></li>
</ul>

<h2 id="지금-해결하기-선택">지금 해결하기 선택</h2>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense8.png" alt="" /></p>

<h2 id="사이트-url-선택">사이트 URL 선택</h2>
<ul>
  <li>코드를 복사합니다. 
<img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense9.png" alt="" /></li>
</ul>

<h2 id="adstxt-파일-생성-및-코드-작성">ads.txt 파일 생성 및 코드 작성</h2>
<ul>
  <li>_config.yml파일과 같은 위치에 ads.txt파일을 생성하고 복사한 코드를 추가합니다. 
<img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense10.png" alt="" /></li>
</ul>

<h1 id="7-블로그-하단에-광고-추가하기">7. 블로그 하단에 광고 추가하기</h1>
<ul>
  <li>홈 - 광고 - 광고 단위 기준에서 디스플레이 광고를 선택합니다. 
<img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense11.png" alt="" /></li>
</ul>

<h2 id="1-수평형-디스플레이-광고를-생성">1. 수평형 디스플레이 광고를 생성</h2>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense12.png" alt="" /></p>

<h2 id="2-코드-받기">2. 코드 받기</h2>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense13.png" alt="" /></p>

<h2 id="3-코드-추가하기">3. 코드 추가하기</h2>
<ul>
  <li>_layouts 폴더 내 single.html파일 가장 하단에 코드를 추가합니다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 하단 광고 추가 --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"text-align: center;"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;script </span><span class="na">async</span> <span class="na">src=</span><span class="s">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8663638822726862"</span>
      <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;&lt;/script&gt;</span>
  <span class="c">&lt;!-- 수평형 디스플레이 광고 --&gt;</span>
  <span class="nt">&lt;ins</span> <span class="na">class=</span><span class="s">"adsbygoogle"</span>
      <span class="na">style=</span><span class="s">"display:block"</span>
      <span class="na">data-ad-client=</span><span class="s">"ca-pub-8663638822726862"</span>
      <span class="na">data-ad-slot=</span><span class="s">"5774789366"</span>
      <span class="na">data-ad-format=</span><span class="s">"auto"</span>
      <span class="na">data-full-width-responsive=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/ins&gt;</span>
  <span class="nt">&lt;script&gt;</span>
      <span class="p">(</span><span class="nx">adsbygoogle</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">adsbygoogle</span> <span class="o">||</span> <span class="p">[]).</span><span class="nf">push</span><span class="p">({});</span>
  <span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<h1 id="8-블로그-우측-toc에-광고-추가하기">8. 블로그 우측 toc에 광고 추가하기</h1>
<ul>
  <li>7번과 동일한 방법으로 수직형 디스플레이 광고를 만들고 코드를 받습니다.</li>
</ul>

<h2 id="1-html-파일-생성-및-코드-작성">1. html 파일 생성 및 코드 작성</h2>
<ul>
  <li>_includes 폴더에 GoogleAdSenseSidbar.html 파일을 추가하고 코드를 작성합니다.</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">async</span> <span class="na">src=</span><span class="s">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8663638822726862"</span>
     <span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="c">&lt;!-- 수직형 디스플레이 광고 --&gt;</span>
<span class="nt">&lt;ins</span> <span class="na">class=</span><span class="s">"adsbygoogle"</span>
     <span class="na">style=</span><span class="s">"display:block"</span>
     <span class="na">data-ad-client=</span><span class="s">"ca-pub-8663638822726862"</span>
     <span class="na">data-ad-slot=</span><span class="s">"8971782438"</span>
     <span class="na">data-ad-format=</span><span class="s">"auto"</span>
     <span class="na">data-full-width-responsive=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/ins&gt;</span>
<span class="nt">&lt;script&gt;</span>
     <span class="p">(</span><span class="nx">adsbygoogle</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">adsbygoogle</span> <span class="o">||</span> <span class="p">[]).</span><span class="nf">push</span><span class="p">({});</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h2 id="2-_configyml-파일-수정">2. _config.yml 파일 수정</h2>
<ul>
  <li>toc_ads, toc_sticky 부분을 추가합니다.</li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Defaults</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="c1"># _posts</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">posts</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">single</span>
      <span class="na">author_profile</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">read_time</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">comments</span><span class="pi">:</span> <span class="c1"># true</span>
      <span class="na">share</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">related</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">toc_ads</span><span class="pi">:</span> <span class="kc">true</span>     <span class="c1">#사이드 광고 추가 </span>
      <span class="na">toc_sticky</span><span class="pi">:</span> <span class="kc">true</span>  <span class="c1">#사이드 광고 추가 </span>
<span class="c1"># 사이드바 탐색 기본값 추가 </span>
      <span class="na">sidebar</span><span class="pi">:</span>
        <span class="na">nav</span><span class="pi">:</span> <span class="s2">"</span><span class="s">categories"</span>
</code></pre></div></div>

<h2 id="3-singlehtml-수정">3. single.html 수정</h2>
<ul>
  <li>코드 복붙하니 너무 길어져서 캡처로 대체합니다.
<img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense14.png" alt="" /></li>
</ul>

<h1 id="9-하단-광고-확인">9. 하단 광고 확인</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense15.png" alt="" /></p>

<h1 id="10-우측-광고-확인">10. 우측 광고 확인</h1>
<p><img src="../../assets/images/categories/githubblog/2024-04-08-GoogleAdSense16.png" alt="" /></p>]]></content><author><name>HyeongSub Lim</name></author><category term="GitHubBlog" /><category term="GitHub" /><category term="blog" /><category term="GitHub blog" /><category term="AdSense" /><summary type="html"><![CDATA[[minimal-mistakes]블로그 google AdSense 추가하기]]></summary></entry><entry><title type="html">[minimal-mistakes]로컬에서 블로그 실행시키기(bundle exec jekyll serve)</title><link href="http://localhost:4000/GitHubBlog/bundleexecjekyllserve/" rel="alternate" type="text/html" title="[minimal-mistakes]로컬에서 블로그 실행시키기(bundle exec jekyll serve)" /><published>2024-04-08T00:00:00+09:00</published><updated>2024-04-08T00:00:00+09:00</updated><id>http://localhost:4000/GitHubBlog/bundleexecjekylleserve</id><content type="html" xml:base="http://localhost:4000/GitHubBlog/bundleexecjekyllserve/"><![CDATA[<h1 id="1-터미널에서-명령어-입력">1. 터미널에서 명령어 입력</h1>
<ul>
  <li>bundle exec jekyll serve</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro limlogging.github.io % bundle exec jekyll serve   
</span></code></pre></div></div>

<p><img src="../../assets/images/categories/githubblog/2024-04-08-bundleexecjekyllserve1.png" alt="" /></p>

<h1 id="2-실행-확인">2. 실행 확인</h1>
<ul>
  <li>인터넷 주소창에 <a href="http://127.0.0.1:4000/" target="_blank">http://127.0.0.1:4000/ 접속</a></li>
</ul>

<p><img src="../../assets/images/categories/githubblog/2024-04-08-bundleexecjekyllserve2.png" alt="" /></p>]]></content><author><name>HyeongSub Lim</name></author><category term="GitHubBlog" /><category term="GitHub" /><category term="blog" /><category term="GitHub blog" /><category term="bundle exec jekyll serve" /><summary type="html"><![CDATA[[minimal-mistakes]로컬에서 블로그 실행시키기(bundle exec jekyll serve)]]></summary></entry><entry><title type="html">[minimal-mistakes]블로그 방문자 통계(google Analytics) 추가하기</title><link href="http://localhost:4000/GitHubBlog/googleAnalytics/" rel="alternate" type="text/html" title="[minimal-mistakes]블로그 방문자 통계(google Analytics) 추가하기" /><published>2024-04-08T00:00:00+09:00</published><updated>2024-04-08T00:00:00+09:00</updated><id>http://localhost:4000/GitHubBlog/googleAnalytics</id><content type="html" xml:base="http://localhost:4000/GitHubBlog/googleAnalytics/"><![CDATA[<h1 id="1-google-analytics-등록하기">1. Google Analytics 등록하기</h1>
<ul>
  <li><a href="https://analytics.google.com/" target="_blank">Google Analytics</a>에 접속해서 측정시작합니다. 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics1.png" alt="Google Analytics 시작" /></li>
  <li>계정 이름 설정 (자유롭게 작명하면 됩니다.)
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics2.png" alt="계정 이름 설정" /></li>
  <li>블로그 주소 및 시간대를 선택합니다. 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics3.png" alt="블로그 주소 설정" /></li>
</ul>

<p><br /></p>

<h1 id="2-트랙킹-id-확인하기">2. 트랙킹 ID 확인하기</h1>
<ul>
  <li>관리 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics4.png" alt="Analytics 관리" /></li>
  <li>데이터 스트림 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics5.png" alt="데이터 스트림" /></li>
  <li>블로그 선택 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics6.png" alt="블로그 선택" /></li>
  <li>측정 ID 확인 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics7.png" alt="측정 ID 확인" /></li>
</ul>

<p><br /></p>

<h1 id="3-_configyml-수정하기">3. _config.yml 수정하기</h1>
<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Analytics</span>
<span class="na">analytics</span><span class="pi">:</span>
  <span class="na">provider               </span><span class="pi">:</span> <span class="s2">"</span><span class="s">google-gtag"</span> <span class="c1"># false (default), "google", "google-universal", "google-gtag", "custom"</span>
  <span class="na">google</span><span class="pi">:</span>
    <span class="na">tracking_id          </span><span class="pi">:</span> <span class="s2">"</span><span class="s">G-B9ZRRL1X26"</span>
    <span class="na">anonymize_ip         </span><span class="pi">:</span> <span class="c1"># true, false (default)</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="4-확인하기">4. 확인하기</h1>
<ul>
  <li>홈에서 확인 
<img src="../../assets/images/categories/githubblog/2024-04-08-googleAnalytics8.png" alt="홈에서 확인" /></li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="GitHubBlog" /><category term="GitHub" /><category term="blog" /><category term="GitHub blog" /><category term="Analytics" /><summary type="html"><![CDATA[[minimal-mistakes]google Analytics 추가하기]]></summary></entry><entry><title type="html">[minimal-mistakes]블로그 내 검색기능 추가하기</title><link href="http://localhost:4000/GitHubBlog/search/" rel="alternate" type="text/html" title="[minimal-mistakes]블로그 내 검색기능 추가하기" /><published>2024-04-07T00:00:00+09:00</published><updated>2024-04-07T00:00:00+09:00</updated><id>http://localhost:4000/GitHubBlog/blogSearch</id><content type="html" xml:base="http://localhost:4000/GitHubBlog/search/"><![CDATA[<p>블로그에 검색 기능 추가하기입니다.</p>

<h1 id="1-_configyml-파일-수정하기">1. _config.yml 파일 수정하기</h1>
<ul>
  <li>_config.yml 파일에서 설정을 변경하면 바로 추가할 수 있습니다.</li>
  <li>search 관련 설정을 true로 변경합니다.</li>
</ul>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">search                   </span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># true, false (default)</span>
<span class="na">search_full_content      </span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># true, false (default)</span>
<span class="na">search_provider          </span><span class="pi">:</span> <span class="s">lunr</span> <span class="c1"># lunr (default), algolia, google</span>
<span class="na">lunr</span><span class="pi">:</span>
  <span class="na">search_within_pages    </span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># true, false (default)</span>
</code></pre></div></div>

<p><br /></p>

<h1 id="2-확인">2. 확인</h1>
<p>검색기능이 추가되고 검색할 수 있습니다. 
<img src="../../assets/images/categories/githubblog/2024-04-07-blogSearch.png" alt="추가된 검색 기능 확인" /></p>]]></content><author><name>HyeongSub Lim</name></author><category term="GitHubBlog" /><category term="GitHub" /><category term="blog" /><category term="GitHub blog" /><category term="검색" /><summary type="html"><![CDATA[[minimal-mistakes] 블로그 내 검색기능 추가하기입니다.]]></summary></entry><entry><title type="html">[프로그래머스/Swift] 덧칠하기</title><link href="http://localhost:4000/algorithm/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[프로그래머스/Swift] 덧칠하기" /><published>2024-04-03T00:00:00+09:00</published><updated>2024-04-03T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/algorithm/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>어느 학교에 페인트가 칠해진 길이가 n미터인 벽이 있습니다. 벽에 동아리 · 학회 홍보나 회사 채용 공고 포스터 등을 게시하기 위해 테이프로 붙였다가 철거할 때 떼는 일이 많고 그 과정에서 페인트가 벗겨지곤 합니다. 페인트가 벗겨진 벽이 보기 흉해져 학교는 벽에 페인트를 덧칠하기로 했습니다.</li>
  <li>넓은 벽 전체에 페인트를 새로 칠하는 대신, 구역을 나누어 일부만 페인트를 새로 칠 함으로써 예산을 아끼려 합니다. 이를 위해 벽을 1미터 길이의 구역 n개로 나누고, 각 구역에 왼쪽부터 순서대로 1번부터 n번까지 번호를 붙였습니다. 그리고 페인트를 다시 칠해야 할 구역들을 정했습니다.</li>
  <li>벽에 페인트를 칠하는 롤러의 길이는 m미터이고, 롤러로 벽에 페인트를 한 번 칠하는 규칙은 다음과 같습니다.
    <ul>
      <li>롤러가 벽에서 벗어나면 안 됩니다.</li>
      <li>구역의 일부분만 포함되도록 칠하면 안 됩니다.</li>
    </ul>
  </li>
  <li>즉, 롤러의 좌우측 끝을 구역의 경계선 혹은 벽의 좌우측 끝부분에 맞춘 후 롤러를 위아래로 움직이면서 벽을 칠합니다. 현재 페인트를 칠하는 구역들을 완전히 칠한 후 벽에서 롤러를 떼며, 이를 벽을 한 번 칠했다고 정의합니다.</li>
  <li>한 구역에 페인트를 여러 번 칠해도 되고 다시 칠해야 할 구역이 아닌 곳에 페인트를 칠해도 되지만 다시 칠하기로 정한 구역은 적어도 한 번 페인트칠을 해야 합니다. 예산을 아끼기 위해 다시 칠할 구역을 정했듯 마찬가지로 롤러로 페인트칠을 하는 횟수를 최소화하려고 합니다.</li>
  <li>정수 n, m과 다시 페인트를 칠하기로 정한 구역들의 번호가 담긴 정수 배열 section이 매개변수로 주어질 때 롤러로 페인트칠해야 하는 최소 횟수를 return 하는 solution 함수를 작성해 주세요.</li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/161989" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>1 ≤ m ≤ n ≤ 100,000</li>
  <li>1 ≤ section의 길이 ≤ n
    <ul>
      <li>1 ≤ section의 원소 ≤ n</li>
      <li>section의 원소는 페인트를 다시 칠해야 하는 구역의 번호입니다.</li>
      <li>section에서 같은 원소가 두 번 이상 나타나지 않습니다.</li>
      <li>section의 원소는 오름차순으로 정렬되어 있습니다.</li>
    </ul>
  </li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th>n</th>
      <th>m</th>
      <th>section</th>
      <th>result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>8</td>
      <td>4</td>
      <td>[2, 3, 6]</td>
      <td>2</td>
    </tr>
    <tr>
      <td>5</td>
      <td>4</td>
      <td>[1, 3]</td>
      <td>1</td>
    </tr>
    <tr>
      <td>4</td>
      <td>1</td>
      <td>[1, 2, 3, 4]</td>
      <td>4</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>예제 1번은 2, 3, 6번 영역에 페인트를 다시 칠해야 합니다. 롤러의 길이가 4미터이므로 한 번의 페인트칠에 연속된 4개의 구역을 칠할 수 있습니다. 처음에 3, 4, 5, 6번 영역에 페인트칠을 하면 칠해야 할 곳으로 2번 구역만 남고 1, 2, 3, 4번 구역에 페인트칠을 하면 2번 만에 다시 칠해야 할 곳에 모두 페인트칠을 할 수 있습니다.</li>
  <li>2번보다 적은 횟수로 2, 3, 6번 영역에 페인트를 덧칠하는 방법은 없습니다. 따라서 최소 횟수인 2를 return 합니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>예제 2번은 1, 3번 영역에 페인트를 다시 칠해야 합니다. 롤러의 길이가 4미터이므로 한 번의 페인트칠에 연속된 4개의 구역을 칠할 수 있고 1, 2, 3, 4번 영역에 페인트칠을 하면 한 번에 1, 3번 영역을 모두 칠할 수 있습니다.</li>
  <li>따라서 최소 횟수인 1을 return 합니다.</li>
</ul>

<h3 id="입출력-예-3">입출력 예 #3</h3>
<ul>
  <li>예제 3번은 모든 구역에 페인트칠을 해야 합니다. 롤러의 길이가 1미터이므로 한 번에 한 구역밖에 칠할 수 없습니다. 구역이 4개이므로 각 구역을 한 번씩만 칠하는 4번이 최소 횟수가 됩니다.</li>
  <li>따라서 4를 return 합니다.</li>
</ul>

<h1 id="나의-풀이">나의 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">n</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">m</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">section</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">section</span> <span class="o">=</span> <span class="n">section</span>
    <span class="k">var</span> <span class="nv">cnt</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">var</span> <span class="nv">firstNum</span><span class="p">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">if</span> <span class="n">m</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">m</span> <span class="o">&lt;=</span> <span class="mi">100000</span> <span class="o">&amp;&amp;</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">100000</span> <span class="o">&amp;&amp;</span> <span class="n">section</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">section</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="n">n</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">...</span><span class="n">n</span><span class="o">/</span><span class="n">m</span> <span class="p">{</span>
            <span class="c1">//시작 섹션 확인</span>
            <span class="k">if</span> <span class="n">section</span><span class="o">.</span><span class="n">count</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
                <span class="n">firstNum</span> <span class="o">=</span> <span class="n">section</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
                
                <span class="c1">//롤러에 포함된 섹션 확인해서 지우기</span>
                <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="n">firstNum</span><span class="o">..&lt;</span><span class="n">firstNum</span> <span class="o">+</span> <span class="n">m</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="n">section</span><span class="o">.</span><span class="n">count</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">==</span> <span class="n">section</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">{</span>
                        <span class="n">section</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">cnt</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="nv">n</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">m</span><span class="p">:</span><span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">section</span><span class="p">:[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">now</span> <span class="o">=</span> <span class="n">section</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">var</span> <span class="nv">counter</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">s</span> <span class="k">in</span> <span class="n">section</span> <span class="p">{</span>
        <span class="k">if</span> <span class="n">s</span> <span class="o">&gt;=</span> <span class="n">now</span> <span class="p">{</span>
            <span class="n">counter</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">now</span> <span class="o">=</span> <span class="n">s</span> <span class="o">+</span> <span class="n">m</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">counter</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>시작 섹션에서 롤러 길이만큼 더하기</li>
  <li>처음 구한 길이보다 작은 값들은 삭제</li>
  <li>다시 시작 세션구하고 반복</li>
</ul>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>시작 위치를 지정하고 최대로 선택할 수 있는 구간의 개수를 계산.. 간단하게 풀 수 있는 문제였구나 …</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="coding test" /><category term="덧칠하기" /><summary type="html"><![CDATA[[프로그래머스/Swift] 덧칠하기]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 27일차 - 2024.04.03</title><link href="http://localhost:4000/TIL/til27/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 27일차 - 2024.04.03" /><published>2024-04-03T00:00:00+09:00</published><updated>2024-04-03T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til27</id><content type="html" xml:base="http://localhost:4000/TIL/til27/"><![CDATA[<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>한번 롤러질을하면 X M가 칠해지는 롤러로 특정 섹션을 칠하는데 필요한 롤러질 횟수구하기</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EB%8D%A7%EC%B9%A0%ED%95%98%EA%B8%B0/" target="_blank">덧칠하기</a></li>
    </ul>
  </li>
</ul>

<h3 id="팀-프로젝트">팀 프로젝트</h3>
<ul>
  <li>처음에 충돌 났던 소스코드를 하나로 머지하고 나서부터는 이제 협업이 되는 것 같다.</li>
  <li>수정 전 새로 받아오고 수정하고 dev 브랜치에 머지하면 공유하고 새로 받아오고를 반복하며 조금 익숙해졌다.</li>
  <li>처음에는 스토리보드가 간편하고 좋다고 생각했으나 팀원들과 협업해보니 확실히 코드로 작업해야 더 간편한 것 같다.</li>
</ul>

<h3 id="챌린지반">챌린지반</h3>
<ul>
  <li>오늘 챌린지반 과제는 하지 않았다. - 페이징처리만 남음</li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>팀 과제 진행</li>
  <li>코드로 탭바 추가하기, 상세페이지 추가 등 ! ! !</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 27일차 이야기 - 2024.04.03]]></summary></entry><entry><title type="html">[UIKit] 코코아팟(cocoapods) 설치하기</title><link href="http://localhost:4000/UIKit/cocoapods/" rel="alternate" type="text/html" title="[UIKit] 코코아팟(cocoapods) 설치하기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/cocoaPods</id><content type="html" xml:base="http://localhost:4000/UIKit/cocoapods/"><![CDATA[<h1 id="코코아팟cocoapods이란-">코코아팟(cocoapods)이란 ?</h1>
<ul>
  <li>Objective-C 및 Swift Cocoa 프로젝트의 종속성 관리자</li>
  <li>즉, CocoaPods은 Objective-C 또는 Swift에서 <code class="language-plaintext highlighter-rouge">라이브러리를 사용할 수 있게 도와주는 모듈</code>이다.</li>
</ul>

<p><br /></p>

<h1 id="설치하기">설치하기</h1>
<h2 id="1-홈브루-버전-확인-및-업데이트">1. 홈브루 버전 확인 및 업데이트</h2>
<ul>
  <li>터미널에서 홈브루 버전확인 및 업데이트를 합니다.</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % brew --version 
Homebrew 4.2.11
imhs@imhsui-MacBookPro ~ % brew update
imhs@imhsui-MacBookPro ~ % brew --version
Homebrew 4.2.15
</span></code></pre></div></div>

<p><br /></p>

<h2 id="2-코코아팟-설치">2. 코코아팟 설치</h2>
<ul>
  <li><a href="https://cocoapods.org/" target="_blank">코코아팟 홈페이지 바로가기</a></li>
  <li>코코아팟 홈페이지에서 설치 명령어를 확인할 수 있습니다.</li>
  <li>sudo gem install cocoapods</li>
</ul>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % sudo gem install cocoapods
</span></code></pre></div></div>

<p><br /></p>

<h1 id="버전확인">버전확인</h1>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro ~ % pod --version
1.15.2
</span></code></pre></div></div>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="cocoapods" /><summary type="html"><![CDATA[홈브루로 코코아팟(cocoapods) 설치]]></summary></entry><entry><title type="html">[UIKit] SDWebImage 설치하기</title><link href="http://localhost:4000/UIKit/SDWebImage/" rel="alternate" type="text/html" title="[UIKit] SDWebImage 설치하기" /><published>2024-04-02T00:00:00+09:00</published><updated>2024-04-02T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/SDWebImage</id><content type="html" xml:base="http://localhost:4000/UIKit/SDWebImage/"><![CDATA[<h1 id="sdwebimage란-">SDWebImage란 ?</h1>
<ul>
  <li>SDWebImage는 Objective-C로 작성된 이미지 로딩 및 캐싱 라이브러리입니다. iOS 및 macOS에서 많이 사용되며, Swift에서도 사용할 수 있습니다.</li>
  <li>SDWebImage는 비동기 이미지 다운로드, 캐싱 및 관리를 처리하고, 메모리 사용량을 최적화하여 원활한 사용자 경험을 제공합니다.</li>
  <li>또한 SDWebImage는 GIF 지원, 프로그레시브 다운로드, 이미지 처리 등의 기능을 제공합니다.</li>
  <li>SDWebImage는 iOS 개발 커뮤니티에서 오랫동안 사용되어 온 라이브러리 중 하나입니다.</li>
</ul>

<p><br /></p>

<h1 id="사용방법">사용방법</h1>
<h2 id="1-프로젝트-폴더로-이동해서-터미널-오픈">1. 프로젝트 폴더로 이동해서 터미널 오픈</h2>
<ul>
  <li>프로젝트 폴더로 이동해서 폴더를 우클릭하고 터미널을 오픈합니다.</li>
</ul>

<p><br /></p>

<h2 id="2-명령어를-입력합니다">2. 명령어를 입력합니다.</h2>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">imhs@imhsui-MacBookPro MyGithub % pod init
</span></code></pre></div></div>

<p><br /></p>

<h2 id="3-프로젝트-폴더안에-podfile-확인">3. 프로젝트 폴더안에 Podfile 확인</h2>
<ul>
  <li>프로젝트 폴더 안에 Podfile이 생깁니다.</li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage1.png" alt="" /></p>

<p><br /></p>

<h2 id="4-podfile-더블클릭">4. Podfile 더블클릭</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage2.png" alt="" /></p>

<p><br /></p>

<h2 id="5-podfile-내-sdwebimage-추가">5. Podfile 내 SDWebImage 추가</h2>
<ul>
  <li>pod ‘SDWebImage’</li>
</ul>

<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage3.png" alt="" /></p>

<p><br /></p>

<h2 id="6-sdwebimage-설치---pod-install">6. SDWebImage 설치 - pod install</h2>
<p><img src="/assets/images/categories/uikit/2024-04-02-SDWebImage4.png" alt="" /></p>

<p><br /></p>

<h2 id="7project-재시작---xcworkspace-파일을-열어야합니다">7.project 재시작 - .xcworkspace 파일을 열어야합니다.</h2>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="SDWebImage" /><summary type="html"><![CDATA[SDWebImage 설치]]></summary></entry></feed>