<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-05T15:19:57+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">limlogging Devlog</title><author><name>HyeongSub Lim</name></author><entry><title type="html">[내배캠] iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 2</title><link href="http://localhost:4000/sparta/MyBookApp2/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 2" /><published>2024-05-05T00:00:00+09:00</published><updated>2024-05-05T00:00:00+09:00</updated><id>http://localhost:4000/sparta/MyBookApp2</id><content type="html" xml:base="http://localhost:4000/sparta/MyBookApp2/"><![CDATA[<h1 id="지난이야기">지난이야기</h1>
<ul>
  <li><a href="https://limlogging.github.io/sparta/MyBookApp1/" target="_blank">⭐️책 검색 앱 만들기 1 보러가기⭐️</a></li>
  <li>지난번에 이어 최근 본 책을 보여줄 컬렉션뷰와 책 검색 결과를 보여줄 테이블 뷰를 추가하도록 하겠습니다.</li>
</ul>

<h1 id="1-컬렉션-뷰가-담길-뷰-추가하기">1. 컬렉션 뷰가 담길 뷰 추가하기</h1>
<ul>
  <li>뷰를 추가해서 label과 컬렉션뷰를 담아보겠습니다.</li>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 최근 본 책의 title과 컬렉션뷰가 담길 뷰</span>
<span class="kd">class</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">recentlyViewedBooksView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">view</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">view</span>
    <span class="p">}()</span>

    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="nf">setupAddView</span><span class="p">()</span>          
        <span class="nf">setupAutoLayout</span><span class="p">()</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="c1">//최근 본 책</span>
        <span class="n">view</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">recentlyViewedBooksView</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">heightAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">heightAnchor</span><span class="p">,</span> <span class="nv">multiplier</span><span class="p">:</span> <span class="mf">0.2</span><span class="p">),</span>   <span class="c1">//view 높이의 20%로 설정</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="실행화면">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp1.png" alt="" /></p>

<h1 id="2-컬렉션뷰가-담길-뷰에-label-추가하기">2. 컬렉션뷰가 담길 뷰에 Label 추가하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - 최근 본 책 타이틀</span>
    <span class="kd">private</span> <span class="k">var</span> <span class="nv">recentlyViewedBooksTitleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"최근 본 책"</span>
        <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="kt">UIFont</span><span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">bold</span><span class="p">)</span>
        <span class="n">label</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>

    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">recentlyViewedBooksTitleLabel</span><span class="p">)</span>
    <span class="p">}</span>

        <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="c1">//최근 본 책 </span>
            <span class="n">recentlyViewedBooksTitleLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksTitleLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="실행화면-1">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp2.png" alt="" /></p>

<h1 id="3-컬렉션-뷰가-담길-뷰에-컬렉션-뷰-추가하기">3. 컬렉션 뷰가 담길 뷰에 컬렉션 뷰 추가하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - 최근 본 책 컬랙션 뷰</span>
    <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">recentlyViewedBooksCollectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">flowLayout</span> <span class="o">=</span> <span class="kt">UICollectionViewFlowLayout</span><span class="p">()</span>
        <span class="k">let</span> <span class="nv">collectionView</span> <span class="o">=</span> <span class="kt">UICollectionView</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="o">.</span><span class="n">zero</span><span class="p">,</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="n">flowLayout</span><span class="p">)</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">collectionView</span>
    <span class="p">}()</span>

        <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">recentlyViewedBooksCollectionView</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="c1">//컬렉션뷰</span>
            <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksTitleLabel</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
</code></pre></div></div>
<h2 id="실행화면-2">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp3.png" alt="" /></p>

<h1 id="4-컬렉션뷰에-cell-추가하고-레이아웃-설정하기">4. 컬렉션뷰에 Cell 추가하고 레이아웃 설정하기</h1>
<ul>
  <li>UICollectionViewCell을 상솓받는 RecentlyViewedBooksCollectionViewCell 이름의 파일을 만들었습니다.</li>
  <li>Cell 등록을 위한 identifier만 설정하였습니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="p">:</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
    <span class="c1">// MARK: - Cell 등록 시 사용할 identifier 설정</span>
    <span class="kd">static</span> <span class="k">let</span> <span class="nv">identifier</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="nv">describing</span><span class="p">:</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">)</span>
    
    <span class="k">override</span> <span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="kt">CGRect</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="n">frame</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="p">}</span>
    
    <span class="kd">required</span> <span class="nf">init</span><span class="p">?(</span><span class="nv">coder</span><span class="p">:</span> <span class="kt">NSCoder</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">fatalError</span><span class="p">(</span><span class="s">"init(coder:) has not been implemented"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="5-cell-등록-및-datasource-프로토콜-채택하기">5. Cell 등록 및 DataSource 프로토콜 채택하기</h1>
<ul>
  <li>SearchBookViewController에 컬렉션뷰 cell 등록 및 DataSource 프로토콜 채택하여 오토레이아웃을 잡아보겠습니다.</li>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
      <span class="nf">setupCollectionView</span><span class="p">()</span>   <span class="c1">//컬렉션 뷰 설정</span>
  <span class="p">}</span>

  <span class="c1">// MARK: - 컬렉션뷰 설정</span>
  <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupCollectionView</span><span class="p">()</span> <span class="p">{</span>
      <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="k">self</span>
      <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="nf">register</span><span class="p">(</span><span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">,</span> <span class="nv">forCellWithReuseIdentifier</span><span class="p">:</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="n">identifier</span><span class="p">)</span>    <span class="c1">//최근 본 책 컬렉션 뷰에서 사용할 Cell 등록</span>
  <span class="p">}</span>

  <span class="c1">// MARK: - 컬렉션뷰 데이터소스 프로토콜 채택</span>
  <span class="kd">extension</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDataSource</span> <span class="p">{</span>
      <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">numberOfItemsInSection</span> <span class="nv">section</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
          <span class="k">return</span> <span class="mi">10</span>
      <span class="p">}</span>
        
      <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">cellForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
          <span class="k">guard</span> <span class="k">let</span> <span class="nv">cell</span> <span class="o">=</span> <span class="n">collectionView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withReuseIdentifier</span><span class="p">:</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="n">identifier</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as?</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="kt">UICollectionViewCell</span><span class="p">()</span> <span class="p">}</span>
          <span class="k">return</span> <span class="n">cell</span> 
      <span class="p">}</span>
  <span class="p">}</span>
</code></pre></div>    </div>
    <h2 id="실행화면-3">실행화면</h2>
    <p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp4.png" alt="" /></p>
  </li>
</ul>

<h1 id="6-컬렉션뷰-레이아웃-수정">6. 컬렉션뷰 레이아웃 수정</h1>
<ul>
  <li>컬렉션뷰의 스크롤 방향을 가로로 만들고 Cell이 1개씩만 보이도록 하겠습니다.</li>
  <li>그 다음 Cell에는 이미지뷰와 label하나를 추가하겠습니다.</li>
  <li>컬렉션 뷰 관련 참고 포스팅
    <ul>
      <li><a href="https://limlogging.github.io/UIKit/UICollectionViewStoryboard/" target="_blank">⭐️UICollectionView 스토리보드 예제 코드⭐️</a></li>
      <li><a href="https://limlogging.github.io/UIKit/UICollectionViewCodebase/" target="_blank">⭐️UICollectionView Codebase 예제 코드⭐️</a></li>
    </ul>
  </li>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">recentlyViewedBooksCollectionViewItemSpacing</span><span class="p">:</span> <span class="kt">CGFloat</span> <span class="o">=</span> <span class="mi">0</span>   <span class="c1">//아이템 사이 간격</span>
    <span class="k">let</span> <span class="nv">recentlyViewedBooksCollectionViewItemCnt</span><span class="p">:</span> <span class="kt">CGFloat</span> <span class="o">=</span> <span class="mi">1</span>       <span class="c1">//라인에 들어갈 아이템 수</span>

    <span class="c1">// MARK: - 최근 본 책 컬랙션 뷰</span>
    <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">recentlyViewedBooksCollectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="n">flowLayout</span><span class="o">.</span><span class="n">scrollDirection</span> <span class="o">=</span> <span class="o">.</span><span class="n">horizontal</span>    <span class="c1">//스크롤 방향 </span>
        <span class="n">flowLayout</span><span class="o">.</span><span class="n">minimumInteritemSpacing</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">recentlyViewedBooksCollectionViewItemSpacing</span>  <span class="c1">//아이템 사이 거리, 아이템 1개라 0으로 지정 </span>
        <span class="n">flowLayout</span><span class="o">.</span><span class="n">minimumLineSpacing</span> <span class="o">=</span> <span class="mi">10</span>  <span class="c1">// 라인 사이 거리를 10으로 띄우기 </span>
    <span class="p">}()</span>

    <span class="c1">// MARK: - 컬렉션뷰 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupCollectionView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>   
    <span class="p">}</span>
<span class="p">}</span> 

<span class="c1">// MARK: - 컬렉션뷰 플로우 레이아웃 프로토콜 채택</span>
<span class="kd">extension</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDelegateFlowLayout</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">layout</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="kt">UICollectionViewLayout</span><span class="p">,</span> <span class="n">sizeForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">CGSize</span> <span class="p">{</span>

        <span class="k">let</span> <span class="nv">height</span> <span class="o">=</span> <span class="p">(</span><span class="n">recentlyViewedBooksCollectionView</span><span class="o">.</span><span class="n">bounds</span><span class="o">.</span><span class="n">height</span> <span class="o">-</span> <span class="p">(</span><span class="n">recentlyViewedBooksCollectionViewItemSpacing</span> <span class="o">*</span> <span class="p">(</span><span class="n">recentlyViewedBooksCollectionViewItemCnt</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="o">/</span> <span class="n">recentlyViewedBooksCollectionViewItemCnt</span>
        
        <span class="k">return</span> <span class="kt">CGSize</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="n">height</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="실행화면-4">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp5.png" alt="" /></p>

<h1 id="7-cell에-imageview와-label-추가하기">7. Cell에 imageView와 label 추가하기</h1>
<ul>
  <li>RecentlyViewedBooksCollectionViewCell 파일을 수정하였습니다.</li>
  <li>전체 코드</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="p">:</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
    <span class="c1">// MARK: - Cell 등록 시 사용할 identifier 설정</span>
    <span class="kd">static</span> <span class="k">let</span> <span class="nv">identifier</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="nv">describing</span><span class="p">:</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">)</span>
    
    <span class="c1">// MARK: - 책 이미지</span>
    <span class="k">var</span> <span class="nv">bookImageView</span><span class="p">:</span> <span class="kt">UIImageView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">imageView</span> <span class="o">=</span> <span class="kt">UIImageView</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">imageView</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 책 제목</span>
    <span class="k">var</span> <span class="nv">bookTitleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"책 제목"</span>
        <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="kt">UIFont</span><span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">bold</span><span class="p">)</span>
        <span class="n">label</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">label</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="k">override</span> <span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="kt">CGRect</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="n">frame</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="nf">addView</span><span class="p">()</span>
        <span class="nf">setupAutoLayout</span><span class="p">()</span>
    <span class="p">}</span>
    
    <span class="kd">required</span> <span class="nf">init</span><span class="p">?(</span><span class="nv">coder</span><span class="p">:</span> <span class="kt">NSCoder</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">fatalError</span><span class="p">(</span><span class="s">"init(coder:) has not been implemented"</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">func</span> <span class="nf">addView</span><span class="p">()</span> <span class="p">{</span>
        <span class="p">[</span><span class="n">bookImageView</span><span class="p">,</span> <span class="n">bookTitleLabel</span><span class="p">]</span><span class="o">.</span><span class="n">forEach</span> <span class="p">{</span> <span class="n">item</span> <span class="k">in</span>
            <span class="n">item</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
            <span class="nf">addSubview</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">topAnchor</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">leadingAnchor</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">trailingAnchor</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">widthAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">widthAnchor</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">heightAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">heightAnchor</span><span class="p">,</span> <span class="nv">multiplier</span><span class="p">:</span> <span class="mf">0.8</span><span class="p">),</span>  <span class="c1">//Cell의 80%</span>
            
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookImageView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">leadingAnchor</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">trailingAnchor</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bottomAnchor</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">widthAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">widthAnchor</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">heightAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">heightAnchor</span><span class="p">,</span> <span class="nv">multiplier</span><span class="p">:</span> <span class="mf">0.2</span><span class="p">),</span> <span class="c1">//Cell의 20%</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="실행화면-5">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp6.png" alt="" /></p>

<h1 id="8-테이블-뷰가-담길-뷰-추가하기">8. 테이블 뷰가 담길 뷰 추가하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - 검색 결과 타이틀과 검색결과 테이블뷰가 담길 뷰</span>
    <span class="kd">private</span> <span class="k">var</span> <span class="nv">searchResultView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">view</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">view</span>
    <span class="p">}()</span>

    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="c1">//검색 결과</span>
        <span class="n">view</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">searchResultView</span><span class="p">)</span>
    <span class="p">}</span>
        
    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="c1">//테이블 뷰와 타이틀을 담을 뷰</span>
            <span class="n">searchResultView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">recentlyViewedBooksView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">searchResultView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">searchResultView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">searchResultView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
</code></pre></div></div>
<h2 id="실행화면-6">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp7.png" alt="" /></p>

<h1 id="9-테이블-뷰가-담길-뷰에-label-추가하기">9. 테이블 뷰가 담길 뷰에 Label 추가하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// MARK: - 검색 결과 타이틀</span>
  <span class="kd">private</span> <span class="k">var</span> <span class="nv">searchResultTitleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
      <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"검색 결과"</span>
      <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="kt">UIFont</span><span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">bold</span><span class="p">)</span>
      <span class="n">label</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
      <span class="k">return</span> <span class="n">label</span>
  <span class="p">}()</span>

  <span class="c1">// MARK: - 뷰 추가</span>
  <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
      <span class="n">searchResultView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">searchResultTitleLabel</span><span class="p">)</span>
  <span class="p">}</span> 

  <span class="c1">// MARK: - 오토레이아웃 설정</span>
  <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
      <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
          <span class="c1">//검색 결과 타이틀</span>
          <span class="n">searchResultTitleLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">searchResultView</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
          <span class="n">searchResultTitleLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">searchResultView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
      <span class="p">])</span>
  <span class="p">}</span>
</code></pre></div>    </div>
    <h2 id="실행화면-7">실행화면</h2>
    <p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp8.png" alt="" /></p>
  </li>
</ul>

<h1 id="10-테이블-뷰가-담길-뷰에-테이블-뷰-추가하기">10. 테이블 뷰가 담길 뷰에 테이블 뷰 추가하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="c1">// MARK: - 검색 결과 테이블 뷰</span>
    <span class="kd">private</span> <span class="k">var</span> <span class="nv">searchResultTableView</span><span class="p">:</span> <span class="kt">UITableView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">tableView</span> <span class="o">=</span> <span class="kt">UITableView</span><span class="p">()</span>
        <span class="n">tableView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">tableView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">tableView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">tableView</span>
    <span class="p">}()</span>

    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="nf">setupTableView</span><span class="p">()</span>        <span class="c1">//테이블 뷰 설정</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">searchResultView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">searchResultTableView</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 테이블뷰 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupTableView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">searchResultTableView</span><span class="o">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="k">self</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// MARK: - 테이블뷰 데이터소스 프로토콜 채택</span>
<span class="kd">extension</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UITableViewDataSource</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">numberOfRowsInSection</span> <span class="nv">section</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
        <span class="k">return</span> <span class="mi">10</span>
    <span class="p">}</span>
    
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">cellForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kt">UITableViewCell</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="실행화면-8">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp9.png" alt="" /></p>

<h1 id="11-tableview-row의-height-설정하기">11. TableView Row의 Height 설정하기</h1>
<ul>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 테이블뷰 설정</span>
<span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupTableView</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">searchResultTableView</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>
<span class="p">}</span>

<span class="c1">// MARK: - 테이블뷰 델리게이트 프로토콜 채택</span>
<span class="kd">extension</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UITableViewDelegate</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">tableView</span><span class="p">(</span><span class="n">_</span> <span class="nv">tableView</span><span class="p">:</span> <span class="kt">UITableView</span><span class="p">,</span> <span class="n">heightForRowAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">CGFloat</span> <span class="p">{</span>
        <span class="k">return</span> <span class="mi">120</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="실행화면-9">실행화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp10.png" alt="" /></p>

<h1 id="12-tableview-cell에-imageview-및-label-추가하기">12. TableView Cell에 imageView 및 Label 추가하기</h1>
<ul>
  <li>UITableViewCell을 상속받는 SearchResultTableViewCell 파일을 만들었습니다.</li>
  <li>SearchResultTableViewCell 파일 전체 코드</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">SearchResultTableViewCell</span><span class="p">:</span> <span class="kt">UITableViewCell</span> <span class="p">{</span>
    <span class="c1">//TableView Cell을 등록하기위해 식별자 설정</span>
    <span class="kd">static</span> <span class="k">let</span> <span class="nv">identifier</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="nv">describing</span><span class="p">:</span> <span class="kt">SearchResultTableViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">)</span>
    
    <span class="c1">// MARK: - 책 이미지</span>
    <span class="k">var</span> <span class="nv">bookImageView</span><span class="p">:</span> <span class="kt">UIImageView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">imageView</span> <span class="o">=</span> <span class="kt">UIImageView</span><span class="p">()</span>
        <span class="n">imageView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">imageView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">return</span> <span class="n">imageView</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 책 제목</span>
    <span class="k">var</span> <span class="nv">bookTitleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"책 제목"</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 저자</span>
    <span class="k">var</span> <span class="nv">bookAuthorsLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"저자"</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 책 가격</span>
    <span class="k">var</span> <span class="nv">bookPriceLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"책 가격"</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 책 소개</span>
    <span class="k">var</span> <span class="nv">bookContentsLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"책 소개"</span>
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">setSelected</span><span class="p">(</span><span class="n">_</span> <span class="nv">selected</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">setSelected</span><span class="p">(</span><span class="n">selected</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="n">animated</span><span class="p">)</span>
        <span class="nf">setupAddView</span><span class="p">()</span>
        <span class="nf">setupAutoLayout</span><span class="p">()</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 뷰 추가</span>
    <span class="kd">func</span> <span class="nf">setupAddView</span><span class="p">()</span> <span class="p">{</span>
        <span class="p">[</span><span class="n">bookImageView</span><span class="p">,</span> <span class="n">bookTitleLabel</span><span class="p">,</span> <span class="n">bookAuthorsLabel</span><span class="p">,</span> <span class="n">bookPriceLabel</span><span class="p">,</span> <span class="n">bookContentsLabel</span><span class="p">]</span><span class="o">.</span><span class="n">forEach</span> <span class="p">{</span> <span class="n">item</span> <span class="k">in</span>
            <span class="n">item</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
            <span class="n">contentView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 오토레이아웃 추가</span>
    <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="c1">//책 이미지</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">contentView</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">contentView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">contentView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">bookImageView</span><span class="o">.</span><span class="n">widthAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalToConstant</span><span class="p">:</span> <span class="mi">100</span><span class="p">),</span>
            
            <span class="c1">//책 제목</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">contentView</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookImageView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            
            <span class="c1">//책 저자</span>
            <span class="n">bookAuthorsLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookTitleLabel</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookAuthorsLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookImageView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            
            <span class="c1">//책 가격</span>
            <span class="n">bookPriceLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookAuthorsLabel</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookPriceLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookImageView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            
            <span class="c1">//책 소개</span>
            <span class="n">bookContentsLabel</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookPriceLabel</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">bookContentsLabel</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">bookImageView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="13-tableviewcell-등록-및-cellforrowat-메서드-수정">13. TableViewCell 등록 및 cellForRowAt 메서드 수정</h1>
<ul>
  <li>SearchBookViewController 파일에서 tableView의 Cell을 등록합니다.</li>
  <li>
    <font color="red">추가된 코드만 작성하였습니다.</font>
  </li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1">// MARK: - 테이블뷰 설정</span>
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">setupTableView</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">searchResultTableView</span><span class="o">.</span><span class="nf">register</span><span class="p">(</span><span class="kt">SearchResultTableViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">,</span> <span class="nv">forCellReuseIdentifier</span><span class="p">:</span> <span class="kt">SearchResultTableViewCell</span><span class="o">.</span><span class="n">identifier</span><span class="p">)</span> <span class="c1">//검색 결과 테이블뷰에서 사용할 Cell 등록</span>
    <span class="p">}</span>

    <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">cellForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
        <span class="k">guard</span> <span class="k">let</span> <span class="nv">cell</span> <span class="o">=</span> <span class="n">collectionView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withReuseIdentifier</span><span class="p">:</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span><span class="o">.</span><span class="n">identifier</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as?</span> <span class="kt">RecentlyViewedBooksCollectionViewCell</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="kt">UICollectionViewCell</span><span class="p">()</span> <span class="p">}</span>
        <span class="k">return</span> <span class="n">cell</span> 
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="실행화면-10">실행화면</h2>
<ul>
  <li><img src="../../assets/images/categories/sparta/2024-05-05-MyBookApp11.png" alt="" /></li>
</ul>

<h1 id="마무리">마무리</h1>
<ul>
  <li>검색할 책의 데이터를 보여줄 컬렉션뷰와 검색결과를 보여줄 테이블뷰를 추가하였습니다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="iOS" /><category term="UIKit" /><category term="TabBarController" /><category term="Code Base" /><category term="UINavigationController" /><category term="UITabBarController" /><category term="UISearchController" /><category term="UICollectionViewCell" /><category term="UITableViewCell" /><category term="UICollectionViewFlowLayout" /><category term="UICollectionView" /><category term="UITableView" /><summary type="html"><![CDATA[iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 2]]></summary></entry><entry><title type="html">[UIKit] UICollectionView Codebase 예제 코드</title><link href="http://localhost:4000/UIKit/UICollectionViewCodebase/" rel="alternate" type="text/html" title="[UIKit] UICollectionView Codebase 예제 코드" /><published>2024-05-04T00:00:00+09:00</published><updated>2024-05-04T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/UICollectionViewCodebase</id><content type="html" xml:base="http://localhost:4000/UIKit/UICollectionViewCodebase/"><![CDATA[<h1 id="uicollectionview-코드로-구현하기">UICollectionView 코드로 구현하기</h1>
<ul>
  <li>스토리보드로만 UICollectionView 연습을 해봤었는데 코드로 UICollectionView를 만들어보았습니다.</li>
  <li><a href="https://limlogging.github.io/UIKit/UICollectionViewStoryboard/" target="_blank">⭐️스토리보드로 CollectionView 만들기 바로가기⭐️</a></li>
</ul>

<h1 id="1-컬렉션뷰를-담을-뷰-만들기">1. 컬렉션뷰를 담을 뷰 만들기</h1>
<ul>
  <li>UICollectionView를 담을 UIView 하나를 추가했습니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">cvView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">view</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">view</span>
    <span class="p">}()</span>

    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="n">view</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">cvView</span><span class="p">)</span>

        <span class="nf">setupAutoLayout</span><span class="p">()</span>
    <span class="p">}</span>

    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">heightAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalToConstant</span><span class="p">:</span> <span class="mi">150</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>실행화면
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase1.png" alt="컬렉션뷰담을뷰" /></li>
</ul>

<h1 id="2-uicollectionview-추가하기">2. UICollectionView 추가하기</h1>
<ul>
  <li>TableView나 Button, Label처럼 추가 후 실행하면 에러가 발생합니다.</li>
  <li>UICollectionViewFlowLayout를 추가해야 에러가 발생하지 않습니다.</li>
</ul>

<h2 id="uicollectionviewflowlayout-레이아웃-추가-전">UICollectionViewFlowLayout 레이아웃 추가 전</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="c1">// MARK: - 컬렉션뷰</span>
    <span class="k">var</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">collectionView</span> <span class="o">=</span> <span class="kt">UICollectionView</span><span class="p">()</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">yellow</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">collectionView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="k">return</span> <span class="n">collectionView</span>
    <span class="p">}()</span>
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>

        <span class="n">view</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">cvView</span><span class="p">)</span>             <span class="c1">//뷰에 컬렉션뷰를 담을 뷰 추가 </span>
        <span class="n">cvView</span><span class="o">.</span><span class="nf">addSubview</span><span class="p">(</span><span class="n">collectionView</span><span class="p">)</span>   <span class="c1">//컬렉션뷰를 담을 뷰에 컬렉션뷰 추가 </span>

        <span class="nf">setupAutoLayout</span><span class="p">()</span>   <span class="c1">//오토레이아웃설정</span>
    <span class="p">}</span>
    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="c1">//컬렉션뷰를 담을 뷰 </span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">view</span><span class="o">.</span><span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">cvView</span><span class="o">.</span><span class="n">heightAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalToConstant</span><span class="p">:</span> <span class="mi">150</span><span class="p">),</span>
            <span class="c1">//컬렉션뷰</span>
            <span class="n">collectionView</span><span class="o">.</span><span class="n">topAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">cvView</span><span class="o">.</span><span class="n">topAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">collectionView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">cvView</span><span class="o">.</span><span class="n">leadingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="mi">10</span><span class="p">),</span>
            <span class="n">collectionView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">cvView</span><span class="o">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
            <span class="n">collectionView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">cvView</span><span class="o">.</span><span class="n">bottomAnchor</span><span class="p">,</span> <span class="nv">constant</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<h3 id="에러메시지">🚨에러메시지🚨</h3>
<ul>
  <li>컬렉션뷰는 테이블뷰와 달리 레이아웃 없이 초기화할 수 없습니다 !</li>
  <li>Thread 1: “UICollectionView must be initialized with a non-nil layout parameter”
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase2.png" alt="컬렉션뷰담을뷰" /></li>
</ul>

<h2 id="uicollectionviewflowlayout-레이아웃-추가-후">UICollectionViewFlowLayout 레이아웃 추가 후</h2>
<ul>
  <li>FlowLayout을 추가하고 다시 실행해보면 에러 없이 추가된 것을 확인할 수 있습니다.
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 컬렉션뷰</span>
<span class="k">var</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
  <span class="k">let</span> <span class="nv">flowLayout</span> <span class="o">=</span> <span class="kt">UICollectionViewFlowLayout</span><span class="p">()</span>    
  <span class="k">let</span> <span class="nv">collectionView</span> <span class="o">=</span> <span class="kt">UICollectionView</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="o">.</span><span class="n">zero</span><span class="p">,</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="n">flowLayout</span><span class="p">)</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">yellow</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="k">return</span> <span class="n">collectionView</span>
<span class="p">}()</span>
</code></pre></div>    </div>
  </li>
  <li>실행화면 
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase3.png" alt="컬렉션뷰실행" /></li>
</ul>

<h1 id="3uicollectionviewdatasource-프로토콜-채택하기">3.UICollectionViewDataSource 프로토콜 채택하기</h1>
<ul>
  <li>테이블뷰처럼 DataSource를 채택하면 필수메서드가 필요하다고 에러가 발생합니다.</li>
  <li>임의로 Return 데이터를 추가하면 테이블 뷰는 실행이되지만 컬렉션뷰는 dequeueReusableCell를 사용하지 않으면 에러가 발생합니다.
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
  <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        
      <span class="n">collectionView</span><span class="o">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="k">self</span>    <span class="c1">//ㄷ</span>

      <span class="c1">//다른코드 생략 </span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDataSource</span> <span class="p">{</span>
  <span class="c1">//컬렉션뷰에서 보여줄 아이템의 개수</span>
  <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">numberOfItemsInSection</span> <span class="nv">section</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
      <span class="k">return</span> <span class="mi">10</span>
  <span class="p">}</span>
    
  <span class="c1">//컬렉션뷰의 셀에 포함할 데이터  </span>
  <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">cellForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
      <span class="k">return</span> <span class="kt">UICollectionViewCell</span><span class="p">()</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="에러메시지-1">🚨에러메시지🚨</h2>
<ul>
  <li>컬렉션 뷰에서 셀을 반환할 때 재사용 큐에서 셀을 가져오지 않고 새로운 셀을 생성하여 반환하려고 할 때 에러 발생</li>
  <li>Thread 1: “the cell returned from -collectionView:cellForItemAtIndexPath: does not have a reuseIdentifier - cells must be retrieved by calling -dequeueReusableCellWithReuseIdentifier:forIndexPath:”
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase4.png" alt="컬렉션뷰담을뷰" /></li>
</ul>

<h1 id="4-uicollectionviewcell를-상속받는-파일-추가">4. UICollectionViewCell를 상속받는 파일 추가</h1>
<ul>
  <li>UICollectionViewCell를 상속받는 MyCollectionViewCell 파일을 추가했습니다.</li>
  <li>셀을 초기화하기위해서 init을 추가하면 required init? 메서드가 필요하다고 에러가 발생하고 required init?(coder: NSCoder)를 자동으로 추가해줍니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">MyCollectionViewCell</span><span class="p">:</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
    <span class="k">override</span> <span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="kt">CGRect</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="n">frame</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="kd">required</span> <span class="nf">init</span><span class="p">?(</span><span class="nv">coder</span><span class="p">:</span> <span class="kt">NSCoder</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">fatalError</span><span class="p">(</span><span class="s">"init(coder:) has not been implemented"</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="mycollectionviewcell-전체-코드">MyCollectionViewCell 전체 코드</h2>
<ul>
  <li>Cell에 숫자를 보여주기위해서 Label 하나를 추가하고 오토레이아웃을 설정했습니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>
<span class="kd">class</span> <span class="kt">MyCollectionViewCell</span><span class="p">:</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
    <span class="k">override</span> <span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="kt">CGRect</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="n">frame</span><span class="p">)</span>

        <span class="k">self</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">white</span>

        <span class="nf">addViews</span><span class="p">()</span>
        <span class="nf">setupAutoLayout</span><span class="p">()</span>
    <span class="p">}</span>
    
    <span class="kd">required</span> <span class="nf">init</span><span class="p">?(</span><span class="nv">coder</span><span class="p">:</span> <span class="kt">NSCoder</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">fatalError</span><span class="p">(</span><span class="s">"init(coder:) has not been implemented"</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 숫자 추가</span>
    <span class="k">var</span> <span class="nv">numberLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
        
        <span class="k">return</span> <span class="n">label</span>
    <span class="p">}()</span>
    
    <span class="c1">// MARK: - 뷰에 객체 추가</span>
    <span class="kd">func</span> <span class="nf">addViews</span><span class="p">()</span> <span class="p">{</span>
        <span class="p">[</span><span class="n">numberLabel</span><span class="p">]</span><span class="o">.</span><span class="n">forEach</span> <span class="p">{</span> <span class="n">item</span> <span class="k">in</span>
            <span class="n">item</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
            <span class="nf">addSubview</span><span class="p">(</span><span class="n">numberLabel</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="c1">// MARK: - 오토레이아웃 설정</span>
    <span class="kd">func</span> <span class="nf">setupAutoLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="kt">NSLayoutConstraint</span><span class="o">.</span><span class="nf">activate</span><span class="p">([</span>
            <span class="n">numberLabel</span><span class="o">.</span><span class="n">centerXAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">centerXAnchor</span><span class="p">),</span>
            <span class="n">numberLabel</span><span class="o">.</span><span class="n">centerYAnchor</span><span class="o">.</span><span class="nf">constraint</span><span class="p">(</span><span class="nv">equalTo</span><span class="p">:</span> <span class="n">safeAreaLayoutGuide</span><span class="o">.</span><span class="n">centerYAnchor</span><span class="p">),</span>
        <span class="p">])</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="5-viewcontroller에-컬렉션뷰에서-사용할-cell-등록-및-cellforitemat-메서드-수정">5. ViewController에 컬렉션뷰에서 사용할 Cell 등록 및 cellForItemAt 메서드 수정</h1>
<ul>
  <li>ViewController에 컬렉션뷰에서 사용할 Cell 등록
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
  <span class="c1">//다른코드 생략 </span>
  <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
      <span class="c1">//다른코드 생략 </span>

      <span class="c1">//MyCollectionViewCell 클래스를 컬렉션 뷰에 등록하고 식별자 지정 </span>
      <span class="n">collectionView</span><span class="o">.</span><span class="nf">register</span><span class="p">(</span><span class="kt">MyCollectionViewCell</span><span class="o">.</span><span class="k">self</span><span class="p">,</span> <span class="nv">forCellWithReuseIdentifier</span><span class="p">:</span> <span class="s">"MyCollectionViewCell"</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="c1">//다른코드 생략 </span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>cellForItemAt 메서드 수정
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDataSource</span> <span class="p">{</span>
 <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">cellForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">UICollectionViewCell</span> <span class="p">{</span>
      <span class="k">guard</span> <span class="k">let</span> <span class="nv">cell</span> <span class="o">=</span> <span class="n">collectionView</span><span class="o">.</span><span class="nf">dequeueReusableCell</span><span class="p">(</span><span class="nv">withReuseIdentifier</span><span class="p">:</span> <span class="s">"MyCollectionViewCell"</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="k">as?</span> <span class="kt">MyCollectionViewCell</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="kt">UICollectionViewCell</span><span class="p">()</span> <span class="p">}</span>
      <span class="n">cell</span><span class="o">.</span><span class="n">numberLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">indexPath</span><span class="o">.</span><span class="n">row</span><span class="p">)</span>
        
      <span class="k">return</span> <span class="n">cell</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>실행화면
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase5.png" alt="컬렉션뷰에데이터가들어간모습" /></li>
</ul>

<h1 id="6-컬렉션뷰-수정-전-스크롤-방향에-따른-라인의-간격과-아이템간의-간격-차이-확인">6. 컬렉션뷰 수정 전 스크롤 방향에 따른 라인의 간격과 아이템간의 간격 차이 확인</h1>
<ul>
  <li>스크롤 방향에 따라서 최소 줄 간격과 최소항목간 간격이 변경됩니다.
    <ul>
      <li>빨간색 박스 = 라인의 범위</li>
      <li>파란색 박스 = 라인의 간격 (minimumLineSpacing)</li>
      <li>초록색 박스 = 아이템간의 간격 (minimumInteritemSpacing)</li>
    </ul>
  </li>
</ul>

<h2 id="스크롤-방향이-vertical-일때-기본-설정">스크롤 방향이 vertical 일때 (기본 설정)</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase6.png" alt="vertical" /></p>
<h2 id="스크롤-방향이-horizontal-일때">스크롤 방향이 horizontal 일때</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase7.png" alt="horizontal" /></p>

<h1 id="7-uicollectionviewflowlayout-수정하기">7. UICollectionViewFlowLayout 수정하기</h1>
<ul>
  <li>UICollectionViewFlowLayout를 수정해서 한 줄에 들어갈 아이템의 수와 아이템의 간격을 원하는대로 지정해보겠습니다.</li>
</ul>

<h2 id="1-아이템간의-간격과-라인에-들어갈-아이템-수-지정">1. 아이템간의 간격과 라인에 들어갈 아이템 수 지정</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">collectionViewItemSpacing</span><span class="p">:</span> <span class="kt">CGFloat</span> <span class="o">=</span> <span class="mi">5</span>      <span class="c1">//아이템간의 간격</span>
    <span class="k">let</span> <span class="nv">collectionViewItemCnt</span><span class="p">:</span> <span class="kt">CGFloat</span> <span class="o">=</span> <span class="mi">4</span>          <span class="c1">//라인에 들어갈 아이템 수</span>
    <span class="c1">//다른 코드 생략 </span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="2-컬렉션뷰-수정">2. 컬렉션뷰 수정</h2>
<ul>
  <li>스크롤 방향과 아이템간의 간격, 라인간의 간격을 설정합니다.</li>
  <li>collectionViewItemSpacing 상수의 추가로 lazy를 추가하고 collectionViewItemSpacing 상수보다 나중에 초기화 되도록 합니다.
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 컬렉션뷰</span>
<span class="kd">lazy</span> <span class="k">var</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
  <span class="k">let</span> <span class="nv">flowLayout</span> <span class="o">=</span> <span class="kt">UICollectionViewFlowLayout</span><span class="p">()</span>
  <span class="n">flowLayout</span><span class="o">.</span><span class="n">scrollDirection</span> <span class="o">=</span> <span class="o">.</span><span class="n">vertical</span>  <span class="c1">//스크롤 방향</span>
  <span class="n">flowLayout</span><span class="o">.</span><span class="n">minimumLineSpacing</span> <span class="o">=</span> <span class="mi">20</span>      <span class="c1">//라인 간격 </span>
  <span class="n">flowLayout</span><span class="o">.</span><span class="n">minimumInteritemSpacing</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">collectionViewItemSpacing</span> <span class="c1">//아이템 간격</span>
    
  <span class="k">let</span> <span class="nv">collectionView</span> <span class="o">=</span> <span class="kt">UICollectionView</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="o">.</span><span class="n">zero</span><span class="p">,</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="n">flowLayout</span><span class="p">)</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">yellow</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderColor</span> <span class="o">=</span> <span class="k">#colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">borderWidth</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="n">collectionView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="k">return</span> <span class="n">collectionView</span>
<span class="p">}()</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="3-컬렉션뷰-델리게이트-설정">3. 컬렉션뷰 델리게이트 설정</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
    <span class="c1">//다른코드 생략 </span>
    <span class="n">collectionView</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="4-uicollectionviewdelegateflowlayout-프로토콜-채택-및-메서드-추가">4. UICollectionViewDelegateFlowLayout 프로토콜 채택 및 메서드 추가</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDelegateFlowLayout</span> <span class="p">{</span>
    <span class="c1">// MARK: - 컬렉션 뷰의 각 셀의 크기를 결정하는 메서드 </span>
    <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">layout</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="kt">UICollectionViewLayout</span><span class="p">,</span> <span class="n">sizeForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">CGSize</span> <span class="p">{</span>
        <span class="c1">//return 값으로 원하는 크기를 지정 </span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="스크롤-방향이-vertical-일때-한-줄에-4개-만큼-아이템-넣기">스크롤 방향이 vertical 일때 한 줄에 4개 만큼 아이템 넣기</h3>
<ul>
  <li>스크롤 방향 설정
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 컬렉션뷰</span>
<span class="kd">lazy</span> <span class="k">var</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
  <span class="c1">//다른코드 생략</span>
  <span class="n">flowLayout</span><span class="o">.</span><span class="n">scrollDirection</span> <span class="o">=</span> <span class="o">.</span><span class="n">vertical</span>  <span class="c1">//스크롤 방향</span>
  <span class="c1">//다른코드 생략</span>
<span class="p">}()</span>
</code></pre></div>    </div>
  </li>
  <li>스크롤 방향이 horizontal일때 한 줄이 width 기준
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDelegateFlowLayout</span> <span class="p">{</span>
  <span class="c1">// MARK: - 컬렉션 뷰의 각 셀의 크기를 결정하는 메서드 </span>
  <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">layout</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="kt">UICollectionViewLayout</span><span class="p">,</span> <span class="n">sizeForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">CGSize</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">width</span> <span class="o">=</span> <span class="p">(</span><span class="n">collectionView</span><span class="o">.</span><span class="n">bounds</span><span class="o">.</span><span class="n">width</span> <span class="o">-</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">collectionViewLineWidth</span> <span class="o">*</span> <span class="p">(</span><span class="k">self</span><span class="o">.</span><span class="n">collectionViewItemCnt</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="o">/</span> <span class="k">self</span><span class="o">.</span><span class="n">collectionViewItemCnt</span>
      <span class="k">return</span> <span class="kt">CGSize</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="n">width</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="n">width</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>실행화면 (한 줄에 아이템 수 4, 아이템 간격 5, 라인 간격 20)
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase8.png" alt="" /></li>
  <li>실행화면 (한 줄에 아이템 수 5, 아이템 간격 1, 라인 간격 10)
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase10.png" alt="" /></li>
</ul>

<h3 id="스크롤-방향이-horizontal-일때-한-줄에-4개-만큼-아이템-넣기">스크롤 방향이 horizontal 일때 한 줄에 4개 만큼 아이템 넣기</h3>
<ul>
  <li>스크롤 방향 설정
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - 컬렉션뷰</span>
<span class="kd">lazy</span> <span class="k">var</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span> <span class="o">=</span> <span class="p">{</span>
  <span class="c1">//다른코드 생략</span>
  <span class="n">flowLayout</span><span class="o">.</span><span class="n">scrollDirection</span> <span class="o">=</span> <span class="o">.</span><span class="n">horizontal</span>  <span class="c1">//스크롤 방향</span>
  <span class="c1">//다른코드 생략</span>
<span class="p">}()</span>
</code></pre></div>    </div>
  </li>
  <li>스크롤 방향이 horizontal일때 한 줄이 height 기준
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UICollectionViewDelegateFlowLayout</span> <span class="p">{</span>
  <span class="c1">// MARK: - 컬렉션 뷰의 각 셀의 크기를 결정하는 메서드 </span>
  <span class="kd">func</span> <span class="nf">collectionView</span><span class="p">(</span><span class="n">_</span> <span class="nv">collectionView</span><span class="p">:</span> <span class="kt">UICollectionView</span><span class="p">,</span> <span class="n">layout</span> <span class="nv">collectionViewLayout</span><span class="p">:</span> <span class="kt">UICollectionViewLayout</span><span class="p">,</span> <span class="n">sizeForItemAt</span> <span class="nv">indexPath</span><span class="p">:</span> <span class="kt">IndexPath</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">CGSize</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">width</span> <span class="o">=</span> <span class="p">(</span><span class="n">collectionView</span><span class="o">.</span><span class="n">bounds</span><span class="o">.</span><span class="n">height</span> <span class="o">-</span> <span class="p">(</span><span class="n">collectionViewItemSpacing</span> <span class="o">*</span> <span class="p">(</span><span class="n">collectionViewItemCnt</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)))</span> <span class="o">/</span> <span class="n">collectionViewItemCnt</span>
      <span class="k">return</span> <span class="kt">CGSize</span><span class="p">(</span><span class="nv">width</span><span class="p">:</span> <span class="n">width</span><span class="p">,</span> <span class="nv">height</span><span class="p">:</span> <span class="n">width</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>실행화면 (한 줄에 아이템 수 4, 아이템 간격 5, 라인 간격 20)
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase9.png" alt="" /></li>
  <li>실행화면 (한 줄에 아이템 수 5, 아이템 간격 1, 라인 간격 10)
<img src="../../assets/images/categories/uikit/2024-05-04-UICollectionViewCodebase11.png" alt="" /></li>
</ul>

<h1 id="마무리">마무리</h1>
<ul>
  <li>컬렉션뷰를 사용할때는 레이아웃 설정 필요함</li>
  <li>스크롤 방향에 따라 라인이 변경됨</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="UICollectionView" /><category term="UICollectionViewDataSource" /><category term="UICollectionViewFlowLayout" /><summary type="html"><![CDATA[UICollectionView Codebase 예제 코드]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 1</title><link href="http://localhost:4000/sparta/MyBookApp1/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 1" /><published>2024-05-03T00:00:00+09:00</published><updated>2024-05-03T00:00:00+09:00</updated><id>http://localhost:4000/sparta/MyBookApp1</id><content type="html" xml:base="http://localhost:4000/sparta/MyBookApp1/"><![CDATA[<h1 id="ios-앱-개발-심화-개인-과제">iOS 앱 개발 심화 개인 과제</h1>
<ul>
  <li>팀프로젝트가 끝나면 찾아오는 개인 과제, 어렵지만 차근차근 해보기!</li>
</ul>

<h1 id="개인-과제-목표">개인 과제 목표</h1>
<ol>
  <li>이번 과제에서 우리는 책을 검색하고 저장하는 앱을 구현합니다.</li>
  <li><strong>앱의 모든 UI 는 코드를 기반으로</strong> 구현합니다.</li>
  <li>CoreData 와 HTTP 통신을 사용하여 앱의 기능을 구현합니다</li>
  <li>간단한 MVVM 구조로 리팩토링해봅니다.</li>
</ol>

<h1 id="화면-구성하기">화면 구성하기</h1>
<h2 id="예시-화면">예시 화면</h2>
<p><img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp1.png" alt="" /></p>

<h1 id="1-메인-스토리보드-삭제">1. 메인 스토리보드 삭제</h1>
<ul>
  <li>스토리보드를 사용하지 않고 코드를 기반으로 구현하기위해 main 스토리보드를 삭제하였습니다.</li>
  <li><a href="https://limlogging.github.io/UIKit/MainStoryBoardDelete/" target="_blank">⭐️코드로 UI를 구성하기 위해 메인 스토리보드 삭제하는 방법 바로가기 클릭!!!!⭐️</a></li>
</ul>

<h1 id="2-탭-바-추가하기">2. 탭 바 추가하기</h1>
<ul>
  <li>예시화면에 탭바가 포함되어 있어 탭바를 추가하고 먼저 탭바로 화면을 이동할 수 있게 하겠습니다.</li>
</ul>

<h2 id="탭바-추가를-위한-scenedelegateswift-파일-수정하기">탭바 추가를 위한 SceneDelegate.swift 파일 수정하기</h2>
<ul>
  <li>UIViewController를 상속 받는 파일 2개를 만듭니다. (SearchBookViewController.swift, MyBookListViewController.swift)</li>
  <li>상단에 위치한 scene 메서드를 수정합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">scene</span><span class="p">(</span><span class="n">_</span> <span class="nv">scene</span><span class="p">:</span> <span class="kt">UIScene</span><span class="p">,</span> <span class="n">willConnectTo</span> <span class="nv">session</span><span class="p">:</span> <span class="kt">UISceneSession</span><span class="p">,</span> <span class="n">options</span> <span class="nv">connectionOptions</span><span class="p">:</span> <span class="kt">UIScene</span><span class="o">.</span><span class="kt">ConnectionOptions</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">guard</span> <span class="k">let</span> <span class="nv">windowScene</span> <span class="o">=</span> <span class="p">(</span><span class="n">scene</span> <span class="k">as?</span> <span class="kt">UIWindowScene</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
    <span class="n">window</span> <span class="o">=</span> <span class="kt">UIWindow</span><span class="p">(</span><span class="nv">windowScene</span><span class="p">:</span> <span class="n">windowScene</span><span class="p">)</span>
    
    <span class="c1">// 검색 화면(SearchBookViewController)과 내 책 리스트 화면(MyBookListViewController)을 UINavigationController에 넣음</span>
    <span class="k">let</span> <span class="nv">searchBookViewController</span> <span class="o">=</span> <span class="kt">UINavigationController</span><span class="p">(</span><span class="nv">rootViewController</span><span class="p">:</span> <span class="kt">SearchBookViewController</span><span class="p">())</span>
    <span class="k">let</span> <span class="nv">myBookListViewController</span> <span class="o">=</span> <span class="kt">UINavigationController</span><span class="p">(</span><span class="nv">rootViewController</span><span class="p">:</span> <span class="kt">MyBookListViewController</span><span class="p">())</span>
                
    <span class="c1">// 탭 바 컨트롤러(UITabBarController)를 생성하고 검색 화면과 내 책 리스트 화면을 설정</span>
    <span class="k">let</span> <span class="nv">tabBarController</span> <span class="o">=</span> <span class="kt">UITabBarController</span><span class="p">()</span>
    <span class="n">tabBarController</span><span class="o">.</span><span class="nf">setViewControllers</span><span class="p">([</span><span class="n">searchBookViewController</span><span class="p">,</span> <span class="n">myBookListViewController</span><span class="p">],</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">)</span>
    
    <span class="c1">// 탭 바 아이템(TabBarItem) 설정</span>
    <span class="k">if</span> <span class="k">let</span> <span class="nv">items</span> <span class="o">=</span> <span class="n">tabBarController</span><span class="o">.</span><span class="n">tabBar</span><span class="o">.</span><span class="n">items</span> <span class="p">{</span>
        <span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">selectedImage</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"magnifyingglass.circle.fill"</span><span class="p">)</span>      <span class="c1">//선택했을때 이미지</span>
        <span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">image</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"magnifyingglass.circle"</span><span class="p">)</span>                <span class="c1">//선택하지않았을때 이미지</span>
        <span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">"검색 탭"</span>
        
        <span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">selectedImage</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"heart.fill"</span><span class="p">)</span>
        <span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">image</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"heart"</span><span class="p">)</span>
        <span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">"담은 책 리스트"</span>
    <span class="p">}</span>
    <span class="c1">// 윈도우의 루트 뷰 컨트롤러(rootViewController)를 탭 바 컨트롤러로 설정</span>
    <span class="n">window</span><span class="p">?</span><span class="o">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">tabBarController</span>
    <span class="c1">// 윈도우를 화면에 표시</span>
    <span class="n">window</span><span class="p">?</span><span class="o">.</span><span class="nf">makeKeyAndVisible</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="uitabbarcontroller-추가-후-실행-화면">UITabBarController 추가 후 실행 화면</h3>
<ul>
  <li>확인을 위해 백그라운드 색상은 임의로 변경하였습니다.</li>
</ul>

<p><img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp2.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp3.png" width="200" /></p>

<h1 id="3-uisearchcontroller-추가하기">3. UISearchController 추가하기</h1>
<ul>
  <li>함수를 새로 만들어 SearchController 관련 설정을 추가했습니다.</li>
  <li>UISearchController에 UISearchBar 포함되어 있습니다.</li>
  <li>일반적으로 UISearchBar는 단순한 검색 상자를 표시하는 데 사용되고, 더 복잡한 검색 기능이 필요한 경우에는  UISearchController를 사용합니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
    <span class="n">view</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">white</span>
    <span class="nf">setupSearchController</span><span class="p">()</span>
<span class="p">}</span>

<span class="c1">// MARK: - UISearchController 설정</span>
<span class="kd">func</span> <span class="nf">setupSearchController</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">//UISearchController 추가하기 </span>
    <span class="k">let</span> <span class="nv">searchController</span> <span class="o">=</span> <span class="kt">UISearchController</span><span class="p">(</span><span class="nv">searchResultsController</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span> <span class="c1">//검색 시 다른 View로 이동하려면 nil이 아닌 ViewController로 설정</span>
    <span class="k">self</span><span class="o">.</span><span class="n">navigationItem</span><span class="o">.</span><span class="n">searchController</span> <span class="o">=</span> <span class="n">searchController</span> 
<span class="p">}</span>
</code></pre></div></div>

<h2 id="uisearchcontroller-추가-후-실행화면">UISearchController 추가 후 실행화면</h2>
<ul>
  <li>searchbar를 선택하면 취소버튼이 자동 생성됩니다.</li>
</ul>

<p><img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp4.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp5.png" width="200" /></p>

<h1 id="4-uisearchcontroller-추가-수정하기">4. UISearchController 추가 수정하기</h1>
<h2 id="title-및-placeholder-추가">title 및 placeholder 추가</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// MARK: - UISearchController 설정</span>
<span class="kd">func</span> <span class="nf">setupSearchController</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">//다른 코드 생략 </span>
    <span class="k">self</span><span class="o">.</span><span class="n">navigationItem</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">"검색하기"</span>
    <span class="k">self</span><span class="o">.</span><span class="n">navigationController</span><span class="p">?</span><span class="o">.</span><span class="n">navigationBar</span><span class="o">.</span><span class="n">prefersLargeTitles</span> <span class="o">=</span> <span class="kc">true</span> <span class="c1">// Large title로 설정</span>
    <span class="n">searchController</span><span class="o">.</span><span class="n">searchBar</span><span class="o">.</span><span class="n">placeholder</span> <span class="o">=</span> <span class="s">"검색어를 입력하세요."</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="title-및-placeholder-추가-후-실행화면">title 및 placeholder 추가 후 실행화면</h2>

<p><img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp6.png" alt="" /></p>

<h1 id="5-검색어-확인을-위한-uisearchbardelegate-델리게이트-채택">5. 검색어 확인을 위한 UISearchBarDelegate 델리게이트 채택</h1>
<h2 id="searchbarsearchbuttonclicked-추가">searchBarSearchButtonClicked 추가</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">extension</span> <span class="kt">SearchBookViewController</span><span class="p">:</span> <span class="kt">UISearchBarDelegate</span> <span class="p">{</span>
    <span class="c1">// 사용자가 검색 버튼을 눌렀을 때 호출되는 메서드</span>
    <span class="kd">func</span> <span class="nf">searchBarSearchButtonClicked</span><span class="p">(</span><span class="n">_</span> <span class="nv">searchBar</span><span class="p">:</span> <span class="kt">UISearchBar</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="k">let</span> <span class="nv">searchText</span> <span class="o">=</span> <span class="n">searchBar</span><span class="o">.</span><span class="n">text</span> <span class="p">{</span>
            <span class="nf">print</span><span class="p">(</span><span class="s">"검색어: </span><span class="se">\(</span><span class="n">searchText</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="delegate-설정">Delegate 설정</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">setupSearchController</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">//다른코드 생략 </span>

    <span class="c1">//검색어 확인을 위해 SearchBar의 delegate를 SearchBookViewController로 설정</span>
    <span class="n">searchController</span><span class="o">.</span><span class="n">searchBar</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="검색-후-검색어-확인">검색 후 검색어 확인</h2>

<p><img src="../../assets/images/categories/sparta/2024-05-03-MyBookApp7.png" alt="" /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>코드로 프로젝트를 진행하기 위한 셋팅 작업과 UINavigationController, UITabBarController, UISearchController를 추가했습니다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="iOS" /><category term="UIKit" /><category term="TabBarController" /><category term="Code Base" /><category term="UINavigationController" /><category term="UITabBarController" /><category term="UISearchController" /><summary type="html"><![CDATA[iOS 앱 개발 심화 개인 과제 - 책 검색 앱 만들기 1]]></summary></entry><entry><title type="html">[UIKit] Code Base를 위한 main storyboard 삭제하기</title><link href="http://localhost:4000/UIKit/MainStoryBoardDelete/" rel="alternate" type="text/html" title="[UIKit] Code Base를 위한 main storyboard 삭제하기" /><published>2024-05-03T00:00:00+09:00</published><updated>2024-05-03T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/storyboardDelete</id><content type="html" xml:base="http://localhost:4000/UIKit/MainStoryBoardDelete/"><![CDATA[<h1 id="code-base를-위한-main-storyboard-삭제하기">Code Base를 위한 main storyboard 삭제하기</h1>
<ul>
  <li>코드를 기반으로 UI를 구성하기위해 main Storyboard 삭제 방법입니다.</li>
</ul>

<h1 id="1-main-storyboard-삭제">1. Main Storyboard 삭제</h1>
<ul>
  <li>Main Storyboard를 삭제합니다. 
<img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete1.png" alt="스토리보드삭제" /></li>
</ul>

<h1 id="2-build-setting-변경">2. Build Setting 변경</h1>
<ul>
  <li>Build Settings에서 main를 검색해서 UIKit Main Storyboard File Base Name 삭제합니다.</li>
  <li>UIKit Main Storyboard File Base Name 항목은 남아있고 text만 지워집니다.</li>
</ul>

<h2 id="삭제-전">삭제 전</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete2.png" alt="Build Setting 변경 " /></p>

<h2 id="삭제-후">삭제 후</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete3.png" alt="Build Setting 변경 " /></p>

<h1 id="3-infoplist-변경">3. Info.plist 변경</h1>
<ul>
  <li>Storyboard Name을 삭제합니다.</li>
  <li>한줄이 모두 삭제 됩니다.</li>
</ul>

<h2 id="삭제-전-1">삭제 전</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete4.png" alt="Info.plist 변경" /></p>

<h2 id="삭제-후-1">삭제 후</h2>
<p><img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete5.png" alt="Info.plist 변경" /></p>

<h1 id="4-scenedelegateswift-파일-코드-수정">4. SceneDelegate.swift 파일 코드 수정</h1>
<ul>
  <li>첫 화면을 보여줄 컨트롤러 지정해주기</li>
  <li>NavigationController나 TabBarController를 rootViewController로 가지고 싶다면 SceneDelegate 파일에서 아래 함수를 추가로 수정해야합니다.</li>
</ul>

<h2 id="수정-전">수정 전</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">func</span> <span class="nf">scene</span><span class="p">(</span><span class="n">_</span> <span class="nv">scene</span><span class="p">:</span> <span class="kt">UIScene</span><span class="p">,</span> <span class="n">willConnectTo</span> <span class="nv">session</span><span class="p">:</span> <span class="kt">UISceneSession</span><span class="p">,</span> <span class="n">options</span> <span class="nv">connectionOptions</span><span class="p">:</span> <span class="kt">UIScene</span><span class="o">.</span><span class="kt">ConnectionOptions</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span>
        <span class="c1">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span>
        <span class="c1">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span>

        <span class="k">guard</span> <span class="k">let</span> <span class="nv">_</span> <span class="o">=</span> <span class="p">(</span><span class="n">scene</span> <span class="k">as?</span> <span class="kt">UIWindowScene</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
<h2 id="수정-후">수정 후</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">func</span> <span class="nf">scene</span><span class="p">(</span><span class="n">_</span> <span class="nv">scene</span><span class="p">:</span> <span class="kt">UIScene</span><span class="p">,</span> <span class="n">willConnectTo</span> <span class="nv">session</span><span class="p">:</span> <span class="kt">UISceneSession</span><span class="p">,</span> <span class="n">options</span> <span class="nv">connectionOptions</span><span class="p">:</span> <span class="kt">UIScene</span><span class="o">.</span><span class="kt">ConnectionOptions</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.</span>
        <span class="c1">// If using a storyboard, the `window` property will automatically be initialized and attached to the scene.</span>
        <span class="c1">// This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).</span>
        <span class="c1">//수정 전</span>
        <span class="c1">//guard let _ = (scene as? UIWindowScene) else { return }</span>
        <span class="c1">//수정 후</span>
        <span class="k">guard</span> <span class="k">let</span> <span class="nv">windowScene</span> <span class="o">=</span> <span class="p">(</span><span class="n">scene</span> <span class="k">as?</span> <span class="kt">UIWindowScene</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
            
        <span class="n">window</span> <span class="o">=</span> <span class="kt">UIWindow</span><span class="p">(</span><span class="nv">windowScene</span><span class="p">:</span> <span class="n">windowScene</span><span class="p">)</span>
        <span class="n">window</span><span class="p">?</span><span class="o">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="kt">ViewController</span><span class="p">()</span>
        <span class="n">window</span><span class="p">?</span><span class="o">.</span><span class="nf">makeKeyAndVisible</span><span class="p">()</span>
    <span class="p">}</span>
</code></pre></div></div>

<h1 id="5-실행-확인">5. 실행 확인</h1>
<ul>
  <li>실행 유무를 확인하기 위해 배경을 노란색으로 변경하였습니다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="n">view</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="o">.</span><span class="n">yellow</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="../../assets/images/categories/uikit/2024-05-03-storyboardDelete6.png" alt="정상실행 확인" /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>이제 코드베이스로 시작해봅시다!</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="UIKit" /><category term="Code Base" /><category term="main storyboard 삭제" /><summary type="html"><![CDATA[Code Base를 위한 main storyboard 삭제하기]]></summary></entry><entry><title type="html">[프로그래머스/Swift] ⭐️숫자 짝꿍⭐️</title><link href="http://localhost:4000/algorithm/%EC%88%AB%EC%9E%90%EC%A7%9D%EA%BF%8D/" rel="alternate" type="text/html" title="[프로그래머스/Swift] ⭐️숫자 짝꿍⭐️" /><published>2024-04-30T00:00:00+09:00</published><updated>2024-04-30T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/%EC%88%AB%EC%9E%90%EC%A7%9D%EA%BF%8D</id><content type="html" xml:base="http://localhost:4000/algorithm/%EC%88%AB%EC%9E%90%EC%A7%9D%EA%BF%8D/"><![CDATA[<h1 id="문제-설명">문제 설명</h1>
<ul>
  <li>두 정수 X, Y의 임의의 자리에서 공통으로 나타나는 정수 k(0 ≤ k ≤ 9)들을 이용하여 만들 수 있는 가장 큰 정수를 두 수의 짝꿍이라 합니다(단, 공통으로 나타나는 정수 중 서로 짝지을 수 있는 숫자만 사용합니다). X, Y의 짝꿍이 존재하지 않으면, 짝꿍은 -1입니다. X, Y의 짝꿍이 0으로만 구성되어 있다면, 짝꿍은 0입니다.</li>
  <li>예를 들어, X = 3403이고 Y = 13203이라면, X와 Y의 짝꿍은 X와 Y에서 공통으로 나타나는 3, 0, 3으로 만들 수 있는 가장 큰 정수인 330입니다. 다른 예시로 X = 5525이고 Y = 1255이면 X와 Y의 짝꿍은 X와 Y에서 공통으로 나타나는 2, 5, 5로 만들 수 있는 가장 큰 정수인 552입니다(X에는 5가 3개, Y에는 5가 2개 나타나므로 남는 5 한 개는 짝 지을 수 없습니다.)</li>
  <li>두 정수 X, Y가 주어졌을 때, X, Y의 짝꿍을 return하는 solution 함수를 완성해주세요.</li>
  <li><a href="https://school.programmers.co.kr/learn/courses/30/lessons/131128" target="_blank">문제 풀기</a></li>
</ul>

<h1 id="제한사항">제한사항</h1>
<ul>
  <li>3 ≤ X, Y의 길이(자릿수) ≤ 3,000,000입니다.</li>
  <li>X, Y는 0으로 시작하지 않습니다.</li>
  <li>X, Y의 짝꿍은 상당히 큰 정수일 수 있으므로, 문자열로 반환합니다.</li>
</ul>

<h1 id="입출력-예">입출력 예</h1>

<table>
  <thead>
    <tr>
      <th style="text-align: center">X</th>
      <th style="text-align: center">Y</th>
      <th style="text-align: center">result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">“100”</td>
      <td style="text-align: center">“2345”</td>
      <td style="text-align: center">“-1”</td>
    </tr>
    <tr>
      <td style="text-align: center">“100”</td>
      <td style="text-align: center">“203045”</td>
      <td style="text-align: center">“0”</td>
    </tr>
    <tr>
      <td style="text-align: center">“100”</td>
      <td style="text-align: center">“123450”</td>
      <td style="text-align: center">“10”</td>
    </tr>
    <tr>
      <td style="text-align: center">“12321”</td>
      <td style="text-align: center">“42531”</td>
      <td style="text-align: center">“321”</td>
    </tr>
    <tr>
      <td style="text-align: center">“5525”</td>
      <td style="text-align: center">“1255”</td>
      <td style="text-align: center">“552”</td>
    </tr>
  </tbody>
</table>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<h3 id="입출력-예-1">입출력 예 #1</h3>
<ul>
  <li>X, Y의 짝꿍은 존재하지 않습니다. 따라서 “-1”을 return합니다.</li>
</ul>

<h3 id="입출력-예-2">입출력 예 #2</h3>
<ul>
  <li>X, Y의 공통된 숫자는 0으로만 구성되어 있기 때문에, 두 수의 짝꿍은 정수 0입니다. 따라서 “0”을 return합니다.</li>
</ul>

<h3 id="입출력-예-3">입출력 예 #3</h3>
<ul>
  <li>X, Y의 짝꿍은 10이므로, “10”을 return합니다.</li>
</ul>

<h3 id="입출력-예-4">입출력 예 #4</h3>
<ul>
  <li>X, Y의 짝꿍은 321입니다. 따라서 “321”을 return합니다.</li>
</ul>

<h3 id="입출력-예-5">입출력 예 #5</h3>
<ul>
  <li>지문에 설명된 예시와 같습니다.</li>
</ul>

<h1 id="나의-풀이-시간-초과-실패-코드">나의 풀이 (시간 초과 실패 코드)</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="kt">X</span><span class="p">:</span><span class="kt">String</span><span class="p">,</span> <span class="n">_</span> <span class="kt">Y</span><span class="p">:</span><span class="kt">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">arrX</span> <span class="o">=</span> <span class="kt">X</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="nv">$0</span> <span class="p">}</span>
    <span class="k">var</span> <span class="nv">arrY</span> <span class="o">=</span> <span class="kt">Y</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="nv">$0</span> <span class="p">}</span>
    <span class="k">var</span> <span class="nv">result</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="n">arrX</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="n">arrY</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
            <span class="k">if</span> <span class="n">arrX</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">arrY</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="p">{</span>
                <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="n">arrY</span><span class="p">[</span><span class="n">j</span><span class="p">]))</span>
                <span class="n">arrY</span><span class="o">.</span><span class="nf">remove</span><span class="p">(</span><span class="nv">at</span><span class="p">:</span> <span class="n">j</span><span class="p">)</span>  <span class="c1">//중복된 수는 지우기</span>
                <span class="k">break</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
        
    <span class="c1">//중복된 수</span>
    <span class="k">if</span> <span class="kt">Set</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
        <span class="k">return</span> <span class="s">"-1"</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="kt">Set</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span> <span class="o">==</span> <span class="s">"0"</span> <span class="p">{</span>
        <span class="k">return</span> <span class="s">"0"</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">sorted</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">&gt;</span> <span class="nv">$1</span> <span class="p">}</span><span class="o">.</span><span class="nf">reduce</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="o">+</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="다른-사람-풀이">다른 사람 풀이</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">Foundation</span>

<span class="kd">func</span> <span class="nf">solution</span><span class="p">(</span><span class="n">_</span> <span class="kt">X</span><span class="p">:</span><span class="kt">String</span><span class="p">,</span> <span class="n">_</span> <span class="kt">Y</span><span class="p">:</span><span class="kt">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">String</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">result</span><span class="p">:</span> <span class="p">[</span><span class="kt">String</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="mi">10</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">xCount</span> <span class="o">=</span> <span class="kt">X</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="o">==</span> <span class="kt">String</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">count</span>
        <span class="k">let</span> <span class="nv">yCount</span> <span class="o">=</span> <span class="kt">Y</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)</span> <span class="o">==</span> <span class="kt">String</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">count</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="kt">Array</span><span class="p">(</span><span class="nv">repeating</span><span class="p">:</span> <span class="kt">String</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="nv">count</span><span class="p">:</span> <span class="nf">min</span><span class="p">(</span><span class="n">xCount</span><span class="p">,</span> <span class="n">yCount</span><span class="p">))</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">isEmpty</span> <span class="p">?</span> <span class="s">"-1"</span> <span class="p">:</span> <span class="n">result</span><span class="o">.</span><span class="n">filter</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">==</span> <span class="s">"0"</span> <span class="p">}</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="n">result</span><span class="o">.</span><span class="n">count</span> <span class="p">?</span> <span class="s">"0"</span> <span class="p">:</span> <span class="n">result</span><span class="o">.</span><span class="nf">sorted</span><span class="p">(</span><span class="nv">by</span><span class="p">:</span> <span class="o">&gt;</span><span class="p">)</span><span class="o">.</span><span class="nf">joined</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="나의-풀이방법">나의 풀이방법</h1>
<ul>
  <li>11 ~ 15번 시간 초과문제로 다른사람 코드를 이용하여 풀었습니다.</li>
  <li>반복문 부분만 다른 사람풀이로 했더니 여전히 문제가 발생하여 return도 삼항연산자를 사용해야 통과할 수 있습니다.</li>
  <li>난이도가 올라갈 수록 시간초과 문제가 많이 발생하고 있다. 다양한 접근 방법을 생각해내야할듯!!!!</li>
</ul>

<p><br /></p>

<h1 id="다른사람-풀이">다른사람 풀이</h1>
<ul>
  <li>x의 최대 길이가 300만이라 공통되는 수 찾는 시간을 줄이는게 핵심인 것 같다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="swift" /><category term="coding test" /><category term="프로그래머스" /><category term="알고리즘" /><category term="숫자 짝꿍" /><summary type="html"><![CDATA[[프로그래머스/Swift] 숫자 짝꿍]]></summary></entry><entry><title type="html">[TIL] 내배캠 iOS앱 개발 공부 45일차 - 2024.04.30(화)</title><link href="http://localhost:4000/TIL/til45/" rel="alternate" type="text/html" title="[TIL] 내배캠 iOS앱 개발 공부 45일차 - 2024.04.30(화)" /><published>2024-04-30T00:00:00+09:00</published><updated>2024-04-30T00:00:00+09:00</updated><id>http://localhost:4000/TIL/til45</id><content type="html" xml:base="http://localhost:4000/TIL/til45/"><![CDATA[<h3 id="데일리-스크럼">데일리 스크럼</h3>
<ul>
  <li>정말 정말 오랜만에 다시 작성한 데일리 스크럼, 팀프로젝트하고 하다보니 잘 못썼는데 팀 변경 후 첫날 다시 작성했다.<br />
<img src="/assets/images/categories/til/2024-04-30-til45.png" alt="" /></li>
</ul>

<h3 id="알고리즘">알고리즘</h3>
<ul>
  <li>1~2주 전에 시간초과로 못풀었던 문제를 다시 풀었는데 역시나 시간 초과라 구글 검색으로 해결했다.</li>
  <li>정답은 맞는데… 시간초과가 발생하는 문제가 하나 둘 생기고 있다. ㅠ ㅠ</li>
  <li>풀이 보기
    <ul>
      <li><a href="https://limlogging.github.io/algorithm/%EC%88%AB%EC%9E%90%EC%A7%9D%EA%BF%8D/" target="_blank">숫자 짝꿍</a></li>
    </ul>
  </li>
</ul>

<h3 id="팀-적응">팀 적응</h3>
<ul>
  <li>프로젝트가 끝나면 찾아오는 새로운 팀편성 …. 새로운 팀원들과 인사하고 이야기하기 완료!</li>
</ul>

<h3 id="내일-목표">내일 목표</h3>
<ul>
  <li>내배캠 강의 듣기, 공부 내용 포스팅하기</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="TIL" /><category term="TIL" /><summary type="html"><![CDATA[내배캠 iOS앱 개발 공부 45일차 이야기 - 2024.04.30(화)]]></summary></entry><entry><title type="html">[UIKit] MVC(Model, View, Controller) 패턴이란?</title><link href="http://localhost:4000/UIKit/MVC/" rel="alternate" type="text/html" title="[UIKit] MVC(Model, View, Controller) 패턴이란?" /><published>2024-04-30T00:00:00+09:00</published><updated>2024-04-30T00:00:00+09:00</updated><id>http://localhost:4000/UIKit/MVC</id><content type="html" xml:base="http://localhost:4000/UIKit/MVC/"><![CDATA[<h1 id="mvc-패턴이란">MVC 패턴이란?</h1>
<ul>
  <li>MVC 패턴은 모델(Model), 뷰(View), 컨트롤러(Controller)의 약자</li>
  <li>소프트웨어 아키텍처 디자인 패턴 중 하나입니다. 이 패턴은 앱 또는 소프트웨어를 구성하는 세 가지 주요 구성 요소를 분리하여 각각의 역할을 할당합니다.</li>
</ul>

<h2 id="모델model">모델(Model)</h2>
<ul>
  <li>앱의 데이터와 비즈니스 로직을 담당합니다. (로직보다는 데이터 모델의 비중이 높은듯)</li>
  <li>데이터의 상태를 관리하고 조작합니다.</li>
  <li>주로 데이터 구조, 데이터베이스 연결, API 통신 등을 처리합니다.</li>
  <li>영화에 출연한 배우 정보가 담기는 데이터 모델</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">struct</span> <span class="kt">PersonResults</span><span class="p">:</span> <span class="kt">Decodable</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">results</span><span class="p">:</span> <span class="p">[</span><span class="kt">Person</span><span class="p">]</span>
<span class="p">}</span>

<span class="kd">struct</span> <span class="kt">Person</span><span class="p">:</span> <span class="kt">Decodable</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">id</span><span class="p">:</span> <span class="kt">Int</span>
    <span class="k">let</span> <span class="nv">name</span><span class="p">:</span> <span class="kt">String</span>
    <span class="k">let</span> <span class="nv">profilePath</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">knownFor</span><span class="p">:</span> <span class="p">[</span><span class="kt">KnownFor</span><span class="p">]</span>
    
    <span class="kd">enum</span> <span class="kt">CodingKeys</span><span class="p">:</span> <span class="kt">String</span><span class="p">,</span> <span class="kt">CodingKey</span> <span class="p">{</span>
        <span class="k">case</span> <span class="n">id</span>
        <span class="k">case</span> <span class="n">name</span>
        <span class="k">case</span> <span class="n">profilePath</span> <span class="o">=</span> <span class="s">"profile_path"</span>
        <span class="k">case</span> <span class="n">knownFor</span> <span class="o">=</span> <span class="s">"known_for"</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">struct</span> <span class="kt">KnownFor</span><span class="p">:</span> <span class="kt">Decodable</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">backdropPath</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">id</span><span class="p">:</span> <span class="kt">Int</span>
    <span class="k">let</span> <span class="nv">originalTitle</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">overview</span><span class="p">:</span> <span class="kt">String</span>
    <span class="k">let</span> <span class="nv">title</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">posterPath</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">name</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    <span class="k">let</span> <span class="nv">releaseDate</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
    
    <span class="kd">enum</span> <span class="kt">CodingKeys</span><span class="p">:</span> <span class="kt">String</span><span class="p">,</span> <span class="kt">CodingKey</span> <span class="p">{</span>
        <span class="k">case</span> <span class="n">backdropPath</span> <span class="o">=</span> <span class="s">"backdrop_path"</span>
        <span class="k">case</span> <span class="n">id</span>
        <span class="k">case</span> <span class="n">originalTitle</span> <span class="o">=</span> <span class="s">"original_title"</span>
        <span class="k">case</span> <span class="n">overview</span>
        <span class="k">case</span> <span class="n">title</span>
        <span class="k">case</span> <span class="n">posterPath</span> <span class="o">=</span> <span class="s">"poster_path"</span>
        <span class="k">case</span> <span class="n">name</span>
        <span class="k">case</span> <span class="n">releaseDate</span> <span class="o">=</span> <span class="s">"release_date"</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="뷰view">뷰(View)</h2>
<ul>
  <li>사용자에게 데이터를 시각적으로 표시합니다. (모델이 가지고 있는 데이터를 뷰/화면에 표시)</li>
  <li>사용자 인터페이스의 구성 요소를 표시하고 사용자 입력을 받습니다.</li>
  <li>주로 UI 코드와 관련된 로직을 처리합니다.
<img src="../../assets/images/categories/uikit/2024-04-30-MVC.png" alt="뷰" /></li>
</ul>

<h2 id="컨트롤러controller">컨트롤러(Controller)</h2>
<ul>
  <li>컨트롤러는 모델과 뷰 간의 상호 작용을 관리
    <ul>
      <li>사용자 입력을 받아 모델에 전달하고, 모델로부터 데이터를 가져와 뷰에 전달합니다.</li>
    </ul>
  </li>
  <li>비즈니스 로직과 사용자 인터페이스 간의 통신을 조율합니다.</li>
</ul>

<h1 id="mvc-모델-장단점">MVC 모델 장단점</h1>
<h2 id="장점">장점</h2>
<ul>
  <li>소프트웨어를 세 가지 주요 부분으로 분할하여 구조화하기 때문에 개발자들에게 직관적이고 이해하기 쉬운 구조를 제공합니다.</li>
  <li>모델(Model), 뷰(View), 컨트롤러(Controller)로 구분하여 각 부분이 서로 독립적으로 작동하면서 전체적인 애플리케이션 로직을 구성합니다.</li>
</ul>

<h2 id="단점">단점</h2>
<ul>
  <li>컨트롤러가 매우 비대해지는 경향이 있습니다.</li>
  <li>이는 하나의 뷰 컨트롤러에 많은 역할과 책임이 집중되어 복잡성을 증가시키고 유지보수를 어렵게 만듭니다.</li>
  <li>테스트 코드를 작성하기가 힘듭니다.</li>
  <li>뷰 컨트롤러안에 레이블, 버튼도 넣고, 모델도 선언하고 … (코드로 UI작성 시)
    <div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// MARK: - 배우 정보 확인</span>
<span class="kd">class</span> <span class="kt">ProfileViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>  
  <span class="k">var</span> <span class="nv">person</span><span class="p">:</span> <span class="kt">Person</span><span class="p">?</span>         <span class="c1">//TMDB받아온 데이터를 담을 구조체 타입 변수</span>
    
  <span class="c1">// MARK: - 프로필 사진과 이름이 담기는 뷰</span>
  <span class="k">var</span> <span class="nv">profileView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="o">=</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
      <span class="n">view</span><span class="o">.</span><span class="n">clipsToBounds</span> <span class="o">=</span> <span class="kc">true</span>
      <span class="n">view</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
      <span class="k">return</span> <span class="n">view</span>
  <span class="p">}()</span>
    
  <span class="c1">// MARK: - 배우 프로필 사진</span>
  <span class="k">var</span> <span class="nv">profileImageView</span><span class="p">:</span> <span class="kt">UIImageView</span> <span class="o">=</span> <span class="p">{</span>
      <span class="k">let</span> <span class="nv">imageView</span> <span class="o">=</span> <span class="kt">UIImageView</span><span class="p">()</span>
      <span class="n">imageView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">75</span>
      <span class="n">imageView</span><span class="o">.</span><span class="n">clipsToBounds</span> <span class="o">=</span> <span class="kc">true</span>
      <span class="n">imageView</span><span class="o">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="kc">false</span>
      <span class="k">return</span> <span class="n">imageView</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="마무리">마무리</h1>
<ul>
  <li>각자의 역할과 책임을 나누기위해서 MVC 패턴 사용한다. (단순하게 코드 나누기)</li>
  <li>뷰와 뷰 컨트롤러가 하나로 합쳐지는 경우가 많지만 그래도 MVC 패턴이다.</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="UIKit" /><category term="swift" /><category term="iOS" /><category term="MVC" /><category term="MVC 패턴" /><summary type="html"><![CDATA[MVC 패턴이란?]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 4 끝</title><link href="http://localhost:4000/sparta/mega6box4/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 4 끝" /><published>2024-04-29T00:00:00+09:00</published><updated>2024-04-29T00:00:00+09:00</updated><id>http://localhost:4000/sparta/mega6box4</id><content type="html" xml:base="http://localhost:4000/sparta/mega6box4/"><![CDATA[<h1 id="영화-예약-앱-만들기-4">영화 예약 앱 만들기 4</h1>
<ul>
  <li>지난 이야기
    <ul>
      <li><a href="https://limlogging.github.io/sparta/mega6box1/" target="_blank">영화 예약 앱 만들기 1</a></li>
      <li><a href="https://limlogging.github.io/sparta/mega6box2/" target="_blank">영화 예약 앱 만들기 2</a></li>
      <li><a href="https://limlogging.github.io/sparta/mega6box3/" target="_blank">영화 예약 앱 만들기 3</a></li>
    </ul>
  </li>
</ul>

<h1 id="목금토일-이야기">목,금,토,일 이야기</h1>
<ul>
  <li>목요일
    <ul>
      <li>화요일에 네트워크 작업을 할 네트워크 컨트롤러 파일을 만들고 싱글톤 패턴으로 구현하였다. 각자 맡은 부분을 개발하면서 소스코드를 합치지 않은 상태였고 다들 새벽까지 열심히 하길래 문제 없이 진행되는 줄 알았다.</li>
      <li>하지만 네트워크 컨트롤러 파일 내용을 다른 팀원들이 이해하지 못해서 API를 사용하여 데이터 불러오는 작업이 목요일까지 아무도 하지 못했던 것이다 ㅠ ㅠ (작성된 코드 설명이 필요하다고 하셔서 그때 알게되었다.)</li>
      <li>그래서 포스트맨을 사용하여 JSON 데이터를 확인하고 구조체를 생성, 컴플리션 핸들러 동기/비동기에 관련된 내용을 한시간 가량 팀원들에게 설명을하게 되면서 나도 다시 공부할 수 있었다.</li>
      <li>수정한 내용을 깃허브에 올리고 난 후 팀원들에게 공유했는데 2~3시간 후 팀 회의를 통해 어떤 문제(구조체옵셔널) 때문에 로직이 동작을 안했다고 이야기를 하는데 그 내용이 아까 내가 화면을 공유하면서 다 수정한 내용이었고 깃허브에도 올려놓은 내용이었다. (파일이 누락되어 다시 올려놨다고해서 2번 전달)</li>
      <li>아까 다 알려준 내용 깃허브에도 올려놨는데 확인안했냐고 했더니 확인을 안했다고하더라… 조금 당황하고 섭섭했지만 소통에 문제가 있었던 것 같다.</li>
    </ul>
  </li>
  <li>금요일
    <ul>
      <li>영화 정보를 받아오는 부분을 다른 팀원들이 목요일까지 하지 못해서 내가 맡은 부분에서 디테일한 부분은 나중에 하기로하고 다른팀원들을 도와주기로했다. 영화 검색하는 부분에서 어려운 부분이 있다고해서 화면을 공유하면서 라이브 코딩을 하면서 진행했다. (내가 잘해서가 아니라 팀원들이 어떻게 데이터를 받아오는지 궁금하다고 했고 잘 몰라서 구글검색하면서 팀원들과 같이 작업했다.)</li>
      <li>영화 검색으로 데이터를 가져오고 컬렉션뷰에 데이터가 들어간것까지 확인하고 디테일한 작업은 담당자가 하기로했다.</li>
      <li>각자 브랜치를 만들고 맡은 내용을 관리하다가 merge 작업을 하면서 충돌이 발생하고 pull 받고 진행해도 Push가 안되는 등 깃허브 사용에 문제가 많았다. (나 포함 다들 깃허브 사용에 미숙했다.)</li>
      <li>팀원들 중 깃허브 데스크탑 사용에 익숙하신 분이 있어 주로 merge 작업을 해주셨으나 파일을 수동으로 옮기면서 참조로 추가가되고 깃허브 데스크탑도 원활하지 못했다. 지난번에는 내가 merge 담당으로 깃허브 홈페이지에서 풀 리퀘스트로 작업하고 충돌이 많이 없었으나 이번에는 작업을 지켜보는 입장에서 답답한 부분도 많았다. (지난번 팀원들도 나를 답답하게 생각했을것이다.) 하지만 많이 알아야 주도적으로 작업할 수 있으니 지켜보면서 다른 사람의 방법도 익히는 좋은 시간이었다.</li>
    </ul>
  </li>
  <li>토요일
    <ul>
      <li>우여곡절 끝에 merge는 되었고 디테일한 부분을 작업하느라 오후 2시부터 일요일 새벽까지 작업하였다.</li>
      <li>새벽에도 열심히 작업하는 우리 팀원들 정말 대단… 정말 많이 배웠습니다. 💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻💪🏻
  <img src="../../assets/images/categories/sparta/2024-04-29-mega6box.png" alt="" /></li>
    </ul>
  </li>
  <li>일요일
    <ul>
      <li>캔바에서 발표자료 작성을 다 같이 진행하고 메인브랜치에 적용, 리드미 작성을 진행하였다.</li>
    </ul>
  </li>
</ul>

<h1 id="최종-결과물">최종 결과물</h1>
<p><img src="../../assets/images/categories/sparta/2024-04-29-mega6box1.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box2.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box3.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box4.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box5.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box6.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box7.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box8.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box9.png" width="200" />
<img src="../../assets/images/categories/sparta/2024-04-29-mega6box10.png" width="200" /></p>

<h1 id="문제점-및-해결">문제점 및 해결</h1>
<p><img src="../../assets/images/categories/sparta/2024-04-29-mega6box11.png" alt="" /></p>

<h1 id="느낀점">느낀점</h1>
<p><img src="../../assets/images/categories/sparta/2024-04-29-mega6box12.png" alt="" /></p>

<h1 id="마무리">마무리</h1>
<ul>
  <li>3주 가까이 캠켜놓고 공부했더니 오랜시간 함께한듯한 우리 팀원들, 성향도 비슷해 큰 문제없이 마무리 잘 할 수 있었던 것 같다.</li>
  <li>팀원들을 통해서 많이 배울 수 있었다. 🔥🔥🔥🔥🔥🔥</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="sparta" /><category term="앱 개발 숙련" /><category term="movie app" /><category term="ios" /><category term="uikit" /><category term="swift" /><category term="영화 앱" /><summary type="html"><![CDATA[iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 4 끝]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 앱 만들기 / KPT 회고</title><link href="http://localhost:4000/sparta/mega6boxKPT/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 앱 만들기 / KPT 회고" /><published>2024-04-29T00:00:00+09:00</published><updated>2024-04-29T00:00:00+09:00</updated><id>http://localhost:4000/sparta/mega6boxKPT</id><content type="html" xml:base="http://localhost:4000/sparta/mega6boxKPT/"><![CDATA[<h1 id="앱-개발-숙련-팀-프로젝트-kpt-회고">앱 개발 숙련 팀 프로젝트 KPT 회고</h1>
<p>앱 개발 숙련 팀 프로젝트 발표가 끝났습니다. <br />
팀원들과 프로젝트를 통해 느낀 “Keep (계속할 것)”, “Problem (문제)”, “Try (시도할 것)”의 세 가지 요소를 토대로 프로젝트의 경험을 돌아보고 이야기를 나누었습니다.</p>

<h2 id="keep">Keep</h2>
<ul>
  <li>팀원끼리 모르는것 물어보기</li>
  <li>서로 도우면서 작업하기</li>
  <li>피그마, 캔버스 등을 사용한 협업하기</li>
</ul>

<h2 id="problem">Problem</h2>
<ul>
  <li>커밋메시지 정리
    <ul>
      <li>문제점 : 시간이 갈수록 규칙에 벗어난 커밋메시지 작성</li>
      <li>해결방안 : 바쁘더라도 규칙을 지키기</li>
    </ul>
  </li>
  <li>너무 많은 양의 StoryBoard
    <ul>
      <li>문제점 : 코드베이스가 익숙치 않아 스토리보드 사용</li>
      <li>해결방안 : 코드로 많은 연습과 공부가 필요</li>
    </ul>
  </li>
  <li>TMDB API의 일부 이미지 및 동영상을 활용하지 못한 것</li>
</ul>

<h2 id="try">Try</h2>
<ul>
  <li>코드 컨벤션 만들기</li>
  <li>싱글톤 패턴 장단점 및 사용 이유 체크</li>
  <li>코드베이스로 UI 적용하기</li>
  <li>역할 및 진행 과정 세분화 해서 정리</li>
  <li>깃허브 공부하기</li>
</ul>

<h1 id="마무리">마무리</h1>
<ul>
  <li>지난번 프로젝트보다 기획 단계에서 디자인 협업툴을 사용하여 충분한 이야기를 나누고 프로젝트를 시작했습니다.</li>
  <li>깃허브 충돌로 인해 clone과 강제 push등을 사용하여 아쉬운점이 많습니다.</li>
  <li>노션을 적극적으로 활용하여 현재까지 진행상황과 단기적인 목표를 잡고 소통이 더 필요할 것 같습니다.</li>
</ul>

<p>이번 프로젝트를 돌아보고 다음 프로젝트에서 발전된 방향으로 프로젝트를 진행하도록 하겠습니다.</p>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="KPT 회고" /><summary type="html"><![CDATA[iOS 앱 개발 숙련 팀 프로젝트 이후 KPT 회고 작성하기]]></summary></entry><entry><title type="html">[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 3</title><link href="http://localhost:4000/sparta/mega6box3/" rel="alternate" type="text/html" title="[내배캠] iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 3" /><published>2024-04-24T00:00:00+09:00</published><updated>2024-04-24T00:00:00+09:00</updated><id>http://localhost:4000/sparta/mega6box3</id><content type="html" xml:base="http://localhost:4000/sparta/mega6box3/"><![CDATA[<h1 id="영화-예약-앱-만들기-3">영화 예약 앱 만들기 3</h1>
<ul>
  <li>지난 이야기
    <ul>
      <li><a href="https://limlogging.github.io/sparta/mega6box1/" target="_blank">영화 예약 앱 만들기 1</a></li>
      <li><a href="https://limlogging.github.io/sparta/mega6box2/" target="_blank">영화 예약 앱 만들기 2</a></li>
    </ul>
  </li>
</ul>

<h1 id="역할-배분">역할 배분</h1>
<ul>
  <li>태담: 런치스크린, 회원가입/로그인</li>
  <li>유진: 메인페이지, 마이페이지, 내 정보 관리</li>
  <li>민희: 예매, 검색</li>
  <li>형섭: 영화 세부정보, 감독/등장인물</li>
</ul>

<h1 id="영화-상세-페이지-구현-상황">영화 상세 페이지 구현 상황</h1>
<ul>
  <li>현재까지 구현한 내용입니다.</li>
  <li>오토레이아웃을 잡아야하는데 하나라도 어긋나는 경우 배우 슬라이드 이미지가 사라져서 신경써서 수정이 필요합니다. ㅠ</li>
  <li>배우 얼굴을 선택하면 필모그래피페이지로 넘어갑니다. 
<img src="../../assets/images/categories/sparta/2024-04-24-mega6box9.png" alt="영화 상세 페이지" /></li>
</ul>

<h1 id="배우-필모그래피-페이지-구현-상황">배우 필모그래피 페이지 구현 상황</h1>
<ul>
  <li>여기 페이지는 코드로만 작성했다. 상세페이지보다는 그나마 수월하게 구현완료 
<img src="../../assets/images/categories/sparta/2024-04-24-mega6box10.png" alt="배우 필모그래피 페이지" /></li>
</ul>

<h1 id="내일-할-일">내일 할 일</h1>
<ul>
  <li>오토레이아웃 수정 및 디테일 수정</li>
</ul>]]></content><author><name>HyeongSub Lim</name></author><category term="sparta" /><category term="sparta" /><category term="앱 개발 숙련" /><category term="movie app" /><category term="ios" /><category term="uikit" /><category term="swift" /><category term="영화 앱" /><summary type="html"><![CDATA[iOS 앱 개발 숙련 팀 프로젝트 - 영화 예약 앱 만들기 3]]></summary></entry></feed>